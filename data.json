[{"pk": "06ed3c2f50ac9fb1d77c2e5d176f50ed", "model": "sessions.session", "fields": {"expire_date": "2012-08-30T12:40:20.843Z", "session_data": "ZWRiODI1MzYxNjI3NzAwNmYzOWJiMmUzY2QwMmQwMGE5NzNjYTNiMzqAAn1xAShVEl9hdXRoX3Vz\nZXJfYmFja2VuZHECVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZHED\nVQ1fYXV0aF91c2VyX2lkcQRLAXUu\n"}}, {"pk": "92dc2016faf78bd351f17de58721f4f2", "model": "sessions.session", "fields": {"expire_date": "2012-09-14T00:43:58.123Z", "session_data": "ZjJmNWUyOGVmNTVmYzFjM2ZiNzNhZDNjYjZhMDY4ZjMzZTFiZDI3ZDqAAn1xAS4=\n"}}, {"pk": "6453c3cc332a41e9dcd3407318f5cd04", "model": "sessions.session", "fields": {"expire_date": "2012-09-20T08:04:52.195Z", "session_data": "ZWRiODI1MzYxNjI3NzAwNmYzOWJiMmUzY2QwMmQwMGE5NzNjYTNiMzqAAn1xAShVEl9hdXRoX3Vz\nZXJfYmFja2VuZHECVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZHED\nVQ1fYXV0aF91c2VyX2lkcQRLAXUu\n"}}, {"pk": "361aa36802e1a9cde34550359c046f43", "model": "sessions.session", "fields": {"expire_date": "2012-09-27T17:45:24.329Z", "session_data": "ZjJmNWUyOGVmNTVmYzFjM2ZiNzNhZDNjYjZhMDY4ZjMzZTFiZDI3ZDqAAn1xAS4=\n"}}, {"pk": "4ade9de4585c8c83700e533bd6323c4c", "model": "sessions.session", "fields": {"expire_date": "2012-10-15T13:58:45.197Z", "session_data": "ZjJmNWUyOGVmNTVmYzFjM2ZiNzNhZDNjYjZhMDY4ZjMzZTFiZDI3ZDqAAn1xAS4=\n"}}, {"pk": "4d45ca3eb57dfda20f4c132996375bb2", "model": "sessions.session", "fields": {"expire_date": "2012-10-30T23:14:39.382Z", "session_data": "ZjJmNWUyOGVmNTVmYzFjM2ZiNzNhZDNjYjZhMDY4ZjMzZTFiZDI3ZDqAAn1xAS4=\n"}}, {"pk": "c60038e544b5b7fd865bc743d9087f38", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T17:03:45.808Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "b4f6b65bcf3d1fabc956320bc9d1f211", "model": "sessions.session", "fields": {"expire_date": "2012-11-12T12:04:00.146Z", "session_data": "NDVkMTIyY2E4MmQ3NGY0MTlhNWE2YjIyMDZmYmI1ZjQ2NWEyNGE3MDqAAn1xAShVCm1pbl9jb250\naWdOVRBhZnRlcl9ldmFsdWF0aW9uiXUu\n"}}, {"pk": "67b70bcad97b123edebf934e821272a3", "model": "sessions.session", "fields": {"expire_date": "2012-11-12T12:04:56.681Z", "session_data": "NDVkMTIyY2E4MmQ3NGY0MTlhNWE2YjIyMDZmYmI1ZjQ2NWEyNGE3MDqAAn1xAShVCm1pbl9jb250\naWdOVRBhZnRlcl9ldmFsdWF0aW9uiXUu\n"}}, {"pk": "6ed1efba8de31b968d8f1c6cdfc29296", "model": "sessions.session", "fields": {"expire_date": "2012-11-12T12:18:42.454Z", "session_data": "NDVkMTIyY2E4MmQ3NGY0MTlhNWE2YjIyMDZmYmI1ZjQ2NWEyNGE3MDqAAn1xAShVCm1pbl9jb250\naWdOVRBhZnRlcl9ldmFsdWF0aW9uiXUu\n"}}, {"pk": "18391a0f3edf41847ed510bfa0c70760", "model": "sessions.session", "fields": {"expire_date": "2012-11-27T15:28:38.982Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "65fbc0e6cff5140e3a7113fb7567e8a9", "model": "sessions.session", "fields": {"expire_date": "2013-02-03T16:49:26.026Z", "session_data": "NDVmYjVhMDM2MzA2OTVmMTJiMDk1YzE1ODRkYmRjODcwMGYyZjI3MTqAAn1xAShVEl9hdXRoX3Vz\nZXJfYmFja2VuZFUpZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmRVCm1p\nbl9jb250aWdLyFUNX2F1dGhfdXNlcl9pZEsCVRVkZWZhdWx0X2RhdGFfc2V0X25hbWVYEgAAAEUu\nIGNvbGksIGZpcnN0IDEwS1UQYWZ0ZXJfZXZhbHVhdGlvbol1Lg==\n"}}, {"pk": "9d1b3310a37068643aeefecb44dd8c1d", "model": "sessions.session", "fields": {"expire_date": "2012-12-21T15:40:03.419Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "5232fdda7b37e3e7d763be03d756edfd", "model": "sessions.session", "fields": {"expire_date": "2012-12-21T15:40:17.345Z", "session_data": "Yzc3NTQyZGQzNzFmNzI2NmNjOWNiMWQ2NzQ0ZDU0ZmVmZmU3ZDExZTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbnECiXMu\n"}}, {"pk": "547208aa69c95e9ca2fec81f064e6574", "model": "sessions.session", "fields": {"expire_date": "2012-12-28T14:24:33.115Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "9e78e9af89e6b4b4b663eeba66a5b5c7", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T00:20:25.530Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "f6f2c72b5b99dedf4133e3603d7c3b53", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T17:04:18.584Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "2e71031cc8cd552e073659b170bff300", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T20:11:14.158Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "5037750304f8ce3681b36c830dd3f25b", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T21:32:24.377Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "4c164146c5a0f9847a0d58625a2bdf63", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T21:39:14.673Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "78c0352fbf8987088be0b5b461e51470", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T22:39:22.836Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "1e572624ca8f86f853ff284ea654a2cd", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T22:41:05.759Z", "session_data": "Yzc3NTQyZGQzNzFmNzI2NmNjOWNiMWQ2NzQ0ZDU0ZmVmZmU3ZDExZTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbnECiXMu\n"}}, {"pk": "40d4accf4c551fca659c344931503f28", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T22:55:48.468Z", "session_data": "ZjJmNWUyOGVmNTVmYzFjM2ZiNzNhZDNjYjZhMDY4ZjMzZTFiZDI3ZDqAAn1xAS4=\n"}}, {"pk": "1666ad6e51ec89567f9b50aa8330f3ee", "model": "sessions.session", "fields": {"expire_date": "2012-12-29T23:25:32.302Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "6007f6e790e2d1cde99f95576821393f", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:00:04.930Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "f53d1fe8c0e19d47f04df0240a1e4e1c", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:03:27.998Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "a430b40e74f62708fee68a4228476aea", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:08:22.426Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "b2e56f9a902acc65ec29c070d9da26f2", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:11:07.554Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "09581ca30f76fba50fa8ab1dc1fa7e09", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:13:22.262Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "544e86047a01d2f684a14fdc13a3b64c", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:18:13.381Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "ec823cb4b1d9e72251316bc6456977ba", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:19:46.189Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "a62214f408c583918d5d8b6e49b49860", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:23:37.606Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "d5b742ba14c98476115ad48da5174532", "model": "sessions.session", "fields": {"expire_date": "2012-12-30T00:34:44.191Z", "session_data": "ZWVlYjg2ZDJkMzU0ZjlmODA3Y2IzYjQ1YjBmMjNjZDEwMzkxZmMwOTqAAn1xAShVCm1pbl9jb250\naWdN9AFVEGFmdGVyX2V2YWx1YXRpb26JdS4=\n"}}, {"pk": "1938be2639e2a9f11d73df6fc61ac03c", "model": "sessions.session", "fields": {"expire_date": "2013-02-03T14:44:54.867Z", "session_data": "NTkyOTFjY2NiOTMwMDU2MzE4NjU0MWNkZGE1ODdlMzQyOWNmYzIyOTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbolzLg==\n"}}, {"pk": "07e9493f8510e3709d72c4ba86bba27a", "model": "sessions.session", "fields": {"expire_date": "2013-02-18T15:08:31.272Z", "session_data": "Yzc3NTQyZGQzNzFmNzI2NmNjOWNiMWQ2NzQ0ZDU0ZmVmZmU3ZDExZTqAAn1xAVUQYWZ0ZXJfZXZh\nbHVhdGlvbnECiXMu\n"}}, {"pk": 1, "model": "sites.site", "fields": {"domain": "example.com", "name": "example.com"}}, {"pk": 27, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.864Z", "object_repr": "nod.only@gmail.com", "object_id": "1", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 26, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.859Z", "object_repr": "vladsaveliev@me.com", "object_id": "2", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 25, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.855Z", "object_repr": "vladislav.sav@gmail.com", "object_id": "3", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 24, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.850Z", "object_repr": "nod.bot1@gmail.com", "object_id": "4", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 23, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.845Z", "object_repr": "vlad.saveliev@gmail.com", "object_id": "5", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 22, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.841Z", "object_repr": "ndasd@dd.ru", "object_id": "6", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 21, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.838Z", "object_repr": "dfad.rer@ru.ru", "object_id": "7", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 20, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.835Z", "object_repr": "dasdas@dsd.ru", "object_id": "8", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 19, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.831Z", "object_repr": "dasd111as@dsd.ru", "object_id": "9", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 18, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.820Z", "object_repr": "dasd111sadas@dsd.ru", "object_id": "10", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 17, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.815Z", "object_repr": "dasd111sadssas@dsd.ru", "object_id": "11", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 16, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.808Z", "object_repr": "dasd111sadsssssas@dsd.ru", "object_id": "12", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 15, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.804Z", "object_repr": "dasd111sadssssssssas@dsd.ru", "object_id": "13", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 14, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.800Z", "object_repr": "ddsadasda@dafad.eu", "object_id": "14", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 13, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.788Z", "object_repr": "vladislav.v.saveliev@gmail.com", "object_id": "15", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 12, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.779Z", "object_repr": "dddd@gmail.com", "object_id": "16", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 11, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.771Z", "object_repr": "dsdasd@gmail.com", "object_id": "17", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 10, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.754Z", "object_repr": "u@u.com", "object_id": "18", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 9, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.741Z", "object_repr": "a@1.com", "object_id": "19", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 8, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.724Z", "object_repr": "a@2.com", "object_id": "20", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 7, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.719Z", "object_repr": "1@a.com", "object_id": "21", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 6, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-12-15T23:30:56.713Z", "object_repr": "1@a.aa", "object_id": "22", "change_message": "", "user": 2, "content_type": 22}}, {"pk": 5, "model": "admin.logentry", "fields": {"action_flag": 1, "action_time": "2012-09-18T09:15:59.168Z", "object_repr": "admin", "object_id": "2", "change_message": "", "user": 1, "content_type": 3}}, {"pk": 4, "model": "admin.logentry", "fields": {"action_flag": 2, "action_time": "2012-09-18T09:15:45.703Z", "object_repr": "vladsaveliev", "object_id": "1", "change_message": "Changed username and password.", "user": 1, "content_type": 3}}, {"pk": 3, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-09-06T08:07:50.937Z", "object_repr": "dsddfs", "object_id": "4", "change_message": "", "user": 1, "content_type": 8}}, {"pk": 2, "model": "admin.logentry", "fields": {"action_flag": 1, "action_time": "2012-09-06T08:07:13.426Z", "object_repr": "dsddfs", "object_id": "4", "change_message": "", "user": 1, "content_type": 8}}, {"pk": 1, "model": "admin.logentry", "fields": {"action_flag": 3, "action_time": "2012-08-16T17:00:22.932Z", "object_repr": "Ppevzner", "object_id": "3", "change_message": "", "user": 1, "content_type": 8}}, {"pk": 1, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5cade6b9-cbf1-48b1-8e64-129cb4275ffc", "date_done": "2012-08-14T16:19:31.807Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 2, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2a7a6976-c1e7-45ad-abf4-fac32b438438", "date_done": "2012-08-14T16:52:10.442Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 3, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e1db8544-680b-4d7a-b90d-0852b052f6bb", "date_done": "2012-08-14T16:56:54.913Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 4, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6d164033-ff52-487f-998f-812703a50ac8", "date_done": "2012-08-14T17:51:16.701Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 5, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "371f05f2-1871-471d-b5dc-744add5668f3", "date_done": "2012-08-14T17:51:58.915Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 6, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7626a2ea-d7b9-4568-8b44-83640a8e4522", "date_done": "2012-08-14T17:52:58.310Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 7, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e1372d17-800e-4ed9-ba60-9d190286455a", "date_done": "2012-08-14T17:54:53.142Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 8, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "8e21eb0e-feca-42a7-8877-3ba8f553e69d", "date_done": "2012-08-14T17:55:41.691Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 9, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "98f59dca-ee5b-4fc2-beb1-e76a7067a589", "date_done": "2012-08-14T18:01:05.834Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 10, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9a2396b0-875c-4fb6-9d6c-11b8822e4238", "date_done": "2012-08-14T18:01:50.111Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 11, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e8abfc39-f182-490e-9e7b-6d36f3650de4", "date_done": "2012-08-14T18:03:11.836Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 12, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "10d4bf28-b5cf-404c-9cd8-aeafef64bcf1", "date_done": "2012-08-14T18:04:37.784Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 13, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "cf9fca26-429f-44e9-ac64-d1db56a9ee7d", "date_done": "2012-08-14T18:09:26.481Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 14, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "305c61e7-2e0c-4438-8171-30d9d4b821a0", "date_done": "2012-08-14T18:13:49Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 15, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f801c341-14b4-4023-9e72-6ea2a4faf139", "date_done": "2012-08-14T18:14:04.504Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 16, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "bcf3200d-6a58-44b2-a592-5f83605c2c88", "date_done": "2012-08-14T18:14:41.993Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 17, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "142b378a-f57f-4f88-83fa-8899342aae6d", "date_done": "2012-08-15T12:57:03.805Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 18, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f6d43f45-fd7b-46bb-85af-1afb31156530", "date_done": "2012-08-15T13:15:21.830Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 19, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "91fdd4a8-bce3-4d24-8170-de6f78eef97a", "date_done": "2012-08-15T18:44:01.578Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 20, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0918aeb6-8cbd-41ce-a0b0-bf6e0ad7cd2d", "date_done": "2012-08-15T18:50:49.321Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 21, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "33891d81-e2b9-4289-8133-26cc1a98c3f7", "date_done": "2012-08-15T21:19:29.899Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 22, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7725faaf-8d40-4c0d-a2ad-fb562294808b", "date_done": "2012-08-15T21:30:09.796Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 23, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "341976c4-6e56-4281-a21d-5ac960ffae2c", "date_done": "2012-08-15T21:42:32.709Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 24, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9345b479-7fe3-4501-bf66-e08d40fe06ee", "date_done": "2012-08-15T21:43:15.576Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 25, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5dd9a2e2-a222-4fbf-979b-a2352f786323", "date_done": "2012-08-15T21:44:54.262Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 26, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4600590d-59ab-4d83-9fae-be0e2521ebf9", "date_done": "2012-08-15T21:49:17.125Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 27, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d0ff5150-138c-4cb9-aaac-74b10f00e521", "date_done": "2012-08-15T21:51:20.861Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 28, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2f500354-715d-4318-8b15-3da818f291ca", "date_done": "2012-08-15T21:52:00.859Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 29, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1bd5ca38-bf3a-4855-9225-0eb6c5266cbe", "date_done": "2012-08-15T21:52:36.495Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 30, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "915d9bec-430e-4304-97f1-8f1ebe32fbe9", "date_done": "2012-08-15T21:53:44.100Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 31, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c1763b9e-94b8-48a6-a5cc-174bc1b03be1", "date_done": "2012-08-15T21:54:08.839Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 32, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f4c4edb6-cc46-4224-8754-34672716079f", "date_done": "2012-08-15T21:54:39.052Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 33, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f785ba26-5427-4f2b-aa31-1deb57eb478a", "date_done": "2012-08-15T21:55:06.083Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 34, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "efade714-1fa5-452e-bc48-7a05aa8b3749", "date_done": "2012-08-15T22:01:56.539Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 35, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "eca9f60e-6ef7-4282-a73f-829a9836be5c", "date_done": "2012-08-15T22:03:23.673Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 36, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d96386e9-4e2e-4e15-8f46-f03bf5d77222", "date_done": "2012-08-15T22:04:55.780Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 37, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b82cd8dc-3367-4dfc-8e0c-49f05c8617c0", "date_done": "2012-08-15T22:06:44.554Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 38, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2c361ace-9ab8-4a84-85e7-a700d9616818", "date_done": "2012-08-15T22:13:33.803Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 39, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "32f5b910-1089-4187-9eed-187163a767ae", "date_done": "2012-08-15T22:24:05.167Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 40, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6c6cf9ae-6212-4fc5-b14b-92729aee555f", "date_done": "2012-08-15T22:25:46.015Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 41, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f0d9ff2e-51f3-498c-b7be-cc589326e989", "date_done": "2012-08-15T22:28:03.097Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 42, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a523a9b7-8c0d-47d8-94dc-8ba42c3893aa", "date_done": "2012-08-15T22:38:15.019Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 43, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5bc2e0db-5d0a-442d-b89d-bf453e7401fb", "date_done": "2012-08-15T22:42:58.728Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 44, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f8306da8-5f0d-4038-abce-8ddd2b89c4af", "date_done": "2012-08-15T22:43:54.119Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 45, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "00af93f9-4b3b-41ad-9362-687e6c2cb7c3", "date_done": "2012-08-15T22:48:00.621Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 46, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5efa7b71-4256-4b4a-9b72-07957df5a2c0", "date_done": "2012-08-15T22:49:02.272Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 47, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "21e67cc3-f3da-4e32-a23b-6aabd8875702", "date_done": "2012-08-15T22:50:24.120Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 48, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "48f1beab-b043-4086-a5aa-b0c1c2c516bf", "date_done": "2012-08-16T06:37:23.709Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 49, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4d7416c7-acbe-4708-851a-204b01aab99e", "date_done": "2012-08-16T06:42:05.785Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 50, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "91c6cc46-c826-458b-8093-2d407ca9e001", "date_done": "2012-08-16T06:42:55.256Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 51, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d379e00b-72a2-4858-8bd1-91f0194dde14", "date_done": "2012-08-16T06:43:35.828Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 52, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b42efc09-7f4f-4719-bda9-0d643a4beaaf", "date_done": "2012-08-16T06:44:27.003Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 53, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "ae22388f-a327-4c50-984d-8b29511329b3", "date_done": "2012-08-16T06:49:57.155Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 54, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "97cbe205-f324-4763-a5a6-2feef1f38f50", "date_done": "2012-08-16T06:54:02.822Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 55, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "eb498846-22a3-433d-879c-35a52273a8d6", "date_done": "2012-08-16T06:54:28.295Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 56, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9eb09203-e86e-4952-b4f6-0caae22ede44", "date_done": "2012-08-16T06:55:27.833Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 57, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "57e34eb9-08a0-4d0c-b073-4063487ff45f", "date_done": "2012-08-16T09:03:35.639Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 58, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a8043eba-1ec8-4ce5-9ca8-28ead38a65ac", "date_done": "2012-08-16T09:05:04.053Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 59, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "186f8af8-2792-4569-8213-4513752d5d84", "date_done": "2012-08-16T11:24:22.134Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 60, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b402d6fb-30cb-49a5-9152-94f661c60970", "date_done": "2012-08-16T14:07:20.391Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 61, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a1c4eada-daee-4045-872d-65767a80cd09", "date_done": "2012-08-16T14:15:47.086Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 62, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a8216f90-0845-4510-966a-b926e2c056b0", "date_done": "2012-08-16T16:40:04.206Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 63, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f1a6a8be-8d9f-495d-8796-01929987cff2", "date_done": "2012-08-16T17:08:56.656Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 64, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "ebac1f79-8a7b-4083-b95b-ed034157ddf7", "date_done": "2012-09-04T22:23:45.538Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 174, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 65, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "c9a137ad-f0d8-44bb-bc27-b98a3ab9ac6b", "date_done": "2012-09-04T22:23:45.537Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 174, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 66, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "ace6ca41-ef6b-42df-aa17-0088d0450b86", "date_done": "2012-09-04T22:24:11.188Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs3zK9YDADbbBgc=", "result": "gAJjYmlsbGlhcmQuZXhjZXB0aW9ucwpXb3JrZXJMb3N0RXJyb3IKcQFVKFdvcmtlciBleGl0ZWQgcHJlbWF0dXJlbHkgKGV4aXRjb2RlOiAwKS5xAoVxA1JxBC4=", "hidden": false}}, {"pk": 67, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "7bdcc816-46f0-43a5-93bb-d940a68b78a5", "date_done": "2012-09-04T22:25:08.073Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs3zK9YDADbbBgc=", "result": "gAJjYmlsbGlhcmQuZXhjZXB0aW9ucwpXb3JrZXJMb3N0RXJyb3IKcQFVKFdvcmtlciBleGl0ZWQgcHJlbWF0dXJlbHkgKGV4aXRjb2RlOiAwKS5xAoVxA1JxBC4=", "hidden": false}}, {"pk": 68, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "fe2b8bba-c96c-4d6e-bdbc-6bb19d8348f6", "date_done": "2012-09-04T22:32:11.520Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 174, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 69, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "a5148517-d651-47c8-b34d-422bf614ca71", "date_done": "2012-09-04T22:49:02.668Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 174, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 70, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "923321fa-b36d-45a8-8b6a-d35b2d5dc2d0", "date_done": "2012-09-04T22:56:26.469Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs3zK9YDADbbBgc=", "result": "gAJjYmlsbGlhcmQuZXhjZXB0aW9ucwpXb3JrZXJMb3N0RXJyb3IKcQFVKFdvcmtlciBleGl0ZWQgcHJlbWF0dXJlbHkgKGV4aXRjb2RlOiAwKS5xAoVxA1JxBC4=", "hidden": false}}, {"pk": 71, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "0731caa4-a55c-4868-8761-19d793b70692", "date_done": "2012-09-04T23:06:09.501Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 174, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 72, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "eac4b750-5df5-4e44-8cf9-1bb858fad7e8", "date_done": "2012-09-04T23:09:24.182Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 174, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 73, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "686c9b03-ad0f-4da7-a299-1f8f7b82dfbe", "date_done": "2012-09-04T23:09:34.354Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 174, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 74, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a29a64ca-7b95-4c40-9889-fde6fe6b93dc", "date_done": "2012-09-05T00:35:26.660Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 75, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "edd1e5a8-e396-4437-ad62-0b8ae555b750", "date_done": "2012-09-05T15:11:20.747Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 324, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/libs/json_saver.py\", line 30, in save_total_report\n    import reporting\nAttributeError: 'int' object has no attribute 'items'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUlJ2ludCcgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ2l0ZW1zJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 76, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "716d3cb7-528d-4095-8449-6cbaad1e350c", "date_done": "2012-09-05T15:11:46.362Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 324, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/libs/json_saver.py\", line 30, in save_total_report\n    import reporting\nAttributeError: 'int' object has no attribute 'items'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUlJ2ludCcgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ2l0ZW1zJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 77, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "ac9cbdf5-d866-4f26-b66a-e075a640d5b0", "date_done": "2012-09-05T15:14:02.727Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 324, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/libs/json_saver.py\", line 30, in save_total_report\n    import reporting\nAttributeError: 'int' object has no attribute 'items'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUlJ2ludCcgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ2l0ZW1zJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 78, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "a5a92b50-c120-40ab-b455-0e6e730731b8", "date_done": "2012-09-06T10:42:38.875Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 291, in main\n    plantakolya.do(qconfig.reference, contigs, qconfig.cyclic, output_dirpath + '/plantakolya', lib_dir, qconfig.draw_plots)\nTypeError: do() takes exactly 7 arguments (6 given)\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVKGRvKCkgdGFrZXMgZXhhY3RseSA3IGFyZ3VtZW50cyAoNiBnaXZlbilxAoVxA1JxBC4=", "hidden": false}}, {"pk": 79, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "efc44976-66ba-4837-b830-bd750d41f0be", "date_done": "2012-09-06T10:45:26.586Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 158, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 80, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "7c9a3f15-8f53-4c97-8ed8-70d675411fe7", "date_done": "2012-09-06T10:45:40.961Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 324, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/libs/json_saver.py\", line 30, in save_total_report\n    import reporting\nAttributeError: 'int' object has no attribute 'items'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUlJ2ludCcgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ2l0ZW1zJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 81, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "2b248b88-ff6b-4927-83eb-12650995050a", "date_done": "2012-09-06T13:12:12.798Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 324, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/libs/json_saver.py\", line 30, in save_total_report\n    import reporting\nAttributeError: 'int' object has no attribute 'items'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUlJ2ludCcgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ2l0ZW1zJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 82, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "9cd72ff0-7b91-4cfd-8935-fd0e4d8e66ce", "date_done": "2012-09-06T13:12:37.929Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 324, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/libs/json_saver.py\", line 30, in save_total_report\n    import reporting\nAttributeError: 'int' object has no attribute 'items'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUlJ2ludCcgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ2l0ZW1zJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 83, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "736799a4-558f-4d8a-b2b6-ed725fbf880e", "date_done": "2012-09-06T13:13:51.479Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 158, in main\n    os.symlink(output_dirpath, latest_symlink)\nOSError: [Errno 17] File exists\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSxFVC0ZpbGUgZXhpc3RzcQKGcQNScQQu", "hidden": false}}, {"pk": 84, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f41da5ea-5631-4a58-a402-4194d8567929", "date_done": "2012-09-06T13:20:36.742Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 85, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "ae4600a4-4cea-4814-a8ab-a01b67623bff", "date_done": "2012-09-06T14:38:20.093Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 292, in main\n    plantakolya.do(qconfig.reference, contigs, qconfig.cyclic, output_dirpath + '/plantakolya', lib_dir, qconfig.draw_plots)\nTypeError: do() takes exactly 7 arguments (6 given)\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVKGRvKCkgdGFrZXMgZXhhY3RseSA3IGFyZ3VtZW50cyAoNiBnaXZlbilxAoVxA1JxBC4=", "hidden": false}}, {"pk": 86, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "3ed2d5c0-bafc-4a4e-848a-dd5d69c168ba", "date_done": "2012-09-06T14:39:40.596Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/quast.py\", line 325, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast-website/../quast/libs/json_saver.py\", line 30, in save_total_report\n    import reporting\nAttributeError: 'int' object has no attribute 'items'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUlJ2ludCcgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ2l0ZW1zJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 87, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9d704e0a-a38f-4f0c-ac90-1cd5b0304fad", "date_done": "2012-09-07T14:47:34.240Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 88, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "68903bce-bf46-4f27-8c53-d01a9183e95d", "date_done": "2012-09-09T14:22:29.913Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 89, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "e9aeff54-f6d9-4138-aa39-8974c04c2d22", "date_done": "2012-09-09T23:50:06.681Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/quast.py\", line 285, in main\n    basic_stats.do(qconfig.reference, contigs, output_dirpath + '/basic_stats', all_pdf, qconfig.draw_plots, json_outputpath, output_dirpath)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/basic_stats.py\", line 47, in do\n    html_saver.save_reference_length(results_dir, reference_length)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 97, in save_reference_length\n    append(adp_results, afp_json, 'referenceLength')\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 64, in append\n    init(adp_results)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 37, in init\n    with open(get_real_path(fp_script)) as f:\nIOError: [Errno 2] No such file or directory: '/jquery-1.7.2.min.js'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJT0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAlUUL2pxdWVyeS0xLjcuMi5taW4uanNxA4dScQQu", "hidden": false}}, {"pk": 90, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "76ad74c6-73ec-4aa2-bc14-324a2d5eba1a", "date_done": "2012-09-09T23:53:03.277Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/quast.py\", line 285, in main\n    basic_stats.do(qconfig.reference, contigs, output_dirpath + '/basic_stats', all_pdf, qconfig.draw_plots, json_outputpath, output_dirpath)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/basic_stats.py\", line 47, in do\n    html_saver.save_reference_length(results_dir, reference_length)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 97, in save_reference_length\n    append(adp_results, afp_json, 'referenceLength')\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 64, in append\n    init(adp_results)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 52, in init\n    get_real_path('/bootstrap/bootstrap-tooltip-5pxlower-min.js')).read() + '\\n</script>')\nIOError: [Errno 2] No such file or directory: '/bootstrap/bootstrap-tooltip-5pxlower-min.js'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJT0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAlUsL2Jvb3RzdHJhcC9ib290c3RyYXAtdG9vbHRpcC01cHhsb3dlci1taW4uanNxA4dScQQu", "hidden": false}}, {"pk": 91, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "0b5c9fcb-7083-4b86-9e37-b91e0a8ecefd", "date_done": "2012-09-09T23:53:30.669Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_website/quast_app/tasks.py\", line 17, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/quast.py\", line 285, in main\n    basic_stats.do(qconfig.reference, contigs, output_dirpath + '/basic_stats', all_pdf, qconfig.draw_plots, json_outputpath, output_dirpath)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/basic_stats.py\", line 47, in do\n    html_saver.save_reference_length(results_dir, reference_length)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 97, in save_reference_length\n    append(adp_results, afp_json, 'referenceLength')\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 64, in append\n    init(adp_results)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast_tool/libs/html_saver/html_saver.py\", line 52, in init\n    get_real_path('bootstrap/bootstrap-tooltip-5pxlower-min.js')).read() + '\\n</script>')\nIOError: [Errno 2] No such file or directory: '/bootstrap/bootstrap-tooltip-5pxlower-min.js'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJT0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAlUsL2Jvb3RzdHJhcC9ib290c3RyYXAtdG9vbHRpcC01cHhsb3dlci1taW4uanNxA4dScQQu", "hidden": false}}, {"pk": 92, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5d726f60-01e3-4ef2-bd46-0a83b6f0c52d", "date_done": "2012-09-09T23:53:59.966Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 93, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f6a9e877-a844-489a-b7a7-3d6474b57ee7", "date_done": "2012-09-10T00:53:16.401Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 94, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5f9a45bf-c575-4352-bd13-5e177984407b", "date_done": "2012-09-10T01:25:23.441Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 95, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9bdd9477-208a-4933-9900-dfd86abb37f6", "date_done": "2012-09-10T08:24:51.513Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 96, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f862e6cd-9616-455f-a59a-ebc90173ece9", "date_done": "2012-09-10T08:35:37.452Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 97, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "eafd79c9-658e-4c64-9a04-3a88e412b745", "date_done": "2012-09-11T10:57:57.795Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 98, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "461315ce-93eb-47d4-90c4-f940afaf6218", "date_done": "2012-09-11T16:06:35.827Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 99, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "855ca6b9-799a-446c-9587-9d5d5f5c8417", "date_done": "2012-09-13T15:48:45.422Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 100, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "fff52eec-e508-44ca-b22e-15d9d281e9bb", "date_done": "2012-09-17T09:52:50.220Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 101, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "cbe5741c-2217-418e-839a-0da8ea8d7d2b", "date_done": "2012-09-17T10:14:30.530Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 102, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2525e73e-22f7-4556-9a44-d18956518b61", "date_done": "2012-09-18T08:33:59.327Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 103, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f260ba3c-9c61-462d-a5ce-fd63bc88d85b", "date_done": "2012-09-18T08:34:02.393Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 104, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "146ea584-e17c-46c2-be18-808307e21dab", "date_done": "2012-09-18T08:35:18.583Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 105, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "eae26684-19dc-4960-9985-eef32afa3851", "date_done": "2012-09-18T08:35:23.258Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 106, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e45a648a-176a-40b5-bcb7-5ca6c9c41e21", "date_done": "2012-09-18T08:37:23.260Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 107, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "93585ba9-4673-4a1a-bd8f-34133bad5e6d", "date_done": "2012-09-18T08:37:59.870Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 283, in main\n    basic_stats.do(qconfig.reference, contigs, output_dirpath + '/basic_stats', all_pdf, qconfig.draw_plots, json_outputpath, output_dirpath)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/basic_stats.py\", line 82, in do\n    total_GC, GC_info = GC_content(filename)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/basic_stats.py\", line 28, in GC_content\n    GC_info.append((contig_length, GC_amount * 100.0 / contig_length))\nZeroDivisionError: float division by zero\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpaZXJvRGl2aXNpb25FcnJvcgpxAVUWZmxvYXQgZGl2aXNpb24gYnkgemVyb3EChXEDUnEELg==", "hidden": false}}, {"pk": 108, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "3f14a1d5-28d7-433b-ae1e-997f29bb8337", "date_done": "2012-09-18T08:38:07.724Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 283, in main\n    basic_stats.do(qconfig.reference, contigs, output_dirpath + '/basic_stats', all_pdf, qconfig.draw_plots, json_outputpath, output_dirpath)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/basic_stats.py\", line 82, in do\n    total_GC, GC_info = GC_content(filename)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/basic_stats.py\", line 28, in GC_content\n    GC_info.append((contig_length, GC_amount * 100.0 / contig_length))\nZeroDivisionError: float division by zero\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpaZXJvRGl2aXNpb25FcnJvcgpxAVUWZmxvYXQgZGl2aXNpb24gYnkgemVyb3EChXEDUnEELg==", "hidden": false}}, {"pk": 109, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "52bb371e-098e-4144-b451-492f998a406d", "date_done": "2012-09-18T08:39:34.823Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 290, in main\n    plantakolya.do(qconfig.reference, contigs, qconfig.cyclic, qconfig.rc, output_dirpath + '/plantakolya', lib_dir, qconfig.draw_plots)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 684, in do\n    plantakolya_process(cyclic, draw_plots, filename, id, myenv, output_dir, rc, reference) # TODO: use joblib\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 653, in plantakolya_process\n    plantakolya(cyclic, draw_plots, filename, nucmerfilename, myenv, output_dir, rc, reference)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 585, in plantakolya\n    for line in open(nucmer_report_filename):\nIOError: [Errno 2] No such file or directory: u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/6453c3cc332a41e9dcd3407318f5cd04/18_Sep_2012_12:39:28.448912/regular_report/plantakolya/nucmer_ecoli_10K_2.fastq.report'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJT0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAliqAAAAL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlc3VsdHMvNjQ1M2MzY2MzMzJhNDFlOWRjZDM0MDczMThmNWNkMDQvMThfU2VwXzIwMTJfMTI6Mzk6MjguNDQ4OTEyL3JlZ3VsYXJfcmVwb3J0L3BsYW50YWtvbHlhL251Y21lcl9lY29saV8xMEtfMi5mYXN0cS5yZXBvcnRxA4dScQQu", "hidden": false}}, {"pk": 110, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f2635690-ff8f-498b-bb62-1842c34e5842", "date_done": "2012-09-18T08:45:42.452Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 111, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "16b4c97b-0445-4d8c-972b-dac0b2ed2292", "date_done": "2012-09-18T08:48:41.694Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 112, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "bd52dcee-e634-4a3a-b7c1-f5ab2d72d906", "date_done": "2012-09-18T08:53:17.814Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 113, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b76a1640-e7a2-4021-8850-6062ac92d9c7", "date_done": "2012-09-18T08:55:25.252Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 114, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a1bdd47d-cdb0-4670-a485-7018410a1f17", "date_done": "2012-09-18T08:55:48.841Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 115, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d899a9fa-5fe6-4c09-bf11-c321708d1f2d", "date_done": "2012-09-18T08:56:13.787Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 116, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a834faf5-4ea1-4b4c-9b60-e6b1c00f88e9", "date_done": "2012-09-24T11:07:29.882Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 117, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "557b0c79-de58-4fe0-903e-62cfaa3c17d6", "date_done": "2012-09-24T13:02:55.455Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 118, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2b59a24c-8b61-486d-b23f-708ccde135ad", "date_done": "2012-09-25T16:53:22.590Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 119, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "8db6878a-fe75-4465-816c-9c1bffff3757", "date_done": "2012-09-26T16:22:39.844Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 120, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "02e66b94-42fe-45c3-83bc-aed97927ecbb", "date_done": "2012-09-26T16:23:46.602Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 121, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "70e31e6c-3610-4681-b1c0-f5fd352ea382", "date_done": "2012-09-26T16:25:10.410Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 122, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "31630bdc-fc96-4173-ba4d-0a55aec2c4a9", "date_done": "2012-09-26T16:34:30.950Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 123, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "ea885630-4940-4411-a810-36a4d34a6de7", "date_done": "2012-09-26T18:00:43.415Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 124, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "d647a2e3-cb48-411e-8650-ff94c82de3e4", "date_done": "2012-09-28T17:00:15.378Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 290, in main\n    ## 1) Some embedded tools can fail on some strings with \"...\", \"+\", \"-\", etc\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 684, in do\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 653, in plantakolya_process\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 609, in plantakolya\nAttributeError: class Fields has no attribute 'AVGIDY'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUmY2xhc3MgRmllbGRzIGhhcyBubyBhdHRyaWJ1dGUgJ0FWR0lEWSdxAoVxA1JxBC4=", "hidden": false}}, {"pk": 125, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "8f01d489-ec7b-4732-a190-a4cd1bf82a87", "date_done": "2012-09-28T17:02:06.465Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 290, in main\n    ## 1) Some embedded tools can fail on some strings with \"...\", \"+\", \"-\", etc\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 684, in do\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 653, in plantakolya_process\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 614, in plantakolya\nAttributeError: class Fields has no attribute 'MISUNALIGNED'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUsY2xhc3MgRmllbGRzIGhhcyBubyBhdHRyaWJ1dGUgJ01JU1VOQUxJR05FRCdxAoVxA1JxBC4=", "hidden": false}}, {"pk": 126, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "2a9a78a0-e45e-47ba-91af-5cafa18a50eb", "date_done": "2012-09-28T17:04:36.159Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 290, in main\n    ## 1) Some embedded tools can fail on some strings with \"...\", \"+\", \"-\", etc\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 684, in do\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 653, in plantakolya_process\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/plantakolya.py\", line 614, in plantakolya\nAttributeError: class Fields has no attribute 'MISUNALIGNED'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUsY2xhc3MgRmllbGRzIGhhcyBubyBhdHRyaWJ1dGUgJ01JU1VOQUxJR05FRCdxAoVxA1JxBC4=", "hidden": false}}, {"pk": 127, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "116e8188-37e2-4a0f-9c1a-5dba51471d04", "date_done": "2012-09-28T17:05:51.197Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 128, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6773da30-c64e-496a-8509-d7ab29c1a4ad", "date_done": "2012-09-28T17:08:36.777Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 129, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "3326072e-27ea-4a54-b6c0-9acd8dfad53e", "date_done": "2012-09-28T17:11:52.608Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 130, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "bf15bdf2-c381-4906-8aee-c334a1e9a8f6", "date_done": "2012-10-01T15:46:46.010Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 131, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c0037737-e484-4dd5-8a23-1ea616e1911e", "date_done": "2012-10-01T15:47:29.774Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 132, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "ff69f8d7-27b8-4078-bf56-fe90233dbe3c", "date_done": "2012-10-01T15:48:21.347Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 133, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0d40a97b-76d0-4f4c-babc-3fdf3eb5e1e5", "date_done": "2012-10-01T16:06:44.426Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 134, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "31a50b0b-9337-4083-b317-c4599e89ad40", "date_done": "2012-10-01T16:06:54.804Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 135, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d2cf92a2-ec94-4a50-aae2-f8bb1f248503", "date_done": "2012-10-01T17:39:32.310Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 136, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "61ea9477-ec7a-4090-83a7-2e831782ec57", "date_done": "2012-10-01T17:39:42.150Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 137, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a823de43-fc2c-4cd4-b496-c741d907698e", "date_done": "2012-10-01T17:42:43.675Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 138, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "28269e44-0f8c-4fcf-bc66-95f9555685a1", "date_done": "2012-10-01T17:43:08.231Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 139, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "39a81255-1bb4-453d-b8cd-c35f8f0f4f0e", "date_done": "2012-10-01T17:43:19.362Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 140, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "53d0c724-e1bb-4d5d-8a0b-074704fc6cbe", "date_done": "2012-10-01T17:45:52.161Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 141, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "809cc959-b8b9-4903-a6a4-7949091e9412", "date_done": "2012-10-01T17:46:13.927Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 142, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d0479821-2425-4a3c-bbc1-dbb1b27fa324", "date_done": "2012-10-01T17:46:59.482Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 143, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "ab602e3a-95be-4f46-80c1-71f9d36d7601", "date_done": "2012-10-01T17:47:12.649Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 144, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "f2b913c0-567e-41fa-b0be-982d97b24651", "date_done": "2012-10-07T17:48:43.951Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 359, in main\n    json_output_dirpath, output_dirpath)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/basic_stats.py\", line 66, in do\n    html_saver.save_reference_length(results_dir, reference_length)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 101, in save_reference_length\n    html_text = f_html.read()\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 65, in append\n    #                    '<script type=\"text/javascript\">\\n' + f.read() + '\\n\\t</script>\\n')\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 38, in init\n    'static/jquery-1.7.2.min.js'\nIOError: [Errno 2] No such file or directory: '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/jquery-1.7.2.min.js'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJT0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAlViL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvbGlicy9odG1sX3NhdmVyL2pxdWVyeS0xLjcuMi5taW4uanNxA4dScQQu", "hidden": false}}, {"pk": 145, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d32aafe2-550b-4670-80ed-3fba22c2b27f", "date_done": "2012-10-07T17:53:10.339Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 146, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "f1b137b3-b061-47fd-9514-d483f7c3821b", "date_done": "2012-10-07T18:00:58.741Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 359, in main\n    ### Stats and plots\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/basic_stats.py\", line 66, in do\n    html_saver.save_reference_length(results_dir, reference_length)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 101, in save_reference_length\n    html_text = f_html.read()\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 65, in append\n    #                    '<script type=\"text/javascript\">\\n' + f.read() + '\\n\\t</script>\\n')\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 38, in init\n    'static/jquery-1.7.2.min.js'\nIOError: [Errno 2] No such file or directory: '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/jquery-1.7.2.min.js'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJT0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAlViL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvbGlicy9odG1sX3NhdmVyL2pxdWVyeS0xLjcuMi5taW4uanNxA4dScQQu", "hidden": false}}, {"pk": 147, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b22b588c-aeb5-47ea-8d3a-bcb6c785b408", "date_done": "2012-10-07T18:07:45.349Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 148, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "32972dba-5599-4d6a-bed4-af32f1c98f3e", "date_done": "2012-10-08T11:54:47.113Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 149, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9e7977e9-b6a2-41a7-a12a-88de83b0d349", "date_done": "2012-10-08T13:06:39.126Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 150, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c3f1e3e9-6f03-45a9-8472-e07de3101c13", "date_done": "2012-10-09T14:18:43.280Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 151, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e2932de5-abe5-4a68-b8bb-4560b3bbf870", "date_done": "2012-10-17T15:12:03.324Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 152, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1e4795a4-a5a1-49d5-8b8a-b98722001af2", "date_done": "2012-10-17T15:12:32.300Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 153, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5835e1b6-3eb1-4509-a4ea-d556f15bec92", "date_done": "2012-10-19T07:40:08.151Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 154, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "ca407e3b-cec3-4c1e-8422-b17034dc259f", "date_done": "2012-10-22T09:37:04.273Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 155, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2d1768cb-84ad-429a-a213-c4dd70899f0d", "date_done": "2012-10-22T09:41:50.886Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 156, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f122fd9e-a026-42c0-809d-2545d9ac3a8c", "date_done": "2012-10-22T09:42:56.987Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 157, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1b7ec3ef-ba3f-48bf-9949-803165487d4a", "date_done": "2012-10-22T09:43:06.465Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 158, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0f663c31-957a-4642-9ec0-16aa1e851625", "date_done": "2012-10-22T10:01:57.630Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 159, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6a8f43d4-e292-4c10-bb9c-3993fb018dc4", "date_done": "2012-10-22T14:59:43.172Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 160, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d10f68ca-fb4a-48da-91ad-fb3835beae0a", "date_done": "2012-10-22T15:15:43.285Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 161, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4dfc4f50-7e76-44db-ac61-5d33cab85611", "date_done": "2012-10-22T15:22:27.422Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 162, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1fe3c500-17e6-412b-a748-73a49fcb8732", "date_done": "2012-10-22T15:27:09.687Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 163, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "994923db-efac-474a-a0aa-6f2dea491844", "date_done": "2012-10-22T16:32:48.503Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 164, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "65efd667-69db-4c76-bedc-a38d3e377dd1", "date_done": "2012-10-22T17:09:43.544Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 165, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "05f6a426-7f59-4b57-b109-6105cae86f97", "date_done": "2012-10-23T16:23:44.017Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 166, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "36f5ead0-22d6-447c-b7db-fe7705bb9518", "date_done": "2012-10-23T16:24:11.368Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 167, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c1a8c556-5b86-425c-9215-9c2eb0623faa", "date_done": "2012-10-23T16:26:36.416Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 168, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d4cd7db4-99b7-4be0-8c55-b1af3e039190", "date_done": "2012-10-23T16:35:17.159Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 169, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "33c902d1-6bee-474b-8522-dcc04b4bda0d", "date_done": "2012-10-23T16:49:40.910Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 170, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1e4db8f5-8a19-4c9a-bfbe-a13392dba8d0", "date_done": "2012-10-23T16:52:01.727Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 171, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "cab18125-7ce3-4083-98c3-ddd0b3924fc3", "date_done": "2012-10-23T17:00:48.861Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 172, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "05ac7aa3-ac91-4ccc-bf43-8b260248d1bf", "date_done": "2012-10-23T17:03:16.519Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 173, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "89069506-797c-43f0-b2d7-96342bb8a564", "date_done": "2012-10-23T17:06:06.058Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 174, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "3653eac3-8aa6-4313-bd7f-b419c698e146", "date_done": "2012-10-23T17:06:24.486Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 175, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5a7f5eae-6cdf-4e7a-a6cf-738afdc3f691", "date_done": "2012-10-23T17:07:14.993Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 176, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b9a8b60f-799a-4ede-9a72-1a7d6ddb6522", "date_done": "2012-10-23T17:08:15.885Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 177, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9b4a8b2f-526b-4126-bb49-5a3404e8662f", "date_done": "2012-10-23T17:08:52.419Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 178, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "54cd1be8-426c-4e49-9d92-e2677c3a3bba", "date_done": "2012-10-23T17:24:10.161Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 179, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "bdeb0ad6-0f42-447c-8ad6-2b257fb5f3db", "date_done": "2012-10-23T17:24:33.650Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 180, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c0ab79f2-b0c0-4adc-8191-41582bc78aee", "date_done": "2012-10-23T17:28:16.926Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 181, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d2dd88e7-759c-4be5-85a8-824029b276e9", "date_done": "2012-10-23T17:38:49.166Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 182, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "8db16259-098a-4e8c-b875-bf427eafb5b0", "date_done": "2012-10-23T17:39:31.733Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 183, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c762d330-4638-465b-bb05-05a9867823e5", "date_done": "2012-10-23T17:40:48.700Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 184, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0b132402-1e18-424d-a545-91ed20fed215", "date_done": "2012-10-23T17:46:33.944Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 185, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f3f4437c-baec-4c83-84a4-04ce506d7194", "date_done": "2012-10-23T17:48:56.596Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 186, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9639f685-f242-4841-9cb0-b554193e6340", "date_done": "2012-10-29T11:58:46.049Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 187, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "42833b99-210d-4f4b-ab45-fc9bea328882", "date_done": "2012-10-29T12:01:17.878Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 188, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d20ec8fb-f651-4736-b296-1a7495f871c2", "date_done": "2012-10-29T12:04:57.922Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 189, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7ab9de5b-da7f-40f4-bfe8-247c42a04295", "date_done": "2012-10-29T12:08:16.897Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 190, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0a31e47b-2798-48b0-932c-6474e8bc19b8", "date_done": "2012-10-29T12:35:17.729Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 191, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "61cbe8c6-8ccd-4cf2-8c0d-60ceb052bcd1", "date_done": "2012-10-29T12:36:00.327Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 192, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "47ddd4f7-aa58-4808-b75e-0847988ad0d1", "date_done": "2012-10-29T12:36:05.345Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 193, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "660bf454-33dc-4b84-b27a-88ceb87c5b64", "date_done": "2012-10-29T12:39:37.045Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 194, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4c8d1145-d110-4cd3-bc46-2848d1d84d36", "date_done": "2012-10-29T12:42:14.731Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 195, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "add8292f-2cec-47de-9c16-fffd199e4aad", "date_done": "2012-10-29T12:42:19.807Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 196, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c1025f68-15f8-4802-9ff4-494058ace52e", "date_done": "2012-10-29T12:42:55.921Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 197, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5c3cc15e-4460-4a36-9032-18b9eafddbba", "date_done": "2012-10-29T12:43:37.851Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 198, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "84a052f7-76ce-417d-82af-42224e9a846c", "date_done": "2012-10-29T12:43:52.963Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 199, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e173168a-0e61-4127-996e-4f940b0c7035", "date_done": "2012-10-29T13:36:59.038Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 200, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "eab6290c-8d4e-45bc-80b2-cbcfaadf9281", "date_done": "2012-10-29T13:59:17.475Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 201, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7286f257-a7c8-4f19-8792-217c26cf1201", "date_done": "2012-10-30T11:00:46.235Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 202, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e0d709c2-0227-4266-83b1-8ff9dbd92648", "date_done": "2012-10-30T15:47:03.070Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 203, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "785b4eff-5c6d-4b94-8e7b-3fcd05427640", "date_done": "2012-10-30T16:22:22.950Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 204, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "41987a5a-09cd-434d-8713-3e9f215db65e", "date_done": "2012-10-30T18:19:40.329Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 205, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d40ec207-29e7-4034-8427-86d3ee8d59f8", "date_done": "2012-10-31T01:15:22.576Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 206, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "08cd7bd5-fe79-43c3-a18f-0098f7e1f240", "date_done": "2012-10-31T10:47:52.025Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 207, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7606ff86-f2c6-46af-a69a-e54876fefffe", "date_done": "2012-10-31T13:09:33.652Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 208, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "562df3fb-e7f6-47b4-b6ff-bc6dfaaee1c1", "date_done": "2012-10-31T14:15:04.001Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 209, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d074bdf0-d8b0-4a79-bb5a-f9438dd57d78", "date_done": "2012-10-31T16:19:41.818Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 210, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "943c6de8-c8c1-415f-b6f3-1ca9a1640a57", "date_done": "2012-10-31T16:39:03.924Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 211, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e9db5a0e-2dab-4181-9ae8-754b2d2e62aa", "date_done": "2012-10-31T19:37:55.526Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 212, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "69540337-f448-4104-a056-382a86a1f402", "date_done": "2012-10-31T19:38:15.976Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 213, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "03ed24d3-f57e-437e-9cc0-2e7210a3b3f8", "date_done": "2012-10-31T19:40:26.042Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 214, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "31d4be40-601d-4a82-87c5-1ff9701dbea5", "date_done": "2012-10-31T19:40:30.684Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 215, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e22b92f8-f0a2-45b7-9b9c-f3344b2e5366", "date_done": "2012-11-01T17:29:03.565Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 216, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e02c45da-68d8-4019-be12-fcaaa8a73694", "date_done": "2012-11-06T13:05:55.132Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 217, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "db091927-65b8-4de4-9a7b-7d8de8d74754", "date_done": "2012-11-06T15:42:13.110Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 218, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5d81daa8-93e4-454f-a0b7-d2bc7fddd4fd", "date_done": "2012-11-09T09:06:40.448Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 219, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0c70d09e-3e76-41d7-aade-f92720bbdd89", "date_done": "2012-11-12T10:30:00.577Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 220, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "a70d8e7f-fac7-4035-a1c6-7eb7748748e4", "date_done": "2012-11-12T12:34:35.938Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 488, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/json_saver.py\", line 46, in save_total_report\n    mainMetrics = reporting.get_main_metrics()\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 202, in get_main_metrics\n    lists = map(take_tuple_metric_apart, Fields.main_metrics)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 214, in take_tuple_metric_apart\n    thresholds = map(int, ''.join(field[1]).split(','))\nTypeError: sequence item 0: expected string, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVK3NlcXVlbmNlIGl0ZW0gMDogZXhwZWN0ZWQgc3RyaW5nLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 221, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "0be2caaf-6d17-4d71-bc30-4936d57e53d5", "date_done": "2012-11-12T12:42:08.064Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 488, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/json_saver.py\", line 46, in save_total_report\n    t = datetime.datetime.now()\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 202, in get_main_metrics\n    lists = map(take_tuple_metric_apart, Fields.main_metrics)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 214, in take_tuple_metric_apart\n    thresholds = map(int, ''.join(field[1]).split(','))\nTypeError: sequence item 0: expected string, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVK3NlcXVlbmNlIGl0ZW0gMDogZXhwZWN0ZWQgc3RyaW5nLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 222, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "06de5fb5-3616-4c23-b06a-08d0cb0fdd51", "date_done": "2012-11-12T12:43:28.739Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 488, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/json_saver.py\", line 46, in save_total_report\n    t = datetime.datetime.now()\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 202, in get_main_metrics\n    lists = map(take_tuple_metric_apart, Fields.main_metrics)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 214, in take_tuple_metric_apart\n    thresholds = map(int, ''.join(field[1]).split(','))\nTypeError: sequence item 0: expected string, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVK3NlcXVlbmNlIGl0ZW0gMDogZXhwZWN0ZWQgc3RyaW5nLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 223, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "9054cb2f-24f4-43ed-89b9-aac1d79a9ba0", "date_done": "2012-11-12T12:48:17.982Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 488, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/json_saver.py\", line 46, in save_total_report\n    t = datetime.datetime.now()\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 202, in get_main_metrics\n    lists = map(take_tuple_metric_apart, Fields.main_metrics)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 214, in take_tuple_metric_apart\n    thresholds = map(int, ''.join(field[1]).split(','))\nTypeError: sequence item 0: expected string, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVK3NlcXVlbmNlIGl0ZW0gMDogZXhwZWN0ZWQgc3RyaW5nLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 224, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "531d7355-83dd-42c3-b552-ea8b7236ab1a", "date_done": "2012-11-12T13:04:32.589Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 225, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c1611da6-e2b8-40d6-ad18-e74cc4e64d60", "date_done": "2012-11-12T15:24:51.732Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 226, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7f00bfbe-e33e-4bb8-99d4-035867eba3d9", "date_done": "2012-11-12T15:24:57.562Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 227, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "804ea88f-49f8-4b8c-9bd0-869eec97f824", "date_done": "2012-11-12T16:04:28.034Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 228, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "2e715d54-d8af-41ff-8200-1682a3a5a7a2", "date_done": "2012-11-12T16:14:17.709Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    result = quast.main(args[1:])\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 488, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/json_saver.py\", line 46, in save_total_report\n    assemblies_names = reporting.assemblies_order\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 202, in get_main_metrics\n    lists = map(take_tuple_metric_apart, Fields.main_metrics)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 214, in take_tuple_metric_apart\n    thresholds = map(int, ''.join(field[1]).split(','))\nTypeError: sequence item 0: expected string, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVK3NlcXVlbmNlIGl0ZW0gMDogZXhwZWN0ZWQgc3RyaW5nLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 229, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "de158f8b-8caa-4877-a49c-1a3ea5eeae68", "date_done": "2012-11-12T16:29:04.441Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 230, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "494cf0c4-1f11-4369-a420-c9575f22e885", "date_done": "2012-11-12T16:31:53.009Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 231, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6c46c695-5050-4b93-80f7-a1430b056b6f", "date_done": "2012-11-12T16:32:47.598Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 232, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "0087a5e4-a5c7-4de4-8ed3-f56b46e2e989", "date_done": "2012-11-12T16:33:13.800Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    quast.qconfig.html_report = False\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 151, in main\n    reload(qconfig)\nImportError: No module named qconfig\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbXBvcnRFcnJvcgpxAVUXTm8gbW9kdWxlIG5hbWVkIHFjb25maWdxAoVxA1JxBC4=", "hidden": false}}, {"pk": 233, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f1a135ac-5430-4b90-be8a-485cb6a34639", "date_done": "2012-11-12T16:33:47.745Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 234, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "6c829bb7-8fd2-476d-8212-d0fd4b7cdab4", "date_done": "2012-11-12T16:34:11.960Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    quast.qconfig.html_report = False\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 435, in main\n    json_outputpath, output_dirpath)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/basic_stats.py\", line 66, in do\n    html_saver.save_reference_length(results_dir, reference_length)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 128, in save_reference_length\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 92, in append\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/html_saver.py\", line 47, in init\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 168, in copytree\n    names = os.listdir(src)\nOSError: [Errno 2] No such file or directory: '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/static'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAlVVL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvbGlicy9odG1sX3NhdmVyL3N0YXRpY3EDh1JxBC4=", "hidden": false}}, {"pk": 235, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "db1f37e8-5f7a-4c33-88bd-f80d9b91eae1", "date_done": "2012-11-12T16:35:34.409Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    quast.qconfig.html_report = False\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 488, in main\n    json_saver.save_total_report(json_outputpath, qconfig.min_contig)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/json_saver.py\", line 46, in save_total_report\n    report = reporting.grouped_table()\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 202, in get_main_metrics\n    lists = map(take_tuple_metric_apart, Fields.main_metrics)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 214, in take_tuple_metric_apart\n    thresholds = map(int, ''.join(field[1]).split(','))\nTypeError: sequence item 0: expected string, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVK3NlcXVlbmNlIGl0ZW0gMDogZXhwZWN0ZWQgc3RyaW5nLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 236, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "bb712a2c-94fb-46f7-b581-011a955a937b", "date_done": "2012-11-12T16:36:24.685Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 237, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "27e9ed5a-d307-4171-b3be-ef8ad9dc6875", "date_done": "2012-11-12T16:37:39.601Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    quast.qconfig.html_report = False\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 152, in main\n    reload(reporting)\nUnboundLocalError: local variable 'reporting' referenced before assignment\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpVbmJvdW5kTG9jYWxFcnJvcgpxAVU3bG9jYWwgdmFyaWFibGUgJ3JlcG9ydGluZycgcmVmZXJlbmNlZCBiZWZvcmUgYXNzaWdubWVudHEChXEDUnEELg==", "hidden": false}}, {"pk": 238, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c039893e-c0a2-4105-a197-6d62f294557e", "date_done": "2012-11-12T16:37:57.020Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 239, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "1bb9910f-1421-4c17-88f0-f389aa04837e", "date_done": "2012-11-12T16:38:48.586Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    quast.qconfig.html_report = False\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 488, in main\n    if json_outputpath:\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/html_saver/json_saver.py\", line 46, in save_total_report\n    def save_total_report(output_dir, min_contig):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 202, in get_main_metrics\n    lists = map(take_tuple_metric_apart, Fields.main_metrics)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/reporting.py\", line 214, in take_tuple_metric_apart\n    thresholds = map(int, ''.join(field[1]).split(','))\nTypeError: sequence item 0: expected string, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVK3NlcXVlbmNlIGl0ZW0gMDogZXhwZWN0ZWQgc3RyaW5nLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 240, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "54608dfe-b8b7-4a88-9cec-c26aca8bf2d4", "date_done": "2012-11-12T16:39:03.752Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 241, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "87d7dd68-d46b-4807-83c6-829cd1aee957", "date_done": "2012-11-12T16:42:22.440Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    quast.qconfig.html_report = False\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 152, in main\n    try:\nUnboundLocalError: local variable 'reporting' referenced before assignment\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpVbmJvdW5kTG9jYWxFcnJvcgpxAVU3bG9jYWwgdmFyaWFibGUgJ3JlcG9ydGluZycgcmVmZXJlbmNlZCBiZWZvcmUgYXNzaWdubWVudHEChXEDUnEELg==", "hidden": false}}, {"pk": 242, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "4d2f52c7-f07b-4645-a902-3dd01a08560b", "date_done": "2012-11-12T16:50:00.439Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    quast.qconfig.html_report = False\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 152, in main\n    try:\nUnboundLocalError: local variable 'reporting' referenced before assignment\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpVbmJvdW5kTG9jYWxFcnJvcgpxAVU3bG9jYWwgdmFyaWFibGUgJ3JlcG9ydGluZycgcmVmZXJlbmNlZCBiZWZvcmUgYXNzaWdubWVudHEChXEDUnEELg==", "hidden": false}}, {"pk": 243, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "945ba4c7-6bff-4b4f-9e96-45cdebce0455", "date_done": "2012-11-12T16:52:03.546Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 14, in start_quast\n    quast.qconfig.html_report = False\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py\", line 443, in main\n    aligned_fpaths = []\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py\", line 1130, in do\n    for id, fname in enumerate(filenames))\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/env/site-packages/joblib/parallel.py\", line 485, in __call__\n    self.retrieve()\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/env/site-packages/joblib/parallel.py\", line 437, in retrieve\n    raise exception_type(report)\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    496     self = load(from_parent)\n    497     process.current_process()._inheriting = False\n    498 \n    499     from_parent.close()\n    500 \n--> 501     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-1, started daemon)>>\n    502     exit(exitcode)\n    503 \n    504 \n    505 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-1, started daemon)>)\n    268                 # delay finalization of the old process object until after\n    269                 # _run_after_forkers() is executed\n    270                 del old_process\n    271             util.info('child process calling self.run()')\n    272             try:\n--> 273                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-1, started daemon)>>\n    274                 exitcode = 0\n    275             finally:\n    276                 util._exit_function()\n    277         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-1, started daemon)>)\n    117     def run(self):\n    118         '''\n    119         Method to be run in sub-process; can be overridden in sub-class\n    120         '''\n    121         if self._target:\n--> 122             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x101b7e500>\n        self._args = (<billiard.queues.SimpleQueue object at 0x101b89f50>, <billiard.queues.SimpleQueue object at 0x101b92050>, <function process_initializer at 0x101dedc08>, (<Celery default:0x101feb110>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n    123 \n    124     def start(self):\n    125         '''\n    126         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x101feb110>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    299             break\n    300 \n    301         job, i, func, args, kwds = task\n    302         put((ACK, (job, i, time.time(), pid)))\n    303         try:\n--> 304             result = (True, func(*args, **kwds))\n        result = (True, <ExceptionInfo: TypeError('sequence item 0: expected string, int found',)>)\n        func = <function trace_task_ret at 0x101fe96e0>\n        args = ('quast_app.tasks.start_quast', '945ba4c7-6bff-4b4f-9e96-45cdebce0455', (['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report'],), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': (['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report'],), 'expires': None, 'id': '945ba4c7-6bff-4b4f-9e96-45cdebce0455', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    305         except Exception:\n    306             result = (False, ExceptionInfo())\n    307         try:\n    308             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task_ret(task='quast_app.tasks.start_quast', uuid='945ba4c7-6bff-4b4f-9e96-45cdebce0455', args=(['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...50c99/12_Nov_2012_20:52:01.228817/regular_report'],), kwargs={}, request={'args': (['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...50c99/12_Nov_2012_20:52:01.228817/regular_report'],), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '945ba4c7-6bff-4b4f-9e96-45cdebce0455', 'is_eager': False, ...})\n    297     except Exception, exc:\n    298         return report_internal_error(task, exc)\n    299 \n    300 \n    301 def trace_task_ret(task, uuid, args, kwargs, request={}):\n--> 302     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '945ba4c7-6bff-4b4f-9e96-45cdebce0455'\n        args = (['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report'],)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': (['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report'],), 'expires': None, 'id': '945ba4c7-6bff-4b4f-9e96-45cdebce0455', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    303 \n    304 \n    305 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    306     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='945ba4c7-6bff-4b4f-9e96-45cdebce0455', args=(['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...50c99/12_Nov_2012_20:52:01.228817/regular_report'],), kwargs={}, request={'args': (['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...50c99/12_Nov_2012_20:52:01.228817/regular_report'],), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '945ba4c7-6bff-4b4f-9e96-45cdebce0455', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = (['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/input/305034655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report'],)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except RetryTaskError, exc:\n    227                     I = Info(RETRY, exc)\n    228                     state, retval = I.state, I.retval\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast(args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...50c99/12_Nov_2012_20:52:01.228817/regular_report'])\n      9 def start_quast(args):\n     10     if not settings.QUAST_DIRPATH in sys.path:\n     11         sys.path.insert(1, settings.QUAST_DIRPATH)\n     12     import quast\n     13 \n---> 14     quast.qconfig.html_report = False\n        quast.qconfig.html_report = True\n     15     quast.qconfig.draw_plots = False\n     16 \n     17     result = quast.main(args[1:])\n     18     reload(quast)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_1.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...4655494f38ea9c9599226f50c99/assembly_10K_2.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...50c99/12_Nov_2012_20:52:01.228817/regular_report'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    438     aligned_fpaths = []\n    439     if qconfig.reference:\n    440         ########################################################################\n    441         ### former PLANTAKOLYA, PLANTAGORA\n    442         ########################################################################\n--> 443         from libs import contigs_analyzer\n        contigs_analyzer = <module 'libs.contigs_analyzer' from '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py'>\n    444         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n    445         for contigs_fpath in contigs_fpaths:\n    446             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    447                 aligned_fpaths.append(contigs_fpath)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...gular_report/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...17/regular_report/corrected_input/assembly_10K_1', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...17/regular_report/corrected_input/assembly_10K_2'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_20:52:01.228817/regular_report/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=False)\n   1125         os.mkdir(nucmer_output_dir)\n   1126 \n   1127     from joblib import Parallel, delayed\n   1128     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1129         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1130           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report/corrected_input/assembly_10K_1', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report/corrected_input/assembly_10K_2']\n   1131     # unzipping\n   1132     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1133 \n   1134     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/env/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    480         self.n_dispatched = 0\n    481         try:\n    482             for function, args, kwargs in iterable:\n    483                 self.dispatch(function, args, kwargs)\n    484 \n--> 485             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    486             # Make sure that we get a last message telling us we are done\n    487             elapsed_time = time.time() - self._start_time\n    488             self._print('Done %3i out of %3i | elapsed: %s finished',\n    489                         (len(self._output),\n\n---------------------------------------------------------------------------\nSub-process traceback:\n---------------------------------------------------------------------------\nIndexError                                         Mon Nov 12 20:52:02 2012\nPID: 19092Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in plantakolya_process(cyclic=True, draw_plots=False, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...817/regular_report/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...17/regular_report/corrected_input/assembly_10K_1', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-6cEa7f/Render', 'Apple_Ubiquity_Message': '/tmp/launch-GmQ6IX/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DISPLAY': '/tmp/launch-2s0mkW/org.macosforge.xquartz:0', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_20:52:01.228817/regular_report/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...gular_report/corrected_input/reference_10K.fasta')\n   1074 \n   1075 \n   1076 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1077     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1078     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1079     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n        nucmer_is_ok = undefined\n        result = undefined\n        cyclic = True\n        draw_plots = False\n        id = 0\n        filename = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report/corrected_input/assembly_10K_1'\n        nucmer_fname = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report/contigs_reports/nucmer_output/assembly_10K_1'\n        myenv = {'_': './manage.py', 'MACOSX_DEPLOYMENT_TARGET': '10.8', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'LC_CTYPE': 'UTF-8', 'TERM_PROGRAM_VERSION': '309', '_MP_FORK_LOGFILE_': '', 'MULTIPROCESSING_FORKING_DISABLE': '1', 'CELERY_LOG_REDIRECT': '1', 'LOGNAME': 'vladsaveliev', 'USER': 'vladsaveliev', 'PATH': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/MUMmer3.23-osx:/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/bin:/Users/vladsaveliev/Dropbox/au/scala/scala/2.9.2:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin', 'HOME': '/Users/vladsaveliev', 'PS1': '(virtualenv)\\\\[\\\\e[36;40m\\\\]\\\\t \\\\W $ \\\\e[0m', 'DISPLAY': '/tmp/launch-2s0mkW/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'Apple_Terminal', 'TERM': 'xterm-256color', 'Apple_PubSub_Socket_Render': '/tmp/launch-6cEa7f/Render', 'VERSIONER_PYTHON_VERSION': '2.7', 'SHLVL': '1', 'FORKED_BY_MULTIPROCESSING': '1', 'CELERY_LOG_FILE': '', 'TERM_SESSION_ID': 'F2A2F1C8-1D2A-4ACF-A145-D2EC8FBC6438', 'SSH_AUTH_SOCK': '/tmp/launch-qMaLaR/Listeners', 'VIRTUAL_ENV': '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'SHELL': '/bin/bash', 'MP_MAIN_FILE': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/manage.pyc', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'celery_dummy_proxy': 'set_by_celeryd', 'TMPDIR': '/var/folders/wp/6kqq17055n390ym24d4k1vw80000gn/T/', 'OLDPWD': '/Users/vladsaveliev', '_MP_FORK_LOGFORMAT_': '[%(asctime)s: %(levelname)s/%(processName)s] %(message)s', 'CLICOLOR': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'Apple_Ubiquity_Message': '/tmp/launch-GmQ6IX/Apple_Ubiquity_Message', 'PWD': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website', '_MP_FORK_LOGLEVEL_': '30', 'DJANGO_SETTINGS_MODULE': 'settings', 'CELERY_LOG_LEVEL': '30', 'COMMAND_MODE': 'unix2003'}\n        output_dir = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report/contigs_reports'\n        reference = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/305034655494f38ea9c9599226f50c99/12_Nov_2012_20:52:01.228817/regular_report/corrected_input/reference_10K.fasta'\n   1080     clear_files(filename, nucmer_fname)\n   1081 \n   1082     return nucmer_is_ok, result\n   1083 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in plantakolya(cyclic=True, draw_plots=False, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...17/regular_report/corrected_input/assembly_10K_1', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...ort/contigs_reports/nucmer_output/assembly_10K_1', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-6cEa7f/Render', 'Apple_Ubiquity_Message': '/tmp/launch-GmQ6IX/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DISPLAY': '/tmp/launch-2s0mkW/org.macosforge.xquartz:0', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_20:52:01.228817/regular_report/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...gular_report/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n        coords_file.write = <built-in method write of file object at 0x102f6e8a0>\n        header = []\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 244, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "829d1d94-44e8-4ebd-8c6f-24a42095293e", "date_done": "2012-11-12T16:53:00.093Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 245, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "3730624a-17b8-4740-93cb-a4b116662115", "date_done": "2012-11-12T17:02:53.107Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 246, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7dd52d7c-c21f-463a-9407-5d8d4b0b2579", "date_done": "2012-11-12T17:05:30.949Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 247, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e6cf1a8d-8a62-4cae-8de4-438eacae78bd", "date_done": "2012-11-12T17:09:13.404Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 248, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "eb6c8a20-1d14-403c-bce5-c2f90d366f58", "date_done": "2012-11-12T17:10:02.317Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 249, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7f7c04f8-c0b9-4efc-a633-77c8d0c30569", "date_done": "2012-11-12T17:10:41.666Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 250, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "53b0cbbd-0d22-4640-a909-1af19034662d", "date_done": "2012-11-12T17:19:15.305Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 251, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "8cb4d384-e527-4991-9495-ced0d7bffa3d", "date_done": "2012-11-13T12:52:54.186Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 252, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "85ae2d2f-3d39-4d17-b49f-cc5dbba20c69", "date_done": "2012-11-13T14:22:14.753Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 253, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6b7f393c-d51c-46bc-a3b4-e6b41515ff34", "date_done": "2012-11-13T15:25:11.670Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 254, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f462960f-a93b-48ed-9604-224a4f22da8f", "date_done": "2012-11-13T15:25:21.358Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 255, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b839a9e3-981c-48c6-b14c-8d279f67cc3e", "date_done": "2012-11-13T15:25:22.942Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 256, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0b8e3ed7-891b-4ab5-a12d-a1cb02f02014", "date_done": "2012-11-13T15:25:23.886Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 257, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "72c2ffca-63d6-4eae-896f-c3891e23539f", "date_done": "2012-11-13T15:25:25.192Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 258, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "dab9b3fb-a1c1-403b-9b68-c2eb169e41ee", "date_done": "2012-11-13T15:25:27.197Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 259, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2ba98dcb-fd24-4c3c-bcdc-54e4404168cd", "date_done": "2012-11-13T15:25:29.474Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 260, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "cde5e8c4-26fb-4ed5-80eb-e29906d9629b", "date_done": "2012-11-13T15:25:30.440Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 261, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7c689a20-0e35-4829-ba08-07f872e7a1a1", "date_done": "2012-11-13T15:25:32.414Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 262, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a2ad33d8-ab3e-4d73-a530-0aacb7a210eb", "date_done": "2012-11-13T15:25:34.310Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 263, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d743bfdd-fe80-4c21-ac94-2ade8e29bdd9", "date_done": "2012-11-13T15:25:35.543Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 264, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7cccc58d-170d-482d-89ef-1ecedb8d226d", "date_done": "2012-11-13T15:25:37.466Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 265, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "27c016a0-4602-455b-9ef8-53b836653ae6", "date_done": "2012-11-13T15:25:39.795Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 266, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0edf026c-4b1f-40b3-a59e-58f163e6a204", "date_done": "2012-11-15T11:04:31.948Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 267, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e5ed3d39-afe3-4cf6-a911-bd94611e1743", "date_done": "2012-11-15T11:12:03.773Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 268, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "39d37532-d0ab-40f1-a7a1-b698be9a3c46", "date_done": "2012-11-15T15:24:40.197Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 269, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "630a7281-812c-4e3b-95fd-3d2be5ca445e", "date_done": "2012-11-15T15:24:54.970Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 270, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "442fea5d-279b-4630-9ad4-1d3733778f97", "date_done": "2012-11-15T15:25:13.237Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 271, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "3f99c6e7-0048-4d54-b12f-5f27d7973ac0", "date_done": "2012-11-15T15:25:53Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 272, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "04c99907-37c6-442d-b179-0597c53098b9", "date_done": "2012-11-15T15:28:25.175Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 273, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "152ef0c2-6435-4ffe-bd2b-ae856e36aa23", "date_done": "2012-11-15T15:28:32.193Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 274, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "15b6615b-bc6f-4285-a443-314c92a7795d", "date_done": "2012-11-15T16:43:19.830Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 275, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4c9512a4-0a70-4753-8595-71b945ccb90c", "date_done": "2012-11-15T16:45:24.350Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 276, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b3449fe1-c539-4ed2-8677-c13190ba7621", "date_done": "2012-11-15T16:45:32.531Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 277, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f9b3fc32-5793-4874-a5ca-c47ec456f27b", "date_done": "2012-11-15T17:41:55.093Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 278, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9929df04-1006-420a-994e-0cd6e16ca686", "date_done": "2012-11-15T17:42:36.703Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 279, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5bb144b0-c903-4db2-b4a9-b15d39bea1ff", "date_done": "2012-11-17T09:12:04.601Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 280, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "226e3ab4-8086-4bee-b25d-5a7224e62ab2", "date_done": "2012-11-18T21:40:04.063Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 281, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "f7d7ffca-6912-4eda-9267-c5586a8c9787", "date_done": "2012-11-19T10:28:20.647Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 42, in start_quast\n    raise e\nImportError: No module named joblib\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbXBvcnRFcnJvcgpxAVUWTm8gbW9kdWxlIG5hbWVkIGpvYmxpYnEChXEDUnEELg==", "hidden": false}}, {"pk": 282, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "d7793889-bc70-40d6-a73e-4d076066c4d3", "date_done": "2012-11-19T10:29:35.451Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 42, in start_quast\n    raise e\nImportError: No module named joblib\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbXBvcnRFcnJvcgpxAVUWTm8gbW9kdWxlIG5hbWVkIGpvYmxpYnEChXEDUnEELg==", "hidden": false}}, {"pk": 283, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "715b2742-de6f-4ecf-a7c3-f4b56d8b992a", "date_done": "2012-11-19T10:30:31.300Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 284, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "faf75930-c3ce-4d1f-acb6-18b511879324", "date_done": "2012-11-19T13:15:49.048Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 285, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "846ef507-deba-435c-a8ed-b25630bb48a4", "date_done": "2012-11-19T15:28:02.389Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 286, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "033799ba-bd35-4b9e-ab30-608f6af57d5b", "date_done": "2012-11-19T15:37:27.975Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 287, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "f292dc53-2276-4b0a-9f23-b59015bcb582", "date_done": "2012-11-19T16:41:27.591Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 42, in start_quast\n    from_email = from_email,\nIndexError: list index out of range\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbmRleEVycm9yCnEBVRdsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChXEDUnEELg==", "hidden": false}}, {"pk": 288, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "94bb7000-527f-4391-996b-6d82ca47dd42", "date_done": "2012-11-19T16:44:15.891Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 289, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "fa6329d5-eb81-4396-8b0a-724a99b378ba", "date_done": "2012-11-19T17:10:04.897Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 290, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2a644d36-30b1-41da-9674-235542c7aab5", "date_done": "2012-11-19T17:32:25.648Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 291, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b917e8c2-9ffa-4ad6-b402-a60e7e96c454", "date_done": "2012-11-19T17:32:40.649Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 292, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "f5eecc98-a526-4181-a6de-9d81976126e1", "date_done": "2012-11-19T18:23:46.684Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 36, in start_quast\n    %s\nAttributeError: 'NoneType' object has no attribute 'name'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUpJ05vbmVUeXBlJyBvYmplY3QgaGFzIG5vIGF0dHJpYnV0ZSAnbmFtZSdxAoVxA1JxBC4=", "hidden": false}}, {"pk": 293, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "bfceab0c-bad9-4bb8-9ed7-98f606e36a19", "date_done": "2012-11-19T18:25:15.722Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 36, in start_quast\n    %s\nAttributeError: 'NoneType' object has no attribute 'name'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUpJ05vbmVUeXBlJyBvYmplY3QgaGFzIG5vIGF0dHJpYnV0ZSAnbmFtZSdxAoVxA1JxBC4=", "hidden": false}}, {"pk": 294, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "72841c53-0627-4c7d-b80e-55508bd90127", "date_done": "2012-11-19T18:26:27.827Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 36, in start_quast\n    %s\nAttributeError: 'NoneType' object has no attribute 'name'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUpJ05vbmVUeXBlJyBvYmplY3QgaGFzIG5vIGF0dHJpYnV0ZSAnbmFtZSdxAoVxA1JxBC4=", "hidden": false}}, {"pk": 295, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "91abc433-8c77-42a6-9645-e4b52a73994a", "date_done": "2012-11-19T18:27:07.317Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 296, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "bbc120bc-4670-42f4-98e2-3aa5e5051744", "date_done": "2012-11-19T23:21:17.064Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 297, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c73c8c48-b3a5-4132-bca1-e30190377d81", "date_done": "2012-11-20T11:37:40.534Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 298, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a39ce8ba-2d77-4a17-8212-1bca75167226", "date_done": "2012-11-20T11:37:53.925Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 299, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b1eb560e-5716-4225-8a4f-1117070df727", "date_done": "2012-11-20T19:09:35.760Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 300, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4af9eff8-a3ba-4e01-9b05-a7b79b53731c", "date_done": "2012-11-22T13:20:13.868Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 301, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1238bc8a-e37c-4456-aff7-21f75daeee0d", "date_done": "2012-11-22T13:20:22.424Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 302, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f784e643-8a98-428d-902d-18b4f7e1c601", "date_done": "2012-11-22T13:53:34.100Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 303, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d28e9d7b-17ad-42d3-a5eb-53765b45658d", "date_done": "2012-11-22T18:08:58.393Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 304, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "06cf649a-8cb7-4aa0-922a-98d0565ac3e4", "date_done": "2012-11-22T18:13:17.551Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 305, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2e3d3110-01af-4cdb-98f7-125d33d870d6", "date_done": "2012-11-22T18:28:28.392Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 306, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "913aed0e-4340-4039-a998-334e78c1afe0", "date_done": "2012-11-22T18:30:22.650Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 307, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "664af0e8-76b0-4d0b-a8a1-1a42cfc8db8c", "date_done": "2012-11-22T18:44:12.451Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 308, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "db28485a-3b6b-4087-86af-4dd80dbdfb59", "date_done": "2012-11-26T13:21:53.995Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 309, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1f41841d-0ca5-4193-988f-b1d8fb24b435", "date_done": "2012-11-26T13:21:53.998Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 310, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "926018ca-d5b1-4fa2-ba44-0d7c8b090bb7", "date_done": "2012-11-26T13:21:53.996Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 311, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "10aa0624-2b8e-4a25-a553-8408c70b7e96", "date_done": "2012-11-26T13:21:59.095Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 312, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1b2b8bef-bb7d-4989-ba93-f327f5a1dc54", "date_done": "2012-11-26T13:22:00.700Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 313, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c231b58d-6bf3-4796-be7f-da3d743b1cad", "date_done": "2012-11-26T13:22:01.457Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 314, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "490188cb-0043-4e0c-85e4-c9416b8231a8", "date_done": "2012-11-26T20:38:32.771Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 315, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7f4f1028-461c-4356-b48c-af3841e54d45", "date_done": "2012-11-26T20:45:52.498Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 316, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "df046489-b997-401e-bc69-8b2e88e447a2", "date_done": "2012-11-26T21:13:26.529Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 317, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d819119b-122b-4882-9169-fffde3b8080f", "date_done": "2012-11-26T21:13:27.863Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 318, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b1f4743a-2154-4d06-8597-c0935360e981", "date_done": "2012-11-26T21:14:05.203Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 319, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5557a3e5-0efd-46d2-8411-fc842500a885", "date_done": "2012-11-26T21:14:07.172Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 320, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "060898da-df3a-4d09-8136-a5a397de4fb1", "date_done": "2012-11-27T09:55:20.005Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 321, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "83971875-1e53-4ac0-bffb-11bdffe4d1c9", "date_done": "2012-11-27T09:55:44.124Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 322, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4c09d0a8-6f46-4037-9e2f-8e90da974a3d", "date_done": "2012-11-27T10:17:53.749Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 323, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d800daa4-9aaf-43a9-b160-6b91595706f5", "date_done": "2012-11-27T17:48:48.163Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 324, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "07d45cec-2c00-4446-88cf-1ec032d0f28a", "date_done": "2012-11-28T15:13:50.630Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs3zK9YDADbbBgc=", "result": "gAJjYmlsbGlhcmQuZXhjZXB0aW9ucwpXb3JrZXJMb3N0RXJyb3IKcQFVKFdvcmtlciBleGl0ZWQgcHJlbWF0dXJlbHkgKGV4aXRjb2RlOiAyKS5xAoVxA1JxBC4=", "hidden": false}}, {"pk": 325, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "432cbc73-5ee0-49e3-8ab1-b75c714b1041", "date_done": "2012-11-28T15:14:25.078Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs3zK9YDADbbBgc=", "result": "gAJjYmlsbGlhcmQuZXhjZXB0aW9ucwpXb3JrZXJMb3N0RXJyb3IKcQFVKFdvcmtlciBleGl0ZWQgcHJlbWF0dXJlbHkgKGV4aXRjb2RlOiAyKS5xAoVxA1JxBC4=", "hidden": false}}, {"pk": 326, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "fb4ab8fb-e2f9-4218-baaa-99e6a84f45b1", "date_done": "2012-11-29T12:17:02.918Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 327, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "039aea23-d5db-495c-a696-e16cd3e48dba", "date_done": "2012-11-29T12:21:16.095Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nIndexError: list index out of range\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbmRleEVycm9yCnEBVRdsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChXEDUnEELg==", "hidden": false}}, {"pk": 328, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "34d9f20a-fb8a-4146-b2c8-22a31f78368c", "date_done": "2012-11-29T12:29:10.350Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 329, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1082e661-410a-4511-9e05-2faeb1284047", "date_done": "2012-11-29T12:29:18.092Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 330, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a695a94e-36ad-4827-95b4-19eaacf48156", "date_done": "2012-11-29T12:36:38.617Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 331, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "2ac72506-c5a9-493b-ad69-222538e6bf06", "date_done": "2012-11-29T12:38:00.699Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs3zK9YDADbbBgc=", "result": "gAJjYmlsbGlhcmQuZXhjZXB0aW9ucwpXb3JrZXJMb3N0RXJyb3IKcQFVKFdvcmtlciBleGl0ZWQgcHJlbWF0dXJlbHkgKGV4aXRjb2RlOiAyKS5xAoVxA1JxBC4=", "hidden": false}}, {"pk": 332, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "2a3e545a-ca14-40aa-b06f-6070b1909a6b", "date_done": "2012-11-29T12:38:27.945Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 95, in start_quast\n    raise e\nIOError: [Errno 2] No such file or directory: u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_16:38:18.838000/contigs/ECOLI2.fasta'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJT0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAliVAAAAL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8yOV9Ob3ZfMjAxMl8xNjozODoxOC44MzgwMDAvY29udGlncy9FQ09MSTIuZmFzdGFxA4dScQQu", "hidden": false}}, {"pk": 333, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "89166a7f-f354-4cbd-b91e-61236e3a2437", "date_done": "2012-11-29T12:39:26.842Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 95, in start_quast\n    raise e\nIOError: [Errno 2] No such file or directory: u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_16:38:26.795589/contigs/ECOLI2.fasta'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJT0Vycm9yCnEBSwJVGU5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlxAliVAAAAL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8yOV9Ob3ZfMjAxMl8xNjozODoyNi43OTU1ODkvY29udGlncy9FQ09MSTIuZmFzdGFxA4dScQQu", "hidden": false}}, {"pk": 334, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2e9d84c9-29bf-4ec9-a1e2-3cb15cceaa3e", "date_done": "2012-11-29T12:45:48.360Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 335, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "3e15d223-dfe3-4a09-a042-99437b2a177d", "date_done": "2012-11-29T13:55:08.217Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 95, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    496     self = load(from_parent)\n    497     process.current_process()._inheriting = False\n    498 \n    499     from_parent.close()\n    500 \n--> 501     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-2, started daemon)>>\n    502     exit(exitcode)\n    503 \n    504 \n    505 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-2, started daemon)>)\n    268                 # delay finalization of the old process object until after\n    269                 # _run_after_forkers() is executed\n    270                 del old_process\n    271             util.info('child process calling self.run()')\n    272             try:\n--> 273                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-2, started daemon)>>\n    274                 exitcode = 0\n    275             finally:\n    276                 util._exit_function()\n    277         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-2, started daemon)>)\n    117     def run(self):\n    118         '''\n    119         Method to be run in sub-process; can be overridden in sub-class\n    120         '''\n    121         if self._target:\n--> 122             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x106592500>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10659df50>, <billiard.queues.SimpleQueue object at 0x1065a50d0>, <function process_initializer at 0x106801c08>, (<Celery default:0x1069c0350>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n    123 \n    124     def start(self):\n    125         '''\n    126         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1069c0350>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    299             break\n    300 \n    301         job, i, func, args, kwds = task\n    302         put((ACK, (job, i, time.time(), pid)))\n    303         try:\n--> 304             result = (True, func(*args, **kwds))\n        result = (True, <ExceptionInfo: IOError(2, 'No such file or directory')>)\n        func = <function trace_task_ret at 0x1069bf6e0>\n        args = ('quast_app.tasks.start_quast', '3e15d223-dfe3-4a09-a042-99437b2a177d', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),), 'expires': None, 'id': '3e15d223-dfe3-4a09-a042-99437b2a177d', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    305         except Exception:\n    306             result = (False, ExceptionInfo())\n    307         try:\n    308             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task_ret(task='quast_app.tasks.start_quast', uuid='3e15d223-dfe3-4a09-a042-99437b2a177d', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '3e15d223-dfe3-4a09-a042-99437b2a177d', 'is_eager': False, ...})\n    297     except Exception, exc:\n    298         return report_internal_error(task, exc)\n    299 \n    300 \n    301 def trace_task_ret(task, uuid, args, kwargs, request={}):\n--> 302     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '3e15d223-dfe3-4a09-a042-99437b2a177d'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),), 'expires': None, 'id': '3e15d223-dfe3-4a09-a042-99437b2a177d', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    303 \n    304 \n    305 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    306     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='3e15d223-dfe3-4a09-a042-99437b2a177d', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '3e15d223-dfe3-4a09-a042-99437b2a177d', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report'], <QuastSession: 29 Nov 2012 13:54:18.111654>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except RetryTaskError, exc:\n    227                     I = Info(RETRY, exc)\n    228                     state, retval = I.state, I.retval\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/29_Nov_2012_17:54:18.111654/regular_report'], send_result_mail=<function send_result_mail>))\n     78         import quast\n     79 \n     80         quast.qconfig.html_report = False\n     81         quast.qconfig.draw_plots = False\n     82 \n---> 83         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x1073a3230>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report']\n     84 \n     85     except Exception as e:\n     86         trace_back = traceback.format_exc()\n     87         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._17:54:18.111654/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/29_Nov_2012_17:54:18.111654/regular_report'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    443     if qconfig.reference:\n    444         ########################################################################\n    445         ### former PLANTAKOLYA, PLANTAGORA\n    446         ########################################################################\n    447         from libs import contigs_analyzer\n--> 448         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x1073c25f0>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    449         for contigs_fpath in contigs_fpaths:\n    450             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    451                 aligned_fpaths.append(contigs_fpath)\n    452 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...4/regular_report/corrected_input/reference.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:18.111654/regular_report/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:18.111654/regular_report/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_17:54:18.111654/regular_report/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=False)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/29_Nov_2012_17:54:18.111654/regular_report/corrected_input/ECOLI3']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    480         self.n_dispatched = 0\n    481         try:\n    482             for function, args, kwargs in iterable:\n    483                 self.dispatch(function, args, kwargs)\n    484 \n--> 485             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    486             # Make sure that we get a last message telling us we are done\n    487             elapsed_time = time.time() - self._start_time\n    488             self._print('Done %3i out of %3i | elapsed: %s finished',\n    489                         (len(self._output),\n\n---------------------------------------------------------------------------\nSub-process traceback:\n---------------------------------------------------------------------------\nIndexError                                         Thu Nov 29 17:55:07 2012\nPID: 11132Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=False, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...654/regular_report/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:18.111654/regular_report/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_17:54:18.111654/regular_report/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...4/regular_report/corrected_input/reference.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=False, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:18.111654/regular_report/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...ular_report/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_17:54:18.111654/regular_report/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...4/regular_report/corrected_input/reference.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 336, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "fc3629d5-9234-4878-8c3f-77fcec40a264", "date_done": "2012-11-30T12:43:36.574Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 95, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    496     else:\n    497         fd = handle\n    498     from_parent = os.fdopen(fd, 'rb')\n    499 \n    500     process.current_process()._inheriting = True\n--> 501     preparation_data = load(from_parent)\n        preparation_data = {'sys_path': ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website', '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/setuptools-0.6c11-py2.7.egg', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/supervisor-3.0a12-py2.7.egg', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/meld3-0.6.8-py2.7.egg', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python27.zip', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/plat-darwin', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/plat-mac', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/plat-mac/lib-scriptpackages', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/Extras/lib/python', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/lib-tk', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/lib-old', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/lib-dynload', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages', '/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages', '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/env/site-packages', '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/env/site-packages'], 'name': 'PoolWorker-3', 'log_to_stderr': False, 'sys_argv': ['./manage.py', 'celeryd'], 'authkey': '\\x07-\\xe2i\\x1c\\x9c10\\xf9iO~\\xc2%w\\x0561\\t\\x15\\xf5n1\\xa5+\\xb0\\xd3=0\\xea\\xe0*', 'orig_dir': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website', 'main_path': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/manage.py'}\n        from_parent = <closed file '<fdopen>', mode 'rb' at 0x10f3b8390>\n    502     prepare(preparation_data)\n    503     # Huge hack to make logging before Process.run work.\n    504     try:\n    505         os.environ[\"MP_MAIN_FILE\"] = sys.modules[\"__main__\"].__file__\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-3, started daemon)>)\n    268             util.info('process exiting with exitcode %d', exitcode)\n    269             sys.stdout.flush()\n    270             sys.stderr.flush()\n    271         return exitcode\n    272 \n--> 273 #\n    274 # We subclass bytes to avoid accidental transmission of auth keys over network\n    275 #\n    276 \n    277 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-3, started daemon)>)\n    117     def terminate(self):\n    118         '''\n    119         Terminate process; sends SIGTERM signal or uses TerminateProcess()\n    120         '''\n    121         self._popen.terminate()\n--> 122 \n        self = <Process(PoolWorker-3, started daemon)>\n    123     def join(self, timeout=None):\n    124         '''\n    125         Wait until child process terminates\n    126         '''\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10f9e7350>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n    303         except Exception, exc:\n--> 304             _, _, tb = sys.exc_info()\n        _ = undefined\n        tb = undefined\n    305             try:\n    306                 wrapped = MaybeEncodingError(exc, result[1])\n    307                 einfo = ExceptionInfo((MaybeEncodingError, wrapped, tb))\n    308                 put((READY, (job, i, (False, einfo))))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task_ret(task='quast_app.tasks.start_quast', uuid='fc3629d5-9234-4878-8c3f-77fcec40a264', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:13.999013/regular_report'], <QuastSession: 30 Nov 2012 12:43:13.999013>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:13.999013/regular_report'], <QuastSession: 30 Nov 2012 12:43:13.999013>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'fc3629d5-9234-4878-8c3f-77fcec40a264', 'is_eager': False, ...})\n    297     except Exception, exc:\n    298         return report_internal_error(task, exc)\n    299 \n    300 \n    301 def trace_task_ret(task, uuid, args, kwargs, request={}):\n--> 302     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'fc3629d5-9234-4878-8c3f-77fcec40a264'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/regular_report'], <QuastSession: 30 Nov 2012 12:43:13.999013>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/regular_report'], <QuastSession: 30 Nov 2012 12:43:13.999013>),), 'expires': None, 'id': 'fc3629d5-9234-4878-8c3f-77fcec40a264', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    303 \n    304 \n    305 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    306     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='fc3629d5-9234-4878-8c3f-77fcec40a264', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:13.999013/regular_report'], <QuastSession: 30 Nov 2012 12:43:13.999013>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:13.999013/regular_report'], <QuastSession: 30 Nov 2012 12:43:13.999013>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'fc3629d5-9234-4878-8c3f-77fcec40a264', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/regular_report'], <QuastSession: 30 Nov 2012 12:43:13.999013>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except RetryTaskError, exc:\n    227                     I = Info(RETRY, exc)\n    228                     state, retval = I.state, I.retval\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:13.999013/regular_report'], send_result_mail=<function send_result_mail>))\n     78         import quast\n     79 \n     80         quast.qconfig.html_report = False\n     81         quast.qconfig.draw_plots = False\n     82 \n---> 83         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x1103ca230>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/regular_report']\n     84 \n     85     except Exception as e:\n     86         trace_back = traceback.format_exc()\n     87         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:13.999013/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:13.999013/regular_report'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    443     if qconfig.reference:\n    444         ########################################################################\n    445         ### former PLANTAKOLYA, PLANTAGORA\n    446         ########################################################################\n    447         from libs import contigs_analyzer\n--> 448         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x1103e95f0>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/regular_report'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    449         for contigs_fpath in contigs_fpaths:\n    450             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    451                 aligned_fpaths.append(contigs_fpath)\n    452 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...3/regular_report/corrected_input/reference.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:13.999013/regular_report/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:13.999013/regular_report/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_16:43:13.999013/regular_report/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=False)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/regular_report/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:13.999013/regular_report/corrected_input/ECOLI3']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    480                             'script, you must protect you main loop using \"if '\n    481                             \"__name__ == '__main__'\"\n    482                             '\". Please see the joblib documentation on Parallel '\n    483                             'for more information'\n    484                         )\n--> 485 \n    486                 # Set an environment variable to avoid infinite loops\n    487                 os.environ['__JOBLIB_SPAWNED_PARALLEL__'] = '1'\n    488                 self._pool = multiprocessing.Pool(n_jobs)\n    489                 self._lock = threading.Lock()\n\n---------------------------------------------------------------------------\nSub-process traceback:\n---------------------------------------------------------------------------\nIndexError                                         Fri Nov 30 16:43:36 2012\nPID: 18507Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=False, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...013/regular_report/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:13.999013/regular_report/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_16:43:13.999013/regular_report/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...3/regular_report/corrected_input/reference.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=False, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:13.999013/regular_report/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...ular_report/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_16:43:13.999013/regular_report/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...3/regular_report/corrected_input/reference.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 337, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "48ba956f-ad2c-462f-8614-f4835335cc04", "date_done": "2012-11-30T12:45:03.232Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 95, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x101a88938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x101a9a690>, <billiard.queues.SimpleQueue object at 0x101a9a7d0>, <function process_initializer at 0x101eeb140>, (<Celery default:0x101eea5d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x101eea5d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x101ee7de8>\n        args = ('quast_app.tasks.start_quast', '48ba956f-ad2c-462f-8614-f4835335cc04', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),), 'expires': None, 'id': '48ba956f-ad2c-462f-8614-f4835335cc04', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='48ba956f-ad2c-462f-8614-f4835335cc04', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '48ba956f-ad2c-462f-8614-f4835335cc04', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '48ba956f-ad2c-462f-8614-f4835335cc04'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),), 'expires': None, 'id': '48ba956f-ad2c-462f-8614-f4835335cc04', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='48ba956f-ad2c-462f-8614-f4835335cc04', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '48ba956f-ad2c-462f-8614-f4835335cc04', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report'], <QuastSession: 30 Nov 2012 12:43:27.367565>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:27.367565/regular_report'], send_result_mail=<function send_result_mail>))\n     78         import quast\n     79 \n     80         quast.qconfig.html_report = False\n     81         quast.qconfig.draw_plots = False\n     82 \n---> 83         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x1029416e0>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report']\n     84 \n     85     except Exception as e:\n     86         trace_back = traceback.format_exc()\n     87         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we..._16:43:27.367565/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/reference.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/genes.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli/operons.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565', '-p', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...7e8a9/30_Nov_2012_16:43:27.367565/regular_report'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    443     if qconfig.reference:\n    444         ########################################################################\n    445         ### former PLANTAKOLYA, PLANTAGORA\n    446         ########################################################################\n    447         from libs import contigs_analyzer\n--> 448         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x1028cc7d0>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    449         for contigs_fpath in contigs_fpaths:\n    450             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    451                 aligned_fpaths.append(contigs_fpath)\n    452 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...5/regular_report/corrected_input/reference.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:27.367565/regular_report/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:27.367565/regular_report/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_16:43:27.367565/regular_report/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=False)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16:43:27.367565/regular_report/corrected_input/ECOLI3']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Fri Nov 30 16:45:02 2012\nPID: 18562Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=False, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...565/regular_report/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:27.367565/regular_report/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_16:43:27.367565/regular_report/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...5/regular_report/corrected_input/reference.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=False, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...:27.367565/regular_report/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...ular_report/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...2_16:43:27.367565/regular_report/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...5/regular_report/corrected_input/reference.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 338, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "2f126138-891b-4780-829f-abf421df08a6", "date_done": "2012-11-30T13:41:08.295Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 105, in start_quast\n    os.rmdir(quast_session.get_evaluation_contigs_dirpath())\nOSError: [Errno 66] Directory not empty: '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_17_33_25_757480/contigs_evaluation'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBS0JVE0RpcmVjdG9yeSBub3QgZW1wdHlxAlWTL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xN18zM18yNV83NTc0ODAvY29udGlnc19ldmFsdWF0aW9ucQOHUnEELg==", "hidden": false}}, {"pk": 339, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "05259976-e225-492c-9faf-b6bb6b9fe529", "date_done": "2012-11-30T13:52:24.544Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 105, in start_quast\n    try:\nOSError: [Errno 66] Directory not empty: '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_17_51_18_746484/contigs_evaluation'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpPU0Vycm9yCnEBS0JVE0RpcmVjdG9yeSBub3QgZW1wdHlxAlWTL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xN181MV8xOF83NDY0ODQvY29udGlnc19ldmFsdWF0aW9ucQOHUnEELg==", "hidden": false}}, {"pk": 340, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "277c8616-7310-4bc3-92a4-bbd1e06515b0", "date_done": "2012-11-30T13:56:26.192Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 341, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e94e2e7e-02a0-4090-a48c-d21fc49f8c6b", "date_done": "2012-11-30T16:07:59.401Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 342, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "7f44ba0c-ccd5-4018-8ce0-fcec206bbed1", "date_done": "2012-11-30T16:32:01.521Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 92, in start_quast\n    raise e\nTypeError: write_fasta() takes exactly 1 argument (2 given)\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVMHdyaXRlX2Zhc3RhKCkgdGFrZXMgZXhhY3RseSAxIGFyZ3VtZW50ICgyIGdpdmVuKXEChXEDUnEELg==", "hidden": false}}, {"pk": 343, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4e3dca63-5566-479d-8da7-35886ceb6637", "date_done": "2012-11-30T16:34:31.467Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 344, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b275a5df-edae-4a69-8b74-ec1784b05cef", "date_done": "2012-11-30T16:37:30.760Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 345, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9127cda0-a54e-496f-b408-637b0a24b36f", "date_done": "2012-11-30T16:57:06.824Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 346, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d37688cf-6e3d-4338-be08-cb56e841dc15", "date_done": "2012-11-30T16:57:12.083Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 347, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "0f2f4338-a827-4600-89db-75bfd9c3e381", "date_done": "2012-11-30T16:58:40.339Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 92, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x103e80938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x103e92690>, <billiard.queues.SimpleQueue object at 0x103e927d0>, <function process_initializer at 0x1042e3140>, (<Celery default:0x1042e25d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1042e25d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x1042dfde8>\n        args = ('quast_app.tasks.start_quast', '0f2f4338-a827-4600-89db-75bfd9c3e381', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), 'expires': None, 'id': '0f2f4338-a827-4600-89db-75bfd9c3e381', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='0f2f4338-a827-4600-89db-75bfd9c3e381', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '0f2f4338-a827-4600-89db-75bfd9c3e381', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '0f2f4338-a827-4600-89db-75bfd9c3e381'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), 'expires': None, 'id': '0f2f4338-a827-4600-89db-75bfd9c3e381', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='0f2f4338-a827-4600-89db-75bfd9c3e381', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '0f2f4338-a827-4600-89db-75bfd9c3e381', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x104d39758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x105f217d0>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI7'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_56_50_928344_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output/corrected_input/ECOLI7']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=3), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=3)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Fri Nov 30 20:58:39 2012\nPID: 20293Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...44_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI3', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_56_50_928344_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI3', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI3', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_56_50_928344_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjam9ibGliLm15X2V4Y2VwdGlvbnMKSm9ibGliSW5kZXhFcnJvcgpxAVQgbgAATXVsdGlwcm9jZXNzaW5nIGV4Y2VwdGlvbjoKICAgIC4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvPHN0cmluZz4gaW4gPG1vZHVsZT4oKQotLS0tPiAxIAogICAgICAyIAogICAgICAzIAogICAgICA0IAogICAgICA1IAogICAgICA2IAogICAgICA3IAogICAgICA4IAogICAgICA5IAogICAgIDEwIAoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvYmlsbGlhcmQvZm9ya2luZy5weSBpbiBtYWluKCkKICAgIDUyOCAgICAgc2VsZiA9IGxvYWQoZnJvbV9wYXJlbnQpCiAgICA1MjkgICAgIHByb2Nlc3MuY3VycmVudF9wcm9jZXNzKCkuX2luaGVyaXRpbmcgPSBGYWxzZQogICAgNTMwIAogICAgNTMxICAgICBmcm9tX3BhcmVudC5jbG9zZSgpCiAgICA1MzIgCi0tPiA1MzMgICAgIGV4aXRjb2RlID0gc2VsZi5fYm9vdHN0cmFwKCkKICAgICAgICBleGl0Y29kZSA9IHVuZGVmaW5lZAogICAgICAgIHNlbGYuX2Jvb3RzdHJhcCA9IDxib3VuZCBtZXRob2QgUHJvY2Vzcy5fYm9vdHN0cmFwIG9mIDxQcm9jZXNzKFBvb2xXb3JrZXItNCwgc3RhcnRlZCBkYWVtb24pPj4KICAgIDUzNCAgICAgZXhpdChleGl0Y29kZSkKICAgIDUzNSAKICAgIDUzNiAKICAgIDUzNyBkZWYgZ2V0X3ByZXBhcmF0aW9uX2RhdGEobmFtZSk6CgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9iaWxsaWFyZC9wcm9jZXNzLnB5IGluIF9ib290c3RyYXAoc2VsZj08UHJvY2VzcyhQb29sV29ya2VyLTQsIHN0YXJ0ZWQgZGFlbW9uKT4pCiAgICAyNDMgICAgICAgICAgICAgICAgICMgZGVsYXkgZmluYWxpemF0aW9uIG9mIHRoZSBvbGQgcHJvY2VzcyBvYmplY3QgdW50aWwgYWZ0ZXIKICAgIDI0NCAgICAgICAgICAgICAgICAgIyBfcnVuX2FmdGVyX2ZvcmtlcnMoKSBpcyBleGVjdXRlZAogICAgMjQ1ICAgICAgICAgICAgICAgICBkZWwgb2xkX3Byb2Nlc3MKICAgIDI0NiAgICAgICAgICAgICB1dGlsLmluZm8oJ2NoaWxkIHByb2Nlc3MgY2FsbGluZyBzZWxmLnJ1bigpJykKICAgIDI0NyAgICAgICAgICAgICB0cnk6Ci0tPiAyNDggICAgICAgICAgICAgICAgIHNlbGYucnVuKCkKICAgICAgICBzZWxmLnJ1biA9IDxib3VuZCBtZXRob2QgUHJvY2Vzcy5ydW4gb2YgPFByb2Nlc3MoUG9vbFdvcmtlci00LCBzdGFydGVkIGRhZW1vbik+PgogICAgMjQ5ICAgICAgICAgICAgICAgICBleGl0Y29kZSA9IDAKICAgIDI1MCAgICAgICAgICAgICBmaW5hbGx5OgogICAgMjUxICAgICAgICAgICAgICAgICB1dGlsLl9leGl0X2Z1bmN0aW9uKCkKICAgIDI1MiAgICAgICAgIGV4Y2VwdCBTeXN0ZW1FeGl0LCBlOgoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvYmlsbGlhcmQvcHJvY2Vzcy5weSBpbiBydW4oc2VsZj08UHJvY2VzcyhQb29sV29ya2VyLTQsIHN0YXJ0ZWQgZGFlbW9uKT4pCiAgICAgOTIgICAgIGRlZiBydW4oc2VsZik6CiAgICAgOTMgICAgICAgICAnJycKICAgICA5NCAgICAgICAgIE1ldGhvZCB0byBiZSBydW4gaW4gc3ViLXByb2Nlc3M7IGNhbiBiZSBvdmVycmlkZGVuIGluIHN1Yi1jbGFzcwogICAgIDk1ICAgICAgICAgJycnCiAgICAgOTYgICAgICAgICBpZiBzZWxmLl90YXJnZXQ6Ci0tLT4gOTcgICAgICAgICAgICAgc2VsZi5fdGFyZ2V0KCpzZWxmLl9hcmdzLCAqKnNlbGYuX2t3YXJncykKICAgICAgICBzZWxmLl90YXJnZXQgPSA8ZnVuY3Rpb24gd29ya2VyIGF0IDB4MTAzZTgwOTM4PgogICAgICAgIHNlbGYuX2FyZ3MgPSAoPGJpbGxpYXJkLnF1ZXVlcy5TaW1wbGVRdWV1ZSBvYmplY3QgYXQgMHgxMDNlOTI2OTA+LCA8YmlsbGlhcmQucXVldWVzLlNpbXBsZVF1ZXVlIG9iamVjdCBhdCAweDEwM2U5MjdkMD4sIDxmdW5jdGlvbiBwcm9jZXNzX2luaXRpYWxpemVyIGF0IDB4MTA0MmUzMTQwPiwgKDxDZWxlcnkgZGVmYXVsdDoweDEwNDJlMjVkMD4sICdWbGFkaXNsYXZzLU1hY0Jvb2stQWlyLmxvY2FsJyksIE5vbmUsIE5vbmUpCiAgICAgICAgc2VsZi5fa3dhcmdzID0ge30KICAgICA5OCAKICAgICA5OSAgICAgZGVmIHN0YXJ0KHNlbGYpOgogICAgMTAwICAgICAgICAgJycnCiAgICAxMDEgICAgICAgICBTdGFydCBjaGlsZCBwcm9jZXNzCgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9iaWxsaWFyZC9wb29sLnB5IGluIHdvcmtlcihpbnF1ZXVlPTxiaWxsaWFyZC5xdWV1ZXMuU2ltcGxlUXVldWUgb2JqZWN0Piwgb3V0cXVldWU9PGJpbGxpYXJkLnF1ZXVlcy5TaW1wbGVRdWV1ZSBvYmplY3Q+LCBpbml0aWFsaXplcj08ZnVuY3Rpb24gcHJvY2Vzc19pbml0aWFsaXplcj4sIGluaXRhcmdzPSg8Q2VsZXJ5IGRlZmF1bHQ6MHgxMDQyZTI1ZDA+LCAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcpLCBtYXh0YXNrcz1Ob25lLCBzZW50aW5lbD1Ob25lKQogICAgMjkzICAgICAgICAgICAgIGJyZWFrCiAgICAyOTQgCiAgICAyOTUgICAgICAgICBqb2IsIGksIGZ1bmMsIGFyZ3MsIGt3ZHMgPSB0YXNrCiAgICAyOTYgICAgICAgICBwdXQoKEFDSywgKGpvYiwgaSwgdGltZS50aW1lKCksIHBpZCkpKQogICAgMjk3ICAgICAgICAgdHJ5OgotLT4gMjk4ICAgICAgICAgICAgIHJlc3VsdCA9IChUcnVlLCBmdW5jKCphcmdzLCAqKmt3ZHMpKQogICAgICAgIHJlc3VsdCA9IChUcnVlLCAwKQogICAgICAgIGZ1bmMgPSA8ZnVuY3Rpb24gX2Zhc3RfdHJhY2VfdGFzayBhdCAweDEwNDJkZmRlOD4KICAgICAgICBhcmdzID0gKCdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCAnMGYyZjQzMzgtYTgyNy00NjAwLTg5ZGItNzViZmQ5YzNlMzgxJywgKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgMjAwLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDMgNiA3IDMwIE5vdiAyMDEyIDE2OjU2OjUwLjkyODM0NCArMDAwMD4pLCksIHt9LCB7J3JldHJpZXMnOiAwLCAndGFzayc6ICdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCAnZ3JvdXAnOiBOb25lLCAnY2FsbGJhY2tzJzogTm9uZSwgJ2VycmJhY2tzJzogTm9uZSwgJ2RlbGl2ZXJ5X2luZm8nOiB7J3ByaW9yaXR5JzogMCwgJ3JvdXRpbmdfa2V5JzogdSdjZWxlcnknLCAnZXhjaGFuZ2UnOiB1J2NlbGVyeSd9LCAnYXJncyc6ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsIDIwMCwgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAzIDYgNyAzMCBOb3YgMjAxMiAxNjo1Njo1MC45MjgzNDQgKzAwMDA+KSwpLCAnZXhwaXJlcyc6IE5vbmUsICdpZCc6ICcwZjJmNDMzOC1hODI3LTQ2MDAtODlkYi03NWJmZDljM2UzODEnLCAnaXNfZWFnZXInOiBGYWxzZSwgJ2V0YSc6IE5vbmUsICdrd2FyZ3MnOiB7fSwgJ2hvc3RuYW1lJzogJ1ZsYWRpc2xhdnMtTWFjQm9vay1BaXIubG9jYWwnLCAndXRjJzogVHJ1ZX0pCiAgICAgICAga3dkcyA9IHt9CiAgICAyOTkgICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgMzAwICAgICAgICAgICAgIHJlc3VsdCA9IChGYWxzZSwgRXhjZXB0aW9uSW5mbygpKQogICAgMzAxICAgICAgICAgdHJ5OgogICAgMzAyICAgICAgICAgICAgIHB1dCgoUkVBRFksIChqb2IsIGksIHJlc3VsdCkpKQoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvY2VsZXJ5L3Rhc2svdHJhY2UucHkgaW4gX2Zhc3RfdHJhY2VfdGFzayh0YXNrPSdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCB1dWlkPScwZjJmNDMzOC1hODI3LTQ2MDAtODlkYi03NWJmZDljM2UzODEnLCBhcmdzPSgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsIDIwMCwgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDMgNiA3IDMwIE5vdiAyMDEyIDE2OjU2OjUwLjkyODM0NCArMDAwMD4pLCksIGt3YXJncz17fSwgcmVxdWVzdD17J2FyZ3MnOiAoKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTcuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAyMDAsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAzIDYgNyAzMCBOb3YgMjAxMiAxNjo1Njo1MC45MjgzNDQgKzAwMDA+KSwpLCAnY2FsbGJhY2tzJzogTm9uZSwgJ2RlbGl2ZXJ5X2luZm8nOiB7J2V4Y2hhbmdlJzogdSdjZWxlcnknLCAncHJpb3JpdHknOiAwLCAncm91dGluZ19rZXknOiB1J2NlbGVyeSd9LCAnZXJyYmFja3MnOiBOb25lLCAnZXRhJzogTm9uZSwgJ2V4cGlyZXMnOiBOb25lLCAnZ3JvdXAnOiBOb25lLCAnaG9zdG5hbWUnOiAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcsICdpZCc6ICcwZjJmNDMzOC1hODI3LTQ2MDAtODlkYi03NWJmZDljM2UzODEnLCAnaXNfZWFnZXInOiBGYWxzZSwgLi4ufSkKICAgIDMwNyAKICAgIDMwOCAKICAgIDMwOSBkZWYgX2Zhc3RfdHJhY2VfdGFzayh0YXNrLCB1dWlkLCBhcmdzLCBrd2FyZ3MsIHJlcXVlc3Q9e30pOgogICAgMzEwICAgICAjIHNldHVwX3dvcmtlcl9vcHRpbWl6YXRpb25zIHdpbGwgcG9pbnQgdHJhY2VfdGFza19yZXQgdG8gaGVyZSwKICAgIDMxMSAgICAgIyBzbyB0aGlzIGlzIHRoZSBmdW5jdGlvbiB1c2VkIGluIHRoZSB3b3JrZXIuCi0tPiAzMTIgICAgIHJldHVybiBfdGFza3NbdGFza10uX190cmFjZV9fKHV1aWQsIGFyZ3MsIGt3YXJncywgcmVxdWVzdClbMF0KICAgICAgICB0YXNrLl9fdHJhY2VfXyA9IHVuZGVmaW5lZAogICAgICAgIHV1aWQgPSAnMGYyZjQzMzgtYTgyNy00NjAwLTg5ZGItNzViZmQ5YzNlMzgxJwogICAgICAgIGFyZ3MgPSAoKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTcuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAyMDAsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMyA2IDcgMzAgTm92IDIwMTIgMTY6NTY6NTAuOTI4MzQ0ICswMDAwPiksKQogICAgICAgIGt3YXJncyA9IHt9CiAgICAgICAgcmVxdWVzdCA9IHsncmV0cmllcyc6IDAsICd0YXNrJzogJ3F1YXN0X2FwcC50YXNrcy5zdGFydF9xdWFzdCcsICdncm91cCc6IE5vbmUsICdjYWxsYmFja3MnOiBOb25lLCAnZXJyYmFja3MnOiBOb25lLCAnZGVsaXZlcnlfaW5mbyc6IHsncHJpb3JpdHknOiAwLCAncm91dGluZ19rZXknOiB1J2NlbGVyeScsICdleGNoYW5nZSc6IHUnY2VsZXJ5J30sICdhcmdzJzogKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgMjAwLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDMgNiA3IDMwIE5vdiAyMDEyIDE2OjU2OjUwLjkyODM0NCArMDAwMD4pLCksICdleHBpcmVzJzogTm9uZSwgJ2lkJzogJzBmMmY0MzM4LWE4MjctNDYwMC04OWRiLTc1YmZkOWMzZTM4MScsICdpc19lYWdlcic6IEZhbHNlLCAnZXRhJzogTm9uZSwgJ2t3YXJncyc6IHt9LCAnaG9zdG5hbWUnOiAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcsICd1dGMnOiBUcnVlfQogICAgMzEzIAogICAgMzE0IAogICAgMzE1IGRlZiBlYWdlcl90cmFjZV90YXNrKHRhc2ssIHV1aWQsIGFyZ3MsIGt3YXJncywgcmVxdWVzdD1Ob25lLCAqKm9wdHMpOgogICAgMzE2ICAgICBvcHRzLnNldGRlZmF1bHQoJ2VhZ2VyJywgVHJ1ZSkKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3ZpcnR1YWxlbnYvbGliL3B5dGhvbjIuNy9zaXRlLXBhY2thZ2VzL2NlbGVyeS90YXNrL3RyYWNlLnB5IGluIHRyYWNlX3Rhc2sodXVpZD0nMGYyZjQzMzgtYTgyNy00NjAwLTg5ZGItNzViZmQ5YzNlMzgxJywgYXJncz0oKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTcuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAyMDAsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAzIDYgNyAzMCBOb3YgMjAxMiAxNjo1Njo1MC45MjgzNDQgKzAwMDA+KSwpLCBrd2FyZ3M9e30sIHJlcXVlc3Q9eydhcmdzJzogKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgMjAwLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMyA2IDcgMzAgTm92IDIwMTIgMTY6NTY6NTAuOTI4MzQ0ICswMDAwPiksKSwgJ2NhbGxiYWNrcyc6IE5vbmUsICdkZWxpdmVyeV9pbmZvJzogeydleGNoYW5nZSc6IHUnY2VsZXJ5JywgJ3ByaW9yaXR5JzogMCwgJ3JvdXRpbmdfa2V5JzogdSdjZWxlcnknfSwgJ2VycmJhY2tzJzogTm9uZSwgJ2V0YSc6IE5vbmUsICdleHBpcmVzJzogTm9uZSwgJ2dyb3VwJzogTm9uZSwgJ2hvc3RuYW1lJzogJ1ZsYWRpc2xhdnMtTWFjQm9vay1BaXIubG9jYWwnLCAnaWQnOiAnMGYyZjQzMzgtYTgyNy00NjAwLTg5ZGItNzViZmQ5YzNlMzgxJywgJ2lzX2VhZ2VyJzogRmFsc2UsIC4uLn0pCiAgICAyMTkgICAgICAgICAgICAgICAgICAgICBzdG9yZV9yZXN1bHQodXVpZCwgeydwaWQnOiBwaWQsCiAgICAyMjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdob3N0bmFtZSc6IGhvc3RuYW1lfSwgU1RBUlRFRCkKICAgIDIyMSAKICAgIDIyMiAgICAgICAgICAgICAgICAgIyAtKi0gVFJBQ0UgLSotCiAgICAyMjMgICAgICAgICAgICAgICAgIHRyeToKLS0+IDIyNCAgICAgICAgICAgICAgICAgICAgIFIgPSByZXR2YWwgPSBmdW4oKmFyZ3MsICoqa3dhcmdzKQogICAgICAgIFIgPSBOb25lCiAgICAgICAgcmV0dmFsID0gdW5kZWZpbmVkCiAgICAgICAgYXJncyA9ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsIDIwMCwgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAzIDYgNyAzMCBOb3YgMjAxMiAxNjo1Njo1MC45MjgzNDQgKzAwMDA+KSwpCiAgICAgICAga3dhcmdzID0ge30KICAgIDIyNSAgICAgICAgICAgICAgICAgICAgIHN0YXRlID0gU1VDQ0VTUwogICAgMjI2ICAgICAgICAgICAgICAgICBleGNlcHQgSWdub3JlLCBleGM6CiAgICAyMjcgICAgICAgICAgICAgICAgICAgICBJLCBSID0gSW5mbyhJR05PUkVELCBleGMpLCBFeGNlcHRpb25JbmZvKGludGVybmFsPVRydWUpCiAgICAyMjggICAgICAgICAgICAgICAgIGV4Y2VwdCBSZXRyeVRhc2tFcnJvciwgZXhjOgoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF9hcHAvdGFza3MucHkgaW4gc3RhcnRfcXVhc3QoKGFyZ3M9WycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsIDIwMCwgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0J10sIHNlbmRfcmVzdWx0X21haWw9PGZ1bmN0aW9uIHNlbmRfcmVzdWx0X21haWw+KSkKICAgICA3NSAgICAgdHJ5OgogICAgIDc2ICAgICAgICAgaWYgbm90IHNldHRpbmdzLlFVQVNUX0RJUlBBVEggaW4gc3lzLnBhdGg6CiAgICAgNzcgICAgICAgICAgICAgc3lzLnBhdGguaW5zZXJ0KDEsIHNldHRpbmdzLlFVQVNUX0RJUlBBVEgpCiAgICAgNzggICAgICAgICBpbXBvcnQgcXVhc3QKICAgICA3OSAKLS0tPiA4MCAgICAgICAgIHJlc3VsdCA9IHF1YXN0Lm1haW4oYXJnc1sxOl0pCiAgICAgICAgcmVzdWx0ID0gdW5kZWZpbmVkCiAgICAgICAgcXVhc3QubWFpbiA9IDxmdW5jdGlvbiBtYWluIGF0IDB4MTA0ZDM5NzU4PgogICAgICAgIGFyZ3MgPSBbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgMjAwLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0J10KICAgICA4MSAKICAgICA4MiAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgIDgzICAgICAgICAgdHJhY2VfYmFjayA9IHRyYWNlYmFjay5mb3JtYXRfZXhjKCkKICAgICA4NCAgICAgICAgIGFkZF90b19lbmQgPSAnXG5cblVzZXIgZW1haWw6ICcgKyBzdHIodXNlcl9lbWFpbCkgKyBcCgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHkgaW4gbWFpbihhcmdzPVt1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi41Nl81MF85MjgzNDRfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTcuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAyMDAsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dCddLCBsaWJfZGlyPScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzJykKICAgIDQ0NyAgICAgaWYgcWNvbmZpZy5yZWZlcmVuY2U6CiAgICA0NDggICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgIDQ0OSAgICAgICAgICMjIyBmb3JtZXIgUExBTlRBS09MWUEsIFBMQU5UQUdPUkEKICAgIDQ1MCAgICAgICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgNDUxICAgICAgICAgZnJvbSBsaWJzIGltcG9ydCBjb250aWdzX2FuYWx5emVyCi0tPiA0NTIgICAgICAgICBudWNtZXJfc3RhdHVzZXMgPSBjb250aWdzX2FuYWx5emVyLmRvKHFjb25maWcucmVmZXJlbmNlLCBjb250aWdzX2ZwYXRocywgcWNvbmZpZy5jeWNsaWMsIG91dHB1dF9kaXJwYXRoICsgJy9jb250aWdzX3JlcG9ydHMnLCBsaWJfZGlyLCBxY29uZmlnLmRyYXdfcGxvdHMpCiAgICAgICAgbnVjbWVyX3N0YXR1c2VzID0gdW5kZWZpbmVkCiAgICAgICAgY29udGlnc19hbmFseXplci5kbyA9IDxmdW5jdGlvbiBkbyBhdCAweDEwNWYyMTdkMD4KICAgICAgICBvdXRwdXRfZGlycGF0aCA9IHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dCcKICAgICAgICBsaWJfZGlyID0gJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMnCiAgICA0NTMgICAgICAgICBmb3IgY29udGlnc19mcGF0aCBpbiBjb250aWdzX2ZwYXRoczoKICAgIDQ1NCAgICAgICAgICAgICBpZiBudWNtZXJfc3RhdHVzZXNbY29udGlnc19mcGF0aF0gPT0gY29udGlnc19hbmFseXplci5OdWNtZXJTdGF0dXMuT0s6CiAgICA0NTUgICAgICAgICAgICAgICAgIGFsaWduZWRfZnBhdGhzLmFwcGVuZChjb250aWdzX2ZwYXRoKQogICAgNDU2IAoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMvY29udGlnc19hbmFseXplci5weSBpbiBkbyhyZWZlcmVuY2U9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9yZWZlcmVuY2VfMTBLLmZhc3RhJywgZmlsZW5hbWVzPVt1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi41MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTMnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi41MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTYnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi41MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTcnXSwgY3ljbGljPVRydWUsIG91dHB1dF9kaXI9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uXzE2XzU2XzUwXzkyODM0NF9VVEMvZnVsbF9vdXRwdXQvY29udGlnc19yZXBvcnRzJywgbGliX2Rpcj0nL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvbGlicycsIGRyYXdfcGxvdHM9VHJ1ZSkKICAgMTE5OSAgICAgICAgIG9zLm1rZGlyKG51Y21lcl9vdXRwdXRfZGlyKQogICAxMjAwIAogICAxMjAxICAgICBmcm9tIGpvYmxpYiBpbXBvcnQgUGFyYWxsZWwsIGRlbGF5ZWQKICAgMTIwMiAgICAgc3RhdHVzZXNfcmVzdWx0c19wYWlycyA9IFBhcmFsbGVsKG5fam9icz1sZW4oZmlsZW5hbWVzKSkoZGVsYXllZChwbGFudGFrb2x5YV9wcm9jZXNzKSgKICAgMTIwMyAgICAgICAgIGN5Y2xpYywgZHJhd19wbG90cywgbnVjbWVyX291dHB1dF9kaXIsIGZuYW1lLCBpZCwgbXllbnYsIG91dHB1dF9kaXIsIHJlZmVyZW5jZSkKLT4gMTIwNCAgICAgICAgICAgZm9yIGlkLCBmbmFtZSBpbiBlbnVtZXJhdGUoZmlsZW5hbWVzKSkKICAgICAgICBpZCA9IHVuZGVmaW5lZAogICAgICAgIGZpbGVuYW1lcyA9IFt1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzE2XzU2XzUwXzkyODM0NF9VVEMvZnVsbF9vdXRwdXQvY29ycmVjdGVkX2lucHV0L0VDT0xJMycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMTZfNTZfNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEk2JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8xNl81Nl81MF85MjgzNDRfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTcnXQogICAxMjA1ICAgICAjIHVuemlwcGluZwogICAxMjA2ICAgICBzdGF0dXNlcywgcmVzdWx0cyA9IFt4WzBdIGZvciB4IGluIHN0YXR1c2VzX3Jlc3VsdHNfcGFpcnNdLCBbeFsxXSBmb3IgeCBpbiBzdGF0dXNlc19yZXN1bHRzX3BhaXJzXQogICAxMjA3IAogICAxMjA4ICAgICBkZWYgc2F2ZV9yZXN1bHQocmVzdWx0KToKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3ZpcnR1YWxlbnYvbGliL3B5dGhvbjIuNy9zaXRlLXBhY2thZ2VzL2pvYmxpYi9wYXJhbGxlbC5weSBpbiBfX2NhbGxfXyhzZWxmPVBhcmFsbGVsKG5fam9icz0zKSwgaXRlcmFibGU9PGdlbmVyYXRvciBvYmplY3QgPGdlbmV4cHI+PikKICAgIDUxMSAgICAgICAgIHNlbGYubl9kaXNwYXRjaGVkID0gMAogICAgNTEyICAgICAgICAgdHJ5OgogICAgNTEzICAgICAgICAgICAgIGZvciBmdW5jdGlvbiwgYXJncywga3dhcmdzIGluIGl0ZXJhYmxlOgogICAgNTE0ICAgICAgICAgICAgICAgICBzZWxmLmRpc3BhdGNoKGZ1bmN0aW9uLCBhcmdzLCBrd2FyZ3MpCiAgICA1MTUgCi0tPiA1MTYgICAgICAgICAgICAgc2VsZi5yZXRyaWV2ZSgpCiAgICAgICAgc2VsZi5yZXRyaWV2ZSA9IDxib3VuZCBtZXRob2QgUGFyYWxsZWwucmV0cmlldmUgb2YgUGFyYWxsZWwobl9qb2JzPTMpPgogICAgNTE3ICAgICAgICAgICAgICMgTWFrZSBzdXJlIHRoYXQgd2UgZ2V0IGEgbGFzdCBtZXNzYWdlIHRlbGxpbmcgdXMgd2UgYXJlIGRvbmUKICAgIDUxOCAgICAgICAgICAgICBlbGFwc2VkX3RpbWUgPSB0aW1lLnRpbWUoKSAtIHNlbGYuX3N0YXJ0X3RpbWUKICAgIDUxOSAgICAgICAgICAgICBzZWxmLl9wcmludCgnRG9uZSAlM2kgb3V0IG9mICUzaSB8IGVsYXBzZWQ6ICVzIGZpbmlzaGVkJywKICAgIDUyMCAgICAgICAgICAgICAgICAgICAgICAgICAobGVuKHNlbGYuX291dHB1dCksCgogICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBTdWItcHJvY2VzcyB0cmFjZWJhY2s6CiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIEluZGV4RXJyb3IgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZyaSBOb3YgMzAgMjA6NTg6MzkgMjAxMgpQSUQ6IDIwMjkzUHl0aG9uIDIuNy4xOiAvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vdmlydHVhbGVudi9iaW4vcHl0aG9uCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzL2NvbnRpZ3NfYW5hbHl6ZXIucHljIGluIHBsYW50YWtvbHlhX3Byb2Nlc3MoY3ljbGljPVRydWUsIGRyYXdfcGxvdHM9VHJ1ZSwgbnVjbWVyX291dHB1dF9kaXI9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uNDRfVVRDL2Z1bGxfb3V0cHV0L2NvbnRpZ3NfcmVwb3J0cy9udWNtZXJfb3V0cHV0JywgZmlsZW5hbWU9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEkzJywgaWQ9MCwgbXllbnY9eydBcHBsZV9QdWJTdWJfU29ja2V0X1JlbmRlcic6ICcvdG1wL2xhdW5jaC04NmtnUDMvUmVuZGVyJywgJ0FwcGxlX1ViaXF1aXR5X01lc3NhZ2UnOiAnL3RtcC9sYXVuY2gtTHdkTTVBL0FwcGxlX1ViaXF1aXR5X01lc3NhZ2UnLCAnQ0VMRVJZX0xPQURFUic6ICdkamNlbGVyeS5sb2FkZXJzLkRqYW5nb0xvYWRlcicsICdDRUxFUllfTE9HX0ZJTEUnOiAnJywgJ0NFTEVSWV9MT0dfTEVWRUwnOiAnMzAnLCAnQ0VMRVJZX0xPR19SRURJUkVDVCc6ICcxJywgJ0NFTEVSWV9MT0dfUkVESVJFQ1RfTEVWRUwnOiAnV0FSTklORycsICdDTElDT0xPUic6ICcxJywgJ0NPTU1BTkRfTU9ERSc6ICd1bml4MjAwMycsICdERVZFTE9QTUVOVCc6ICcxJywgLi4ufSwgb3V0cHV0X2Rpcj11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi5fMTZfNTZfNTBfOTI4MzQ0X1VUQy9mdWxsX291dHB1dC9jb250aWdzX3JlcG9ydHMnLCByZWZlcmVuY2U9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9yZWZlcmVuY2VfMTBLLmZhc3RhJykKICAgMTE0OCAKICAgMTE0OSAKICAgMTE1MCBkZWYgcGxhbnRha29seWFfcHJvY2VzcyhjeWNsaWMsIGRyYXdfcGxvdHMsIG51Y21lcl9vdXRwdXRfZGlyLCBmaWxlbmFtZSwgaWQsIG15ZW52LCBvdXRwdXRfZGlyLCByZWZlcmVuY2UpOgogICAxMTUxICAgICBwcmludCAnICAnICsgaWRfdG9fc3RyKGlkKSArIG9zLnBhdGguYmFzZW5hbWUoZmlsZW5hbWUpICsgJy4uLicKICAgMTE1MiAgICAgbnVjbWVyX2ZuYW1lID0gb3MucGF0aC5qb2luKG51Y21lcl9vdXRwdXRfZGlyLCBvcy5wYXRoLmJhc2VuYW1lKGZpbGVuYW1lKSkKLT4gMTE1MyAgICAgbnVjbWVyX2lzX29rLCByZXN1bHQgPSBwbGFudGFrb2x5YShjeWNsaWMsIGRyYXdfcGxvdHMsIGlkLCBmaWxlbmFtZSwgbnVjbWVyX2ZuYW1lLCBteWVudiwgb3V0cHV0X2RpciwgcmVmZXJlbmNlKQogICAxMTU0ICAgICBjbGVhcl9maWxlcyhmaWxlbmFtZSwgbnVjbWVyX2ZuYW1lKQogICAxMTU1IAogICAxMTU2ICAgICByZXR1cm4gbnVjbWVyX2lzX29rLCByZXN1bHQKICAgMTE1NyAKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzL2NvbnRpZ3NfYW5hbHl6ZXIucHljIGluIHBsYW50YWtvbHlhKGN5Y2xpYz1UcnVlLCBkcmF3X3Bsb3RzPVRydWUsIGlkPTAsIGZpbGVuYW1lPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLjUwXzkyODM0NF9VVEMvZnVsbF9vdXRwdXQvY29ycmVjdGVkX2lucHV0L0VDT0xJMycsIG51Y21lcmZpbGVuYW1lPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLmZ1bGxfb3V0cHV0L2NvbnRpZ3NfcmVwb3J0cy9udWNtZXJfb3V0cHV0L0VDT0xJMycsIG15ZW52PXsnQXBwbGVfUHViU3ViX1NvY2tldF9SZW5kZXInOiAnL3RtcC9sYXVuY2gtODZrZ1AzL1JlbmRlcicsICdBcHBsZV9VYmlxdWl0eV9NZXNzYWdlJzogJy90bXAvbGF1bmNoLUx3ZE01QS9BcHBsZV9VYmlxdWl0eV9NZXNzYWdlJywgJ0NFTEVSWV9MT0FERVInOiAnZGpjZWxlcnkubG9hZGVycy5EamFuZ29Mb2FkZXInLCAnQ0VMRVJZX0xPR19GSUxFJzogJycsICdDRUxFUllfTE9HX0xFVkVMJzogJzMwJywgJ0NFTEVSWV9MT0dfUkVESVJFQ1QnOiAnMScsICdDRUxFUllfTE9HX1JFRElSRUNUX0xFVkVMJzogJ1dBUk5JTkcnLCAnQ0xJQ09MT1InOiAnMScsICdDT01NQU5EX01PREUnOiAndW5peDIwMDMnLCAnREVWRUxPUE1FTlQnOiAnMScsIC4uLn0sIG91dHB1dF9kaXI9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uXzE2XzU2XzUwXzkyODM0NF9VVEMvZnVsbF9vdXRwdXQvY29udGlnc19yZXBvcnRzJywgcmVmZXJlbmNlPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLi9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvcmVmZXJlbmNlXzEwSy5mYXN0YScpCiAgICAzNzkgICAgICAgICB0bXBfY29vcmRzX2ZpbGUgPSBvcGVuKHRtcF9jb29yZHNfZmlsZW5hbWUpCiAgICAzODAgICAgICAgICBmb3IgbGluZSBpbiB0bXBfY29vcmRzX2ZpbGU6CiAgICAzODEgICAgICAgICAgICAgaGVhZGVyLmFwcGVuZChsaW5lKQogICAgMzgyICAgICAgICAgICAgIGlmIGxpbmUuc3RhcnRzd2l0aCgnPT09PT0nKToKICAgIDM4MyAgICAgICAgICAgICAgICAgYnJlYWsKLS0+IDM4NCAgICAgICAgIGNvb3Jkc19maWxlLndyaXRlKGhlYWRlclstMl0pCiAgICAzODUgICAgICAgICBjb29yZHNfZmlsZS53cml0ZShoZWFkZXJbLTFdKQogICAgMzg2ICAgICAgICAgZm9yIGxpbmUgaW4gdG1wX2Nvb3Jkc19maWxlOgogICAgMzg3ICAgICAgICAgICAgIGNvb3Jkc19maWxlLndyaXRlKGxpbmUpCiAgICAzODggICAgICAgICBjb29yZHNfZmlsZS5jbG9zZSgpCgpJbmRleEVycm9yOiBsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChVJxA31iLg==", "hidden": false}}, {"pk": 348, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51", "date_done": "2012-11-30T16:58:46.981Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 92, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-1, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-1, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-1, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-1, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10fe88938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10fe9a690>, <billiard.queues.SimpleQueue object at 0x10fe9a7d0>, <function process_initializer at 0x1102eb140>, (<Celery default:0x1102ea5d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1102ea5d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x1102e7de8>\n        args = ('quast_app.tasks.start_quast', 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), 'expires': None, 'id': 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), 'expires': None, 'id': 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x110d41758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x112722e60>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI6'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_57_00_852275_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output/corrected_input/ECOLI6']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=3), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=3)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Fri Nov 30 20:58:46 2012\nPID: 20323Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...75_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_57_00_852275_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_57_00_852275_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 349, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "0135a4ca-04ef-4492-bfd6-f8afd3445031", "date_done": "2012-11-30T20:15:13.744Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 92, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-1, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-1, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-1, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-1, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10fe88938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10fe9a690>, <billiard.queues.SimpleQueue object at 0x10fe9a7d0>, <function process_initializer at 0x1102eb140>, (<Celery default:0x1102ea5d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1102ea5d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, <ExceptionInfo: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-1, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-1, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-1, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-1, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10fe88938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10fe9a690>, <billiard.queues.SimpleQueue object at 0x10fe9a7d0>, <function process_initializer at 0x1102eb140>, (<Celery default:0x1102ea5d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1102ea5d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x1102e7de8>\n        args = ('quast_app.tasks.start_quast', 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), 'expires': None, 'id': 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), 'expires': None, 'id': 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'dd6c9e3e-fe18-4bce-8945-69ca7f5e6b51', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], <QuastSession: 2 3 6 30 Nov 2012 16:57:00.852275 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x110d41758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...57_00_852275_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x112722e60>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI6'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_57_00_852275_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_57_00_852275_UTC/full_output/corrected_input/ECOLI6']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=3), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=3)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Fri Nov 30 20:58:46 2012\nPID: 20323Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...75_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_57_00_852275_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...00_852275_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_57_00_852275_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________>)\n        func = <function _fast_trace_task at 0x1102e7de8>\n        args = ('quast_app.tasks.start_quast', '0135a4ca-04ef-4492-bfd6-f8afd3445031', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),), 'expires': None, 'id': '0135a4ca-04ef-4492-bfd6-f8afd3445031', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='0135a4ca-04ef-4492-bfd6-f8afd3445031', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '0135a4ca-04ef-4492-bfd6-f8afd3445031', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '0135a4ca-04ef-4492-bfd6-f8afd3445031'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),), 'expires': None, 'id': '0135a4ca-04ef-4492-bfd6-f8afd3445031', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='0135a4ca-04ef-4492-bfd6-f8afd3445031', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '0135a4ca-04ef-4492-bfd6-f8afd3445031', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], <QuastSession: 30 Nov 2012 20:14:53.829028 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x110d41758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_829028_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x112722e60>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...53_829028_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...53_829028_UTC/full_output/corrected_input/ECOLI6'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._20_14_53_829028_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_20_14_53_829028_UTC/full_output/corrected_input/ECOLI6']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 00:15:13 2012\nPID: 21201Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...53_829028_UTC/full_output/corrected_input/ECOLI3', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._20_14_53_829028_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...53_829028_UTC/full_output/corrected_input/ECOLI3', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI3', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._20_14_53_829028_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 350, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "378f146f-b602-44f8-8111-a13f251f80fc", "date_done": "2012-11-30T21:20:39.208Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 92, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x103e80938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x103e92690>, <billiard.queues.SimpleQueue object at 0x103e927d0>, <function process_initializer at 0x1042e3140>, (<Celery default:0x1042e25d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1042e25d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, <ExceptionInfo: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x103e80938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x103e92690>, <billiard.queues.SimpleQueue object at 0x103e927d0>, <function process_initializer at 0x1042e3140>, (<Celery default:0x1042e25d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1042e25d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x1042dfde8>\n        args = ('quast_app.tasks.start_quast', '0f2f4338-a827-4600-89db-75bfd9c3e381', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), 'expires': None, 'id': '0f2f4338-a827-4600-89db-75bfd9c3e381', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='0f2f4338-a827-4600-89db-75bfd9c3e381', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '0f2f4338-a827-4600-89db-75bfd9c3e381', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '0f2f4338-a827-4600-89db-75bfd9c3e381'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), 'expires': None, 'id': '0f2f4338-a827-4600-89db-75bfd9c3e381', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='0f2f4338-a827-4600-89db-75bfd9c3e381', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '0f2f4338-a827-4600-89db-75bfd9c3e381', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], <QuastSession: 3 6 7 30 Nov 2012 16:56:50.928344 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x104d39758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...56_50_928344_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x105f217d0>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI7'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_56_50_928344_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_16_56_50_928344_UTC/full_output/corrected_input/ECOLI7']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=3), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=3)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Fri Nov 30 20:58:39 2012\nPID: 20293Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...44_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI3', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_56_50_928344_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...50_928344_UTC/full_output/corrected_input/ECOLI3', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI3', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._16_56_50_928344_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________>)\n        func = <function _fast_trace_task at 0x1042dfde8>\n        args = ('quast_app.tasks.start_quast', '378f146f-b602-44f8-8111-a13f251f80fc', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),), 'expires': None, 'id': '378f146f-b602-44f8-8111-a13f251f80fc', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='378f146f-b602-44f8-8111-a13f251f80fc', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '378f146f-b602-44f8-8111-a13f251f80fc', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '378f146f-b602-44f8-8111-a13f251f80fc'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),), 'expires': None, 'id': '378f146f-b602-44f8-8111-a13f251f80fc', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='378f146f-b602-44f8-8111-a13f251f80fc', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '378f146f-b602-44f8-8111-a13f251f80fc', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:19.224484 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x104d39758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_19_224484_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x105f217d0>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...19_224484_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...19_224484_UTC/full_output/corrected_input/ECOLI6'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_20_19_224484_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_19_224484_UTC/full_output/corrected_input/ECOLI6']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 01:20:39 2012\nPID: 21545Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...84_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...19_224484_UTC/full_output/corrected_input/ECOLI3', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_20_19_224484_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...19_224484_UTC/full_output/corrected_input/ECOLI3', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI3', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_20_19_224484_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 351, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "d1229a1c-64c3-414b-b3bc-025c13ce2365", "date_done": "2012-11-30T21:26:41.375Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 92, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-3, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-3, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-3, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-3, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x103be9938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x103bfb690>, <billiard.queues.SimpleQueue object at 0x103bfb7d0>, <function process_initializer at 0x10404c140>, (<Celery default:0x10404b5d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10404b5d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x104048de8>\n        args = ('quast_app.tasks.start_quast', 'd1229a1c-64c3-414b-b3bc-025c13ce2365', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),), 'expires': None, 'id': 'd1229a1c-64c3-414b-b3bc-025c13ce2365', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='d1229a1c-64c3-414b-b3bc-025c13ce2365', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'd1229a1c-64c3-414b-b3bc-025c13ce2365', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'd1229a1c-64c3-414b-b3bc-025c13ce2365'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),), 'expires': None, 'id': 'd1229a1c-64c3-414b-b3bc-025c13ce2365', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='d1229a1c-64c3-414b-b3bc-025c13ce2365', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'd1229a1c-64c3-414b-b3bc-025c13ce2365', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], <QuastSession: 30 Nov 2012 21:20:27.565126 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x104aa3668>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...20_27_565126_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x10605dd70>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...27_565126_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...27_565126_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_20_27_565126_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_20_27_565126_UTC/full_output/corrected_input/ECOLI3']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 01:26:40 2012\nPID: 21576Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...26_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...27_565126_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_20_27_565126_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...27_565126_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_20_27_565126_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 352, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9", "date_done": "2012-11-30T21:28:52.458Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 92, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-3, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-3, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-3, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-3, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x101654938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x101666690>, <billiard.queues.SimpleQueue object at 0x1016667d0>, <function process_initializer at 0x101ab7140>, (<Celery default:0x101ab65d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x101ab65d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x101ab3de8>\n        args = ('quast_app.tasks.start_quast', 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), 'expires': None, 'id': 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), 'expires': None, 'id': 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x10250d758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x103ce6140>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_245287_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_245287_UTC/full_output/corrected_input/ECOLI6'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_28_28_245287_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output/corrected_input/ECOLI6']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 01:28:51 2012\nPID: 21651Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...87_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_245287_UTC/full_output/corrected_input/ECOLI3', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_28_28_245287_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_245287_UTC/full_output/corrected_input/ECOLI3', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI3', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_28_28_245287_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 353, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9ffb0147-bfd6-4bfa-ab50-b731a6652f8d", "date_done": "2012-11-30T21:48:32.414Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 354, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "ac036937-a926-4e93-b212-b68d9665a8d9", "date_done": "2012-11-30T22:16:25.955Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 92, in start_quast\n    add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-3, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-3, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-3, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-3, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x101654938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x101666690>, <billiard.queues.SimpleQueue object at 0x1016667d0>, <function process_initializer at 0x101ab7140>, (<Celery default:0x101ab65d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x101ab65d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, <ExceptionInfo: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-3, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-3, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-3, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-3, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x101654938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x101666690>, <billiard.queues.SimpleQueue object at 0x1016667d0>, <function process_initializer at 0x101ab7140>, (<Celery default:0x101ab65d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x101ab65d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x101ab3de8>\n        args = ('quast_app.tasks.start_quast', 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), 'expires': None, 'id': 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), 'expires': None, 'id': 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'bcacbb15-d7fe-4acb-9e9d-6cdb6219b9b9', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], <QuastSession: 30 Nov 2012 21:28:28.245287 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x10250d758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_28_245287_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 200, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x103ce6140>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_245287_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_245287_UTC/full_output/corrected_input/ECOLI6'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_28_28_245287_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_21_28_28_245287_UTC/full_output/corrected_input/ECOLI6']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 01:28:51 2012\nPID: 21651Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...87_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_245287_UTC/full_output/corrected_input/ECOLI3', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_28_28_245287_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_245287_UTC/full_output/corrected_input/ECOLI3', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI3', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._21_28_28_245287_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________>)\n        func = <function _fast_trace_task at 0x101ab3de8>\n        args = ('quast_app.tasks.start_quast', 'ac036937-a926-4e93-b212-b68d9665a8d9', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),), 'expires': None, 'id': 'ac036937-a926-4e93-b212-b68d9665a8d9', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='ac036937-a926-4e93-b212-b68d9665a8d9', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'ac036937-a926-4e93-b212-b68d9665a8d9', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'ac036937-a926-4e93-b212-b68d9665a8d9'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),), 'expires': None, 'id': 'ac036937-a926-4e93-b212-b68d9665a8d9', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='ac036937-a926-4e93-b212-b68d9665a8d9', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'ac036937-a926-4e93-b212-b68d9665a8d9', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], <QuastSession: 30 Nov 2012 22:16:03.053324 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], send_result_mail=<function send_result_mail>))\n     75     try:\n     76         if not settings.QUAST_DIRPATH in sys.path:\n     77             sys.path.insert(1, settings.QUAST_DIRPATH)\n     78         import quast\n     79 \n---> 80         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x10250d758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output']\n     81 \n     82     except Exception as e:\n     83         trace_back = traceback.format_exc()\n     84         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_03_053324_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x103ce6140>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...03_053324_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...03_053324_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_16_03_053324_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_16_03_053324_UTC/full_output/corrected_input/ECOLI3']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 02:16:25 2012\nPID: 22156Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...24_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...03_053324_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_16_03_053324_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...03_053324_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_16_03_053324_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 355, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "90769bd5-ab49-46b2-b45e-0b80b23173e6", "date_done": "2012-11-30T22:19:25.481Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 356, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "416f2566-ac53-4484-9ced-625d0c652cc8", "date_done": "2012-11-30T22:19:51.166Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 357, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2771d5e1-cd94-42a5-a213-e2a18ea8569b", "date_done": "2012-11-30T22:22:07.500Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 358, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "b399905e-148e-49ed-90ef-b216d86b1c67", "date_done": "2012-11-30T22:22:11.774Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 102, in start_quast\n    '\\n\\nSession key: ' + quast_session.user_session.session_key +\\\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10ec21938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10ec33690>, <billiard.queues.SimpleQueue object at 0x10ec337d0>, <function process_initializer at 0x10f084140>, (<Celery default:0x10f0835d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10f0835d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x10f080de8>\n        args = ('quast_app.tasks.start_quast', 'b399905e-148e-49ed-90ef-b216d86b1c67', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),), 'expires': None, 'id': 'b399905e-148e-49ed-90ef-b216d86b1c67', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='b399905e-148e-49ed-90ef-b216d86b1c67', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'b399905e-148e-49ed-90ef-b216d86b1c67', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'b399905e-148e-49ed-90ef-b216d86b1c67'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),), 'expires': None, 'id': 'b399905e-148e-49ed-90ef-b216d86b1c67', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='b399905e-148e-49ed-90ef-b216d86b1c67', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'b399905e-148e-49ed-90ef-b216d86b1c67', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], <QuastSession: 30 Nov 2012 22:21:28.038074 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], command='./quast.py /Users/vladsaveliev/Dropbox/bio/quast...7e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'))\n     85 \n     86         result = quast.main(args[1:])\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n---> 90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n        add_to_end = undefined\n        user_email = u'nod.only@gmail.com'\n        quast_session.user_session.session_key = u'65fbc0e6cff5140e3a7113fb7567e8a9'\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output']\n        e = undefined\n        trace_back = undefined\n     91                      '\\n\\nSession key: ' + quast_session.user_session.session_key + \\\n     92                      '\\n\\nArgs: ' + str(args) + \\\n     93                      '\\n\\nException: ' + str(e) + \\\n     94                      '\\n\\nTraceback: ' + str(trace_back)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...21_28_038074_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', 500, '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x111d5a758>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_038074_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_038074_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_038074_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_038074_UTC/full_output/corrected_input/ECOLI7'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_21_28_038074_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_21_28_038074_UTC/full_output/corrected_input/ECOLI7']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=4), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=4)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 02:22:11 2012\nPID: 22382Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...74_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_038074_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_21_28_038074_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_038074_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_21_28_038074_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 359, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "e42699ff-488a-4b9a-aff6-546deaeaf0da", "date_done": "2012-12-01T13:31:29.150Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 39, in start_quast\n    command = ' '.join(args)\nTypeError: sequence item 10: expected string or Unicode, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVN3NlcXVlbmNlIGl0ZW0gMTA6IGV4cGVjdGVkIHN0cmluZyBvciBVbmljb2RlLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 360, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "2f69efef-a5a0-43bb-808a-dcf53ab4d223", "date_done": "2012-12-01T13:33:59.901Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 39, in start_quast\n    command = ' '.join(args)\nTypeError: sequence item 10: expected string or Unicode, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVN3NlcXVlbmNlIGl0ZW0gMTA6IGV4cGVjdGVkIHN0cmluZyBvciBVbmljb2RlLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 361, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "423d6f42-15e8-4111-9845-61e059e22075", "date_done": "2012-12-01T13:37:51.597Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 43, in start_quast\n    logging.info('start_quast: running %s:' + command)\nNameError: global name 'command' is not defined\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpOYW1lRXJyb3IKcQFVJGdsb2JhbCBuYW1lICdjb21tYW5kJyBpcyBub3QgZGVmaW5lZHEChXEDUnEELg==", "hidden": false}}, {"pk": 362, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "3c37a359-9275-467a-9bfd-a254dee01b23", "date_done": "2012-12-01T13:40:23.751Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 41, in start_quast\n    command = ' '.join(args)\nTypeError: sequence item 10: expected string or Unicode, int found\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVN3NlcXVlbmNlIGl0ZW0gMTA6IGV4cGVjdGVkIHN0cmluZyBvciBVbmljb2RlLCBpbnQgZm91bmRxAoVxA1JxBC4=", "hidden": false}}, {"pk": 363, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "833929c1-c90a-4e40-91e2-449d8ead80ad", "date_done": "2012-12-01T13:42:01.059Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 364, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "90a5882d-3aeb-42ba-82fa-6f2e239c189c", "date_done": "2012-12-01T13:42:33.391Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 365, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5e8b2ca4-931b-4269-a3d2-ce0058192902", "date_done": "2012-12-01T14:15:23.104Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 366, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4563d8a9-de44-41bd-8eca-cb2ded47753c", "date_done": "2012-12-01T14:15:43.655Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 367, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4c5a4f4f-b802-4795-950c-d6809f2d24a8", "date_done": "2012-12-01T14:16:06.037Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 368, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "4609c5b0-4fc4-41f4-860f-140bb257fedd", "date_done": "2012-12-01T14:16:17.653Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-2, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-2, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-2, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-2, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x107a47938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x107a59690>, <billiard.queues.SimpleQueue object at 0x107a597d0>, <function process_initializer at 0x107eaa140>, (<Celery default:0x107ea95d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x107ea95d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x107ea6de8>\n        args = ('quast_app.tasks.start_quast', '4609c5b0-4fc4-41f4-860f-140bb257fedd', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),), 'expires': None, 'id': '4609c5b0-4fc4-41f4-860f-140bb257fedd', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='4609c5b0-4fc4-41f4-860f-140bb257fedd', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '4609c5b0-4fc4-41f4-860f-140bb257fedd', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '4609c5b0-4fc4-41f4-860f-140bb257fedd'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),), 'expires': None, 'id': '4609c5b0-4fc4-41f4-860f-140bb257fedd', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='4609c5b0-4fc4-41f4-860f-140bb257fedd', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '4609c5b0-4fc4-41f4-860f-140bb257fedd', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], <QuastSession: 30 Nov 2012 22:02:26.984792 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x1089016e0>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...02_26_984792_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x10a2c2938>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...26_984792_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...26_984792_UTC/full_output/corrected_input/ECOLI7'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_02_26_984792_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/30_Nov_2012_22_02_26_984792_UTC/full_output/corrected_input/ECOLI7']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 18:16:17 2012\nPID: 23777Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...92_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...26_984792_UTC/full_output/corrected_input/ECOLI6', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_02_26_984792_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...26_984792_UTC/full_output/corrected_input/ECOLI6', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI6', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._22_02_26_984792_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjam9ibGliLm15X2V4Y2VwdGlvbnMKSm9ibGliSW5kZXhFcnJvcgpxAVTnZgAATXVsdGlwcm9jZXNzaW5nIGV4Y2VwdGlvbjoKICAgIC4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvPHN0cmluZz4gaW4gPG1vZHVsZT4oKQotLS0tPiAxIAogICAgICAyIAogICAgICAzIAogICAgICA0IAogICAgICA1IAogICAgICA2IAogICAgICA3IAogICAgICA4IAogICAgICA5IAogICAgIDEwIAoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvYmlsbGlhcmQvZm9ya2luZy5weSBpbiBtYWluKCkKICAgIDUyOCAgICAgc2VsZiA9IGxvYWQoZnJvbV9wYXJlbnQpCiAgICA1MjkgICAgIHByb2Nlc3MuY3VycmVudF9wcm9jZXNzKCkuX2luaGVyaXRpbmcgPSBGYWxzZQogICAgNTMwIAogICAgNTMxICAgICBmcm9tX3BhcmVudC5jbG9zZSgpCiAgICA1MzIgCi0tPiA1MzMgICAgIGV4aXRjb2RlID0gc2VsZi5fYm9vdHN0cmFwKCkKICAgICAgICBleGl0Y29kZSA9IHVuZGVmaW5lZAogICAgICAgIHNlbGYuX2Jvb3RzdHJhcCA9IDxib3VuZCBtZXRob2QgUHJvY2Vzcy5fYm9vdHN0cmFwIG9mIDxQcm9jZXNzKFBvb2xXb3JrZXItMiwgc3RhcnRlZCBkYWVtb24pPj4KICAgIDUzNCAgICAgZXhpdChleGl0Y29kZSkKICAgIDUzNSAKICAgIDUzNiAKICAgIDUzNyBkZWYgZ2V0X3ByZXBhcmF0aW9uX2RhdGEobmFtZSk6CgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9iaWxsaWFyZC9wcm9jZXNzLnB5IGluIF9ib290c3RyYXAoc2VsZj08UHJvY2VzcyhQb29sV29ya2VyLTIsIHN0YXJ0ZWQgZGFlbW9uKT4pCiAgICAyNDMgICAgICAgICAgICAgICAgICMgZGVsYXkgZmluYWxpemF0aW9uIG9mIHRoZSBvbGQgcHJvY2VzcyBvYmplY3QgdW50aWwgYWZ0ZXIKICAgIDI0NCAgICAgICAgICAgICAgICAgIyBfcnVuX2FmdGVyX2ZvcmtlcnMoKSBpcyBleGVjdXRlZAogICAgMjQ1ICAgICAgICAgICAgICAgICBkZWwgb2xkX3Byb2Nlc3MKICAgIDI0NiAgICAgICAgICAgICB1dGlsLmluZm8oJ2NoaWxkIHByb2Nlc3MgY2FsbGluZyBzZWxmLnJ1bigpJykKICAgIDI0NyAgICAgICAgICAgICB0cnk6Ci0tPiAyNDggICAgICAgICAgICAgICAgIHNlbGYucnVuKCkKICAgICAgICBzZWxmLnJ1biA9IDxib3VuZCBtZXRob2QgUHJvY2Vzcy5ydW4gb2YgPFByb2Nlc3MoUG9vbFdvcmtlci0yLCBzdGFydGVkIGRhZW1vbik+PgogICAgMjQ5ICAgICAgICAgICAgICAgICBleGl0Y29kZSA9IDAKICAgIDI1MCAgICAgICAgICAgICBmaW5hbGx5OgogICAgMjUxICAgICAgICAgICAgICAgICB1dGlsLl9leGl0X2Z1bmN0aW9uKCkKICAgIDI1MiAgICAgICAgIGV4Y2VwdCBTeXN0ZW1FeGl0LCBlOgoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvYmlsbGlhcmQvcHJvY2Vzcy5weSBpbiBydW4oc2VsZj08UHJvY2VzcyhQb29sV29ya2VyLTIsIHN0YXJ0ZWQgZGFlbW9uKT4pCiAgICAgOTIgICAgIGRlZiBydW4oc2VsZik6CiAgICAgOTMgICAgICAgICAnJycKICAgICA5NCAgICAgICAgIE1ldGhvZCB0byBiZSBydW4gaW4gc3ViLXByb2Nlc3M7IGNhbiBiZSBvdmVycmlkZGVuIGluIHN1Yi1jbGFzcwogICAgIDk1ICAgICAgICAgJycnCiAgICAgOTYgICAgICAgICBpZiBzZWxmLl90YXJnZXQ6Ci0tLT4gOTcgICAgICAgICAgICAgc2VsZi5fdGFyZ2V0KCpzZWxmLl9hcmdzLCAqKnNlbGYuX2t3YXJncykKICAgICAgICBzZWxmLl90YXJnZXQgPSA8ZnVuY3Rpb24gd29ya2VyIGF0IDB4MTA3YTQ3OTM4PgogICAgICAgIHNlbGYuX2FyZ3MgPSAoPGJpbGxpYXJkLnF1ZXVlcy5TaW1wbGVRdWV1ZSBvYmplY3QgYXQgMHgxMDdhNTk2OTA+LCA8YmlsbGlhcmQucXVldWVzLlNpbXBsZVF1ZXVlIG9iamVjdCBhdCAweDEwN2E1OTdkMD4sIDxmdW5jdGlvbiBwcm9jZXNzX2luaXRpYWxpemVyIGF0IDB4MTA3ZWFhMTQwPiwgKDxDZWxlcnkgZGVmYXVsdDoweDEwN2VhOTVkMD4sICdWbGFkaXNsYXZzLU1hY0Jvb2stQWlyLmxvY2FsJyksIE5vbmUsIE5vbmUpCiAgICAgICAgc2VsZi5fa3dhcmdzID0ge30KICAgICA5OCAKICAgICA5OSAgICAgZGVmIHN0YXJ0KHNlbGYpOgogICAgMTAwICAgICAgICAgJycnCiAgICAxMDEgICAgICAgICBTdGFydCBjaGlsZCBwcm9jZXNzCgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9iaWxsaWFyZC9wb29sLnB5IGluIHdvcmtlcihpbnF1ZXVlPTxiaWxsaWFyZC5xdWV1ZXMuU2ltcGxlUXVldWUgb2JqZWN0Piwgb3V0cXVldWU9PGJpbGxpYXJkLnF1ZXVlcy5TaW1wbGVRdWV1ZSBvYmplY3Q+LCBpbml0aWFsaXplcj08ZnVuY3Rpb24gcHJvY2Vzc19pbml0aWFsaXplcj4sIGluaXRhcmdzPSg8Q2VsZXJ5IGRlZmF1bHQ6MHgxMDdlYTk1ZDA+LCAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcpLCBtYXh0YXNrcz1Ob25lLCBzZW50aW5lbD1Ob25lKQogICAgMjkzICAgICAgICAgICAgIGJyZWFrCiAgICAyOTQgCiAgICAyOTUgICAgICAgICBqb2IsIGksIGZ1bmMsIGFyZ3MsIGt3ZHMgPSB0YXNrCiAgICAyOTYgICAgICAgICBwdXQoKEFDSywgKGpvYiwgaSwgdGltZS50aW1lKCksIHBpZCkpKQogICAgMjk3ICAgICAgICAgdHJ5OgotLT4gMjk4ICAgICAgICAgICAgIHJlc3VsdCA9IChUcnVlLCBmdW5jKCphcmdzLCAqKmt3ZHMpKQogICAgICAgIHJlc3VsdCA9IChUcnVlLCAwKQogICAgICAgIGZ1bmMgPSA8ZnVuY3Rpb24gX2Zhc3RfdHJhY2VfdGFzayBhdCAweDEwN2VhNmRlOD4KICAgICAgICBhcmdzID0gKCdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCAnNDYwOWM1YjAtNGZjNC00MWY0LTg2MGYtMTQwYmIyNTdmZWRkJywgKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTcuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAnMjAwJywgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAzMCBOb3YgMjAxMiAyMjowMjoyNi45ODQ3OTIgKzAwMDA+KSwpLCB7fSwgeydyZXRyaWVzJzogMCwgJ3Rhc2snOiAncXVhc3RfYXBwLnRhc2tzLnN0YXJ0X3F1YXN0JywgJ2dyb3VwJzogTm9uZSwgJ2NhbGxiYWNrcyc6IE5vbmUsICdlcnJiYWNrcyc6IE5vbmUsICdkZWxpdmVyeV9pbmZvJzogeydwcmlvcml0eSc6IDAsICdyb3V0aW5nX2tleSc6IHUnY2VsZXJ5JywgJ2V4Y2hhbmdlJzogdSdjZWxlcnknfSwgJ2FyZ3MnOiAoKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDMwIE5vdiAyMDEyIDIyOjAyOjI2Ljk4NDc5MiArMDAwMD4pLCksICdleHBpcmVzJzogTm9uZSwgJ2lkJzogJzQ2MDljNWIwLTRmYzQtNDFmNC04NjBmLTE0MGJiMjU3ZmVkZCcsICdpc19lYWdlcic6IEZhbHNlLCAnZXRhJzogTm9uZSwgJ2t3YXJncyc6IHt9LCAnaG9zdG5hbWUnOiAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcsICd1dGMnOiBUcnVlfSkKICAgICAgICBrd2RzID0ge30KICAgIDI5OSAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAzMDAgICAgICAgICAgICAgcmVzdWx0ID0gKEZhbHNlLCBFeGNlcHRpb25JbmZvKCkpCiAgICAzMDEgICAgICAgICB0cnk6CiAgICAzMDIgICAgICAgICAgICAgcHV0KChSRUFEWSwgKGpvYiwgaSwgcmVzdWx0KSkpCgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9jZWxlcnkvdGFzay90cmFjZS5weSBpbiBfZmFzdF90cmFjZV90YXNrKHRhc2s9J3F1YXN0X2FwcC50YXNrcy5zdGFydF9xdWFzdCcsIHV1aWQ9JzQ2MDljNWIwLTRmYzQtNDFmNC04NjBmLTE0MGJiMjU3ZmVkZCcsIGFyZ3M9KChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAzMCBOb3YgMjAxMiAyMjowMjoyNi45ODQ3OTIgKzAwMDA+KSwpLCBrd2FyZ3M9e30sIHJlcXVlc3Q9eydhcmdzJzogKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAzMCBOb3YgMjAxMiAyMjowMjoyNi45ODQ3OTIgKzAwMDA+KSwpLCAnY2FsbGJhY2tzJzogTm9uZSwgJ2RlbGl2ZXJ5X2luZm8nOiB7J2V4Y2hhbmdlJzogdSdjZWxlcnknLCAncHJpb3JpdHknOiAwLCAncm91dGluZ19rZXknOiB1J2NlbGVyeSd9LCAnZXJyYmFja3MnOiBOb25lLCAnZXRhJzogTm9uZSwgJ2V4cGlyZXMnOiBOb25lLCAnZ3JvdXAnOiBOb25lLCAnaG9zdG5hbWUnOiAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcsICdpZCc6ICc0NjA5YzViMC00ZmM0LTQxZjQtODYwZi0xNDBiYjI1N2ZlZGQnLCAnaXNfZWFnZXInOiBGYWxzZSwgLi4ufSkKICAgIDMwNyAKICAgIDMwOCAKICAgIDMwOSBkZWYgX2Zhc3RfdHJhY2VfdGFzayh0YXNrLCB1dWlkLCBhcmdzLCBrd2FyZ3MsIHJlcXVlc3Q9e30pOgogICAgMzEwICAgICAjIHNldHVwX3dvcmtlcl9vcHRpbWl6YXRpb25zIHdpbGwgcG9pbnQgdHJhY2VfdGFza19yZXQgdG8gaGVyZSwKICAgIDMxMSAgICAgIyBzbyB0aGlzIGlzIHRoZSBmdW5jdGlvbiB1c2VkIGluIHRoZSB3b3JrZXIuCi0tPiAzMTIgICAgIHJldHVybiBfdGFza3NbdGFza10uX190cmFjZV9fKHV1aWQsIGFyZ3MsIGt3YXJncywgcmVxdWVzdClbMF0KICAgICAgICB0YXNrLl9fdHJhY2VfXyA9IHVuZGVmaW5lZAogICAgICAgIHV1aWQgPSAnNDYwOWM1YjAtNGZjNC00MWY0LTg2MGYtMTQwYmIyNTdmZWRkJwogICAgICAgIGFyZ3MgPSAoKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDMwIE5vdiAyMDEyIDIyOjAyOjI2Ljk4NDc5MiArMDAwMD4pLCkKICAgICAgICBrd2FyZ3MgPSB7fQogICAgICAgIHJlcXVlc3QgPSB7J3JldHJpZXMnOiAwLCAndGFzayc6ICdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCAnZ3JvdXAnOiBOb25lLCAnY2FsbGJhY2tzJzogTm9uZSwgJ2VycmJhY2tzJzogTm9uZSwgJ2RlbGl2ZXJ5X2luZm8nOiB7J3ByaW9yaXR5JzogMCwgJ3JvdXRpbmdfa2V5JzogdSdjZWxlcnknLCAnZXhjaGFuZ2UnOiB1J2NlbGVyeSd9LCAnYXJncyc6ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMzAgTm92IDIwMTIgMjI6MDI6MjYuOTg0NzkyICswMDAwPiksKSwgJ2V4cGlyZXMnOiBOb25lLCAnaWQnOiAnNDYwOWM1YjAtNGZjNC00MWY0LTg2MGYtMTQwYmIyNTdmZWRkJywgJ2lzX2VhZ2VyJzogRmFsc2UsICdldGEnOiBOb25lLCAna3dhcmdzJzoge30sICdob3N0bmFtZSc6ICdWbGFkaXNsYXZzLU1hY0Jvb2stQWlyLmxvY2FsJywgJ3V0Yyc6IFRydWV9CiAgICAzMTMgCiAgICAzMTQgCiAgICAzMTUgZGVmIGVhZ2VyX3RyYWNlX3Rhc2sodGFzaywgdXVpZCwgYXJncywga3dhcmdzLCByZXF1ZXN0PU5vbmUsICoqb3B0cyk6CiAgICAzMTYgICAgIG9wdHMuc2V0ZGVmYXVsdCgnZWFnZXInLCBUcnVlKQoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvY2VsZXJ5L3Rhc2svdHJhY2UucHkgaW4gdHJhY2VfdGFzayh1dWlkPSc0NjA5YzViMC00ZmM0LTQxZjQtODYwZi0xNDBiYjI1N2ZlZGQnLCBhcmdzPSgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMzAgTm92IDIwMTIgMjI6MDI6MjYuOTg0NzkyICswMDAwPiksKSwga3dhcmdzPXt9LCByZXF1ZXN0PXsnYXJncyc6ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMzAgTm92IDIwMTIgMjI6MDI6MjYuOTg0NzkyICswMDAwPiksKSwgJ2NhbGxiYWNrcyc6IE5vbmUsICdkZWxpdmVyeV9pbmZvJzogeydleGNoYW5nZSc6IHUnY2VsZXJ5JywgJ3ByaW9yaXR5JzogMCwgJ3JvdXRpbmdfa2V5JzogdSdjZWxlcnknfSwgJ2VycmJhY2tzJzogTm9uZSwgJ2V0YSc6IE5vbmUsICdleHBpcmVzJzogTm9uZSwgJ2dyb3VwJzogTm9uZSwgJ2hvc3RuYW1lJzogJ1ZsYWRpc2xhdnMtTWFjQm9vay1BaXIubG9jYWwnLCAnaWQnOiAnNDYwOWM1YjAtNGZjNC00MWY0LTg2MGYtMTQwYmIyNTdmZWRkJywgJ2lzX2VhZ2VyJzogRmFsc2UsIC4uLn0pCiAgICAyMTkgICAgICAgICAgICAgICAgICAgICBzdG9yZV9yZXN1bHQodXVpZCwgeydwaWQnOiBwaWQsCiAgICAyMjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdob3N0bmFtZSc6IGhvc3RuYW1lfSwgU1RBUlRFRCkKICAgIDIyMSAKICAgIDIyMiAgICAgICAgICAgICAgICAgIyAtKi0gVFJBQ0UgLSotCiAgICAyMjMgICAgICAgICAgICAgICAgIHRyeToKLS0+IDIyNCAgICAgICAgICAgICAgICAgICAgIFIgPSByZXR2YWwgPSBmdW4oKmFyZ3MsICoqa3dhcmdzKQogICAgICAgIFIgPSBOb25lCiAgICAgICAgcmV0dmFsID0gdW5kZWZpbmVkCiAgICAgICAgYXJncyA9ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMzAgTm92IDIwMTIgMjI6MDI6MjYuOTg0NzkyICswMDAwPiksKQogICAgICAgIGt3YXJncyA9IHt9CiAgICAyMjUgICAgICAgICAgICAgICAgICAgICBzdGF0ZSA9IFNVQ0NFU1MKICAgIDIyNiAgICAgICAgICAgICAgICAgZXhjZXB0IElnbm9yZSwgZXhjOgogICAgMjI3ICAgICAgICAgICAgICAgICAgICAgSSwgUiA9IEluZm8oSUdOT1JFRCwgZXhjKSwgRXhjZXB0aW9uSW5mbyhpbnRlcm5hbD1UcnVlKQogICAgMjI4ICAgICAgICAgICAgICAgICBleGNlcHQgUmV0cnlUYXNrRXJyb3IsIGV4YzoKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfYXBwL3Rhc2tzLnB5IGluIHN0YXJ0X3F1YXN0KChhcmdzPVsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4wMl8yNl85ODQ3OTJfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4wMl8yNl85ODQ3OTJfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTcuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAnMjAwJywgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2Z1bGxfb3V0cHV0J10sIGNvbW1hbmQ9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2Z1bGxfb3V0cHV0JykpCiAgICAgODEgICAgIHRyeToKICAgICA4MiAgICAgICAgIGlmIG5vdCBzZXR0aW5ncy5RVUFTVF9ESVJQQVRIIGluIHN5cy5wYXRoOgogICAgIDgzICAgICAgICAgICAgIHN5cy5wYXRoLmluc2VydCgxLCBzZXR0aW5ncy5RVUFTVF9ESVJQQVRIKQogICAgIDg0ICAgICAgICAgaW1wb3J0IHF1YXN0CiAgICAgODUgCi0tLT4gODYgICAgICAgICByZXN1bHQgPSBxdWFzdC5tYWluKGFyZ3NbMTpdKQogICAgICAgIHJlc3VsdCA9IHVuZGVmaW5lZAogICAgICAgIHF1YXN0Lm1haW4gPSA8ZnVuY3Rpb24gbWFpbiBhdCAweDEwODkwMTZlMD4KICAgICAgICBhcmdzID0gWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMzBfTm92XzIwMTJfMjJfMDJfMjZfOTg0NzkyX1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk3LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvZnVsbF9vdXRwdXQnXQogICAgIDg3IAogICAgIDg4ICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgODkgICAgICAgICB0cmFjZV9iYWNrID0gdHJhY2ViYWNrLmZvcm1hdF9leGMoKQogICAgIDkwICAgICAgICAgYWRkX3RvX2VuZCA9ICdcblxuVXNlciBlbWFpbDogJyArIHN0cih1c2VyX2VtYWlsKSArIFwKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weSBpbiBtYWluKGFyZ3M9W3UnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjAyXzI2Xzk4NDc5Ml9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvZnVsbF9vdXRwdXQnXSwgbGliX2Rpcj0nL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvbGlicycpCiAgICA0NDcgICAgIGlmIHFjb25maWcucmVmZXJlbmNlOgogICAgNDQ4ICAgICAgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICA0NDkgICAgICAgICAjIyMgZm9ybWVyIFBMQU5UQUtPTFlBLCBQTEFOVEFHT1JBCiAgICA0NTAgICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgIDQ1MSAgICAgICAgIGZyb20gbGlicyBpbXBvcnQgY29udGlnc19hbmFseXplcgotLT4gNDUyICAgICAgICAgbnVjbWVyX3N0YXR1c2VzID0gY29udGlnc19hbmFseXplci5kbyhxY29uZmlnLnJlZmVyZW5jZSwgY29udGlnc19mcGF0aHMsIHFjb25maWcuY3ljbGljLCBvdXRwdXRfZGlycGF0aCArICcvY29udGlnc19yZXBvcnRzJywgbGliX2RpciwgcWNvbmZpZy5kcmF3X3Bsb3RzKQogICAgICAgIG51Y21lcl9zdGF0dXNlcyA9IHVuZGVmaW5lZAogICAgICAgIGNvbnRpZ3NfYW5hbHl6ZXIuZG8gPSA8ZnVuY3Rpb24gZG8gYXQgMHgxMGEyYzI5Mzg+CiAgICAgICAgb3V0cHV0X2RpcnBhdGggPSB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvZnVsbF9vdXRwdXQnCiAgICAgICAgbGliX2RpciA9ICcvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzJwogICAgNDUzICAgICAgICAgZm9yIGNvbnRpZ3NfZnBhdGggaW4gY29udGlnc19mcGF0aHM6CiAgICA0NTQgICAgICAgICAgICAgaWYgbnVjbWVyX3N0YXR1c2VzW2NvbnRpZ3NfZnBhdGhdID09IGNvbnRpZ3NfYW5hbHl6ZXIuTnVjbWVyU3RhdHVzLk9LOgogICAgNDU1ICAgICAgICAgICAgICAgICBhbGlnbmVkX2ZwYXRocy5hcHBlbmQoY29udGlnc19mcGF0aCkKICAgIDQ1NiAKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzL2NvbnRpZ3NfYW5hbHl6ZXIucHkgaW4gZG8ocmVmZXJlbmNlPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLi9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvcmVmZXJlbmNlXzEwSy5mYXN0YScsIGZpbGVuYW1lcz1bdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uMjZfOTg0NzkyX1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEk2JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uMjZfOTg0NzkyX1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEk3J10sIGN5Y2xpYz1UcnVlLCBvdXRwdXRfZGlyPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLl8yMl8wMl8yNl85ODQ3OTJfVVRDL2Z1bGxfb3V0cHV0L2NvbnRpZ3NfcmVwb3J0cycsIGxpYl9kaXI9Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMnLCBkcmF3X3Bsb3RzPVRydWUpCiAgIDExOTkgICAgICAgICBvcy5ta2RpcihudWNtZXJfb3V0cHV0X2RpcikKICAgMTIwMCAKICAgMTIwMSAgICAgZnJvbSBqb2JsaWIgaW1wb3J0IFBhcmFsbGVsLCBkZWxheWVkCiAgIDEyMDIgICAgIHN0YXR1c2VzX3Jlc3VsdHNfcGFpcnMgPSBQYXJhbGxlbChuX2pvYnM9bGVuKGZpbGVuYW1lcykpKGRlbGF5ZWQocGxhbnRha29seWFfcHJvY2VzcykoCiAgIDEyMDMgICAgICAgICBjeWNsaWMsIGRyYXdfcGxvdHMsIG51Y21lcl9vdXRwdXRfZGlyLCBmbmFtZSwgaWQsIG15ZW52LCBvdXRwdXRfZGlyLCByZWZlcmVuY2UpCi0+IDEyMDQgICAgICAgICAgIGZvciBpZCwgZm5hbWUgaW4gZW51bWVyYXRlKGZpbGVuYW1lcykpCiAgICAgICAgaWQgPSB1bmRlZmluZWQKICAgICAgICBmaWxlbmFtZXMgPSBbdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8zMF9Ob3ZfMjAxMl8yMl8wMl8yNl85ODQ3OTJfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTYnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzMwX05vdl8yMDEyXzIyXzAyXzI2Xzk4NDc5Ml9VVEMvZnVsbF9vdXRwdXQvY29ycmVjdGVkX2lucHV0L0VDT0xJNyddCiAgIDEyMDUgICAgICMgdW56aXBwaW5nCiAgIDEyMDYgICAgIHN0YXR1c2VzLCByZXN1bHRzID0gW3hbMF0gZm9yIHggaW4gc3RhdHVzZXNfcmVzdWx0c19wYWlyc10sIFt4WzFdIGZvciB4IGluIHN0YXR1c2VzX3Jlc3VsdHNfcGFpcnNdCiAgIDEyMDcgCiAgIDEyMDggICAgIGRlZiBzYXZlX3Jlc3VsdChyZXN1bHQpOgoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvam9ibGliL3BhcmFsbGVsLnB5IGluIF9fY2FsbF9fKHNlbGY9UGFyYWxsZWwobl9qb2JzPTIpLCBpdGVyYWJsZT08Z2VuZXJhdG9yIG9iamVjdCA8Z2VuZXhwcj4+KQogICAgNTExICAgICAgICAgc2VsZi5uX2Rpc3BhdGNoZWQgPSAwCiAgICA1MTIgICAgICAgICB0cnk6CiAgICA1MTMgICAgICAgICAgICAgZm9yIGZ1bmN0aW9uLCBhcmdzLCBrd2FyZ3MgaW4gaXRlcmFibGU6CiAgICA1MTQgICAgICAgICAgICAgICAgIHNlbGYuZGlzcGF0Y2goZnVuY3Rpb24sIGFyZ3MsIGt3YXJncykKICAgIDUxNSAKLS0+IDUxNiAgICAgICAgICAgICBzZWxmLnJldHJpZXZlKCkKICAgICAgICBzZWxmLnJldHJpZXZlID0gPGJvdW5kIG1ldGhvZCBQYXJhbGxlbC5yZXRyaWV2ZSBvZiBQYXJhbGxlbChuX2pvYnM9Mik+CiAgICA1MTcgICAgICAgICAgICAgIyBNYWtlIHN1cmUgdGhhdCB3ZSBnZXQgYSBsYXN0IG1lc3NhZ2UgdGVsbGluZyB1cyB3ZSBhcmUgZG9uZQogICAgNTE4ICAgICAgICAgICAgIGVsYXBzZWRfdGltZSA9IHRpbWUudGltZSgpIC0gc2VsZi5fc3RhcnRfdGltZQogICAgNTE5ICAgICAgICAgICAgIHNlbGYuX3ByaW50KCdEb25lICUzaSBvdXQgb2YgJTNpIHwgZWxhcHNlZDogJXMgZmluaXNoZWQnLAogICAgNTIwICAgICAgICAgICAgICAgICAgICAgICAgIChsZW4oc2VsZi5fb3V0cHV0KSwKCiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIFN1Yi1wcm9jZXNzIHRyYWNlYmFjazoKICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgSW5kZXhFcnJvciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2F0IERlYyAgMSAxODoxNjoxNyAyMDEyClBJRDogMjM3NzdQeXRob24gMi43LjE6IC9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi92aXJ0dWFsZW52L2Jpbi9weXRob24KLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMvY29udGlnc19hbmFseXplci5weWMgaW4gcGxhbnRha29seWFfcHJvY2VzcyhjeWNsaWM9VHJ1ZSwgZHJhd19wbG90cz1UcnVlLCBudWNtZXJfb3V0cHV0X2Rpcj11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi45Ml9VVEMvZnVsbF9vdXRwdXQvY29udGlnc19yZXBvcnRzL251Y21lcl9vdXRwdXQnLCBmaWxlbmFtZT11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi4yNl85ODQ3OTJfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTYnLCBpZD0wLCBteWVudj17J0FwcGxlX1B1YlN1Yl9Tb2NrZXRfUmVuZGVyJzogJy90bXAvbGF1bmNoLTg2a2dQMy9SZW5kZXInLCAnQXBwbGVfVWJpcXVpdHlfTWVzc2FnZSc6ICcvdG1wL2xhdW5jaC1Md2RNNUEvQXBwbGVfVWJpcXVpdHlfTWVzc2FnZScsICdDRUxFUllfTE9BREVSJzogJ2RqY2VsZXJ5LmxvYWRlcnMuRGphbmdvTG9hZGVyJywgJ0NFTEVSWV9MT0dfRklMRSc6ICcnLCAnQ0VMRVJZX0xPR19MRVZFTCc6ICczMCcsICdDRUxFUllfTE9HX1JFRElSRUNUJzogJzEnLCAnQ0VMRVJZX0xPR19SRURJUkVDVF9MRVZFTCc6ICdXQVJOSU5HJywgJ0NMSUNPTE9SJzogJzEnLCAnQ09NTUFORF9NT0RFJzogJ3VuaXgyMDAzJywgJ0RFVkVMT1BNRU5UJzogJzEnLCAuLi59LCBvdXRwdXRfZGlyPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLl8yMl8wMl8yNl85ODQ3OTJfVVRDL2Z1bGxfb3V0cHV0L2NvbnRpZ3NfcmVwb3J0cycsIHJlZmVyZW5jZT11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi4vZnVsbF9vdXRwdXQvY29ycmVjdGVkX2lucHV0L3JlZmVyZW5jZV8xMEsuZmFzdGEnKQogICAxMTQ4IAogICAxMTQ5IAogICAxMTUwIGRlZiBwbGFudGFrb2x5YV9wcm9jZXNzKGN5Y2xpYywgZHJhd19wbG90cywgbnVjbWVyX291dHB1dF9kaXIsIGZpbGVuYW1lLCBpZCwgbXllbnYsIG91dHB1dF9kaXIsIHJlZmVyZW5jZSk6CiAgIDExNTEgICAgIHByaW50ICcgICcgKyBpZF90b19zdHIoaWQpICsgb3MucGF0aC5iYXNlbmFtZShmaWxlbmFtZSkgKyAnLi4uJwogICAxMTUyICAgICBudWNtZXJfZm5hbWUgPSBvcy5wYXRoLmpvaW4obnVjbWVyX291dHB1dF9kaXIsIG9zLnBhdGguYmFzZW5hbWUoZmlsZW5hbWUpKQotPiAxMTUzICAgICBudWNtZXJfaXNfb2ssIHJlc3VsdCA9IHBsYW50YWtvbHlhKGN5Y2xpYywgZHJhd19wbG90cywgaWQsIGZpbGVuYW1lLCBudWNtZXJfZm5hbWUsIG15ZW52LCBvdXRwdXRfZGlyLCByZWZlcmVuY2UpCiAgIDExNTQgICAgIGNsZWFyX2ZpbGVzKGZpbGVuYW1lLCBudWNtZXJfZm5hbWUpCiAgIDExNTUgCiAgIDExNTYgICAgIHJldHVybiBudWNtZXJfaXNfb2ssIHJlc3VsdAogICAxMTU3IAoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMvY29udGlnc19hbmFseXplci5weWMgaW4gcGxhbnRha29seWEoY3ljbGljPVRydWUsIGRyYXdfcGxvdHM9VHJ1ZSwgaWQ9MCwgZmlsZW5hbWU9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uMjZfOTg0NzkyX1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEk2JywgbnVjbWVyZmlsZW5hbWU9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uZnVsbF9vdXRwdXQvY29udGlnc19yZXBvcnRzL251Y21lcl9vdXRwdXQvRUNPTEk2JywgbXllbnY9eydBcHBsZV9QdWJTdWJfU29ja2V0X1JlbmRlcic6ICcvdG1wL2xhdW5jaC04NmtnUDMvUmVuZGVyJywgJ0FwcGxlX1ViaXF1aXR5X01lc3NhZ2UnOiAnL3RtcC9sYXVuY2gtTHdkTTVBL0FwcGxlX1ViaXF1aXR5X01lc3NhZ2UnLCAnQ0VMRVJZX0xPQURFUic6ICdkamNlbGVyeS5sb2FkZXJzLkRqYW5nb0xvYWRlcicsICdDRUxFUllfTE9HX0ZJTEUnOiAnJywgJ0NFTEVSWV9MT0dfTEVWRUwnOiAnMzAnLCAnQ0VMRVJZX0xPR19SRURJUkVDVCc6ICcxJywgJ0NFTEVSWV9MT0dfUkVESVJFQ1RfTEVWRUwnOiAnV0FSTklORycsICdDTElDT0xPUic6ICcxJywgJ0NPTU1BTkRfTU9ERSc6ICd1bml4MjAwMycsICdERVZFTE9QTUVOVCc6ICcxJywgLi4ufSwgb3V0cHV0X2Rpcj11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi5fMjJfMDJfMjZfOTg0NzkyX1VUQy9mdWxsX291dHB1dC9jb250aWdzX3JlcG9ydHMnLCByZWZlcmVuY2U9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9yZWZlcmVuY2VfMTBLLmZhc3RhJykKICAgIDM3OSAgICAgICAgIHRtcF9jb29yZHNfZmlsZSA9IG9wZW4odG1wX2Nvb3Jkc19maWxlbmFtZSkKICAgIDM4MCAgICAgICAgIGZvciBsaW5lIGluIHRtcF9jb29yZHNfZmlsZToKICAgIDM4MSAgICAgICAgICAgICBoZWFkZXIuYXBwZW5kKGxpbmUpCiAgICAzODIgICAgICAgICAgICAgaWYgbGluZS5zdGFydHN3aXRoKCc9PT09PScpOgogICAgMzgzICAgICAgICAgICAgICAgICBicmVhawotLT4gMzg0ICAgICAgICAgY29vcmRzX2ZpbGUud3JpdGUoaGVhZGVyWy0yXSkKICAgIDM4NSAgICAgICAgIGNvb3Jkc19maWxlLndyaXRlKGhlYWRlclstMV0pCiAgICAzODYgICAgICAgICBmb3IgbGluZSBpbiB0bXBfY29vcmRzX2ZpbGU6CiAgICAzODcgICAgICAgICAgICAgY29vcmRzX2ZpbGUud3JpdGUobGluZSkKICAgIDM4OCAgICAgICAgIGNvb3Jkc19maWxlLmNsb3NlKCkKCkluZGV4RXJyb3I6IGxpc3QgaW5kZXggb3V0IG9mIHJhbmdlcQKFUnEDfWIu", "hidden": false}}, {"pk": 369, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "052fbfe2-3b6f-4975-adf6-a5e1eaba32ff", "date_done": "2012-12-01T14:16:26.779Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-3, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-3, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-3, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-3, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10c614938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10c626690>, <billiard.queues.SimpleQueue object at 0x10c6267d0>, <function process_initializer at 0x10ca77140>, (<Celery default:0x10ca765d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10ca765d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x10ca73de8>\n        args = ('quast_app.tasks.start_quast', '052fbfe2-3b6f-4975-adf6-a5e1eaba32ff', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),), 'expires': None, 'id': '052fbfe2-3b6f-4975-adf6-a5e1eaba32ff', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='052fbfe2-3b6f-4975-adf6-a5e1eaba32ff', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '052fbfe2-3b6f-4975-adf6-a5e1eaba32ff', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '052fbfe2-3b6f-4975-adf6-a5e1eaba32ff'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),), 'expires': None, 'id': '052fbfe2-3b6f-4975-adf6-a5e1eaba32ff', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='052fbfe2-3b6f-4975-adf6-a5e1eaba32ff', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '052fbfe2-3b6f-4975-adf6-a5e1eaba32ff', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:06.991351 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x10d4ce6e0>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI6.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_06_991351_UTC/contigs_evaluation/ECOLI7.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x10eae0c80>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...06_991351_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...06_991351_UTC/full_output/corrected_input/ECOLI7'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_16_06_991351_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output/corrected_input/ECOLI6', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_06_991351_UTC/full_output/corrected_input/ECOLI7']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 18:16:26 2012\nPID: 23798Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...51_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...06_991351_UTC/full_output/corrected_input/ECOLI6', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_16_06_991351_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...06_991351_UTC/full_output/corrected_input/ECOLI6', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI6', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_16_06_991351_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 370, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "50221f4a-8db6-4b09-bcde-0f5afbb4517b", "date_done": "2012-12-01T14:18:12.326Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10de3e938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10de50690>, <billiard.queues.SimpleQueue object at 0x10de507d0>, <function process_initializer at 0x10e2a1140>, (<Celery default:0x10e2a05d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10e2a05d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x10e29dde8>\n        args = ('quast_app.tasks.start_quast', '50221f4a-8db6-4b09-bcde-0f5afbb4517b', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),), 'expires': None, 'id': '50221f4a-8db6-4b09-bcde-0f5afbb4517b', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='50221f4a-8db6-4b09-bcde-0f5afbb4517b', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '50221f4a-8db6-4b09-bcde-0f5afbb4517b', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '50221f4a-8db6-4b09-bcde-0f5afbb4517b'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),), 'expires': None, 'id': '50221f4a-8db6-4b09-bcde-0f5afbb4517b', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='50221f4a-8db6-4b09-bcde-0f5afbb4517b', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '50221f4a-8db6-4b09-bcde-0f5afbb4517b', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], <QuastSession: 01 Dec 2012 14:16:40.671288 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x10ecf86e0>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...16_40_671288_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x1102255f0>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...40_671288_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...40_671288_UTC/full_output/corrected_input/ECOLI6'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_16_40_671288_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_16_40_671288_UTC/full_output/corrected_input/ECOLI6']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 18:18:11 2012\nPID: 23886Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...88_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...40_671288_UTC/full_output/corrected_input/ECOLI3', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_16_40_671288_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...40_671288_UTC/full_output/corrected_input/ECOLI3', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI3', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_16_40_671288_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjam9ibGliLm15X2V4Y2VwdGlvbnMKSm9ibGliSW5kZXhFcnJvcgpxAVTnZgAATXVsdGlwcm9jZXNzaW5nIGV4Y2VwdGlvbjoKICAgIC4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvPHN0cmluZz4gaW4gPG1vZHVsZT4oKQotLS0tPiAxIAogICAgICAyIAogICAgICAzIAogICAgICA0IAogICAgICA1IAogICAgICA2IAogICAgICA3IAogICAgICA4IAogICAgICA5IAogICAgIDEwIAoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvYmlsbGlhcmQvZm9ya2luZy5weSBpbiBtYWluKCkKICAgIDUyOCAgICAgc2VsZiA9IGxvYWQoZnJvbV9wYXJlbnQpCiAgICA1MjkgICAgIHByb2Nlc3MuY3VycmVudF9wcm9jZXNzKCkuX2luaGVyaXRpbmcgPSBGYWxzZQogICAgNTMwIAogICAgNTMxICAgICBmcm9tX3BhcmVudC5jbG9zZSgpCiAgICA1MzIgCi0tPiA1MzMgICAgIGV4aXRjb2RlID0gc2VsZi5fYm9vdHN0cmFwKCkKICAgICAgICBleGl0Y29kZSA9IHVuZGVmaW5lZAogICAgICAgIHNlbGYuX2Jvb3RzdHJhcCA9IDxib3VuZCBtZXRob2QgUHJvY2Vzcy5fYm9vdHN0cmFwIG9mIDxQcm9jZXNzKFBvb2xXb3JrZXItNCwgc3RhcnRlZCBkYWVtb24pPj4KICAgIDUzNCAgICAgZXhpdChleGl0Y29kZSkKICAgIDUzNSAKICAgIDUzNiAKICAgIDUzNyBkZWYgZ2V0X3ByZXBhcmF0aW9uX2RhdGEobmFtZSk6CgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9iaWxsaWFyZC9wcm9jZXNzLnB5IGluIF9ib290c3RyYXAoc2VsZj08UHJvY2VzcyhQb29sV29ya2VyLTQsIHN0YXJ0ZWQgZGFlbW9uKT4pCiAgICAyNDMgICAgICAgICAgICAgICAgICMgZGVsYXkgZmluYWxpemF0aW9uIG9mIHRoZSBvbGQgcHJvY2VzcyBvYmplY3QgdW50aWwgYWZ0ZXIKICAgIDI0NCAgICAgICAgICAgICAgICAgIyBfcnVuX2FmdGVyX2ZvcmtlcnMoKSBpcyBleGVjdXRlZAogICAgMjQ1ICAgICAgICAgICAgICAgICBkZWwgb2xkX3Byb2Nlc3MKICAgIDI0NiAgICAgICAgICAgICB1dGlsLmluZm8oJ2NoaWxkIHByb2Nlc3MgY2FsbGluZyBzZWxmLnJ1bigpJykKICAgIDI0NyAgICAgICAgICAgICB0cnk6Ci0tPiAyNDggICAgICAgICAgICAgICAgIHNlbGYucnVuKCkKICAgICAgICBzZWxmLnJ1biA9IDxib3VuZCBtZXRob2QgUHJvY2Vzcy5ydW4gb2YgPFByb2Nlc3MoUG9vbFdvcmtlci00LCBzdGFydGVkIGRhZW1vbik+PgogICAgMjQ5ICAgICAgICAgICAgICAgICBleGl0Y29kZSA9IDAKICAgIDI1MCAgICAgICAgICAgICBmaW5hbGx5OgogICAgMjUxICAgICAgICAgICAgICAgICB1dGlsLl9leGl0X2Z1bmN0aW9uKCkKICAgIDI1MiAgICAgICAgIGV4Y2VwdCBTeXN0ZW1FeGl0LCBlOgoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvYmlsbGlhcmQvcHJvY2Vzcy5weSBpbiBydW4oc2VsZj08UHJvY2VzcyhQb29sV29ya2VyLTQsIHN0YXJ0ZWQgZGFlbW9uKT4pCiAgICAgOTIgICAgIGRlZiBydW4oc2VsZik6CiAgICAgOTMgICAgICAgICAnJycKICAgICA5NCAgICAgICAgIE1ldGhvZCB0byBiZSBydW4gaW4gc3ViLXByb2Nlc3M7IGNhbiBiZSBvdmVycmlkZGVuIGluIHN1Yi1jbGFzcwogICAgIDk1ICAgICAgICAgJycnCiAgICAgOTYgICAgICAgICBpZiBzZWxmLl90YXJnZXQ6Ci0tLT4gOTcgICAgICAgICAgICAgc2VsZi5fdGFyZ2V0KCpzZWxmLl9hcmdzLCAqKnNlbGYuX2t3YXJncykKICAgICAgICBzZWxmLl90YXJnZXQgPSA8ZnVuY3Rpb24gd29ya2VyIGF0IDB4MTBkZTNlOTM4PgogICAgICAgIHNlbGYuX2FyZ3MgPSAoPGJpbGxpYXJkLnF1ZXVlcy5TaW1wbGVRdWV1ZSBvYmplY3QgYXQgMHgxMGRlNTA2OTA+LCA8YmlsbGlhcmQucXVldWVzLlNpbXBsZVF1ZXVlIG9iamVjdCBhdCAweDEwZGU1MDdkMD4sIDxmdW5jdGlvbiBwcm9jZXNzX2luaXRpYWxpemVyIGF0IDB4MTBlMmExMTQwPiwgKDxDZWxlcnkgZGVmYXVsdDoweDEwZTJhMDVkMD4sICdWbGFkaXNsYXZzLU1hY0Jvb2stQWlyLmxvY2FsJyksIE5vbmUsIE5vbmUpCiAgICAgICAgc2VsZi5fa3dhcmdzID0ge30KICAgICA5OCAKICAgICA5OSAgICAgZGVmIHN0YXJ0KHNlbGYpOgogICAgMTAwICAgICAgICAgJycnCiAgICAxMDEgICAgICAgICBTdGFydCBjaGlsZCBwcm9jZXNzCgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9iaWxsaWFyZC9wb29sLnB5IGluIHdvcmtlcihpbnF1ZXVlPTxiaWxsaWFyZC5xdWV1ZXMuU2ltcGxlUXVldWUgb2JqZWN0Piwgb3V0cXVldWU9PGJpbGxpYXJkLnF1ZXVlcy5TaW1wbGVRdWV1ZSBvYmplY3Q+LCBpbml0aWFsaXplcj08ZnVuY3Rpb24gcHJvY2Vzc19pbml0aWFsaXplcj4sIGluaXRhcmdzPSg8Q2VsZXJ5IGRlZmF1bHQ6MHgxMGUyYTA1ZDA+LCAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcpLCBtYXh0YXNrcz1Ob25lLCBzZW50aW5lbD1Ob25lKQogICAgMjkzICAgICAgICAgICAgIGJyZWFrCiAgICAyOTQgCiAgICAyOTUgICAgICAgICBqb2IsIGksIGZ1bmMsIGFyZ3MsIGt3ZHMgPSB0YXNrCiAgICAyOTYgICAgICAgICBwdXQoKEFDSywgKGpvYiwgaSwgdGltZS50aW1lKCksIHBpZCkpKQogICAgMjk3ICAgICAgICAgdHJ5OgotLT4gMjk4ICAgICAgICAgICAgIHJlc3VsdCA9IChUcnVlLCBmdW5jKCphcmdzLCAqKmt3ZHMpKQogICAgICAgIHJlc3VsdCA9IChUcnVlLCAwKQogICAgICAgIGZ1bmMgPSA8ZnVuY3Rpb24gX2Zhc3RfdHJhY2VfdGFzayBhdCAweDEwZTI5ZGRlOD4KICAgICAgICBhcmdzID0gKCdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCAnNTAyMjFmNGEtOGRiNi00YjA5LWJjZGUtMGY1YWZiYjQ1MTdiJywgKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAnMjAwJywgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAwMSBEZWMgMjAxMiAxNDoxNjo0MC42NzEyODggKzAwMDA+KSwpLCB7fSwgeydyZXRyaWVzJzogMCwgJ3Rhc2snOiAncXVhc3RfYXBwLnRhc2tzLnN0YXJ0X3F1YXN0JywgJ2dyb3VwJzogTm9uZSwgJ2NhbGxiYWNrcyc6IE5vbmUsICdlcnJiYWNrcyc6IE5vbmUsICdkZWxpdmVyeV9pbmZvJzogeydwcmlvcml0eSc6IDAsICdyb3V0aW5nX2tleSc6IHUnY2VsZXJ5JywgJ2V4Y2hhbmdlJzogdSdjZWxlcnknfSwgJ2FyZ3MnOiAoKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDAxIERlYyAyMDEyIDE0OjE2OjQwLjY3MTI4OCArMDAwMD4pLCksICdleHBpcmVzJzogTm9uZSwgJ2lkJzogJzUwMjIxZjRhLThkYjYtNGIwOS1iY2RlLTBmNWFmYmI0NTE3YicsICdpc19lYWdlcic6IEZhbHNlLCAnZXRhJzogTm9uZSwgJ2t3YXJncyc6IHt9LCAnaG9zdG5hbWUnOiAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcsICd1dGMnOiBUcnVlfSkKICAgICAgICBrd2RzID0ge30KICAgIDI5OSAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAzMDAgICAgICAgICAgICAgcmVzdWx0ID0gKEZhbHNlLCBFeGNlcHRpb25JbmZvKCkpCiAgICAzMDEgICAgICAgICB0cnk6CiAgICAzMDIgICAgICAgICAgICAgcHV0KChSRUFEWSwgKGpvYiwgaSwgcmVzdWx0KSkpCgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9jZWxlcnkvdGFzay90cmFjZS5weSBpbiBfZmFzdF90cmFjZV90YXNrKHRhc2s9J3F1YXN0X2FwcC50YXNrcy5zdGFydF9xdWFzdCcsIHV1aWQ9JzUwMjIxZjRhLThkYjYtNGIwOS1iY2RlLTBmNWFmYmI0NTE3YicsIGFyZ3M9KChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAwMSBEZWMgMjAxMiAxNDoxNjo0MC42NzEyODggKzAwMDA+KSwpLCBrd2FyZ3M9e30sIHJlcXVlc3Q9eydhcmdzJzogKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAwMSBEZWMgMjAxMiAxNDoxNjo0MC42NzEyODggKzAwMDA+KSwpLCAnY2FsbGJhY2tzJzogTm9uZSwgJ2RlbGl2ZXJ5X2luZm8nOiB7J2V4Y2hhbmdlJzogdSdjZWxlcnknLCAncHJpb3JpdHknOiAwLCAncm91dGluZ19rZXknOiB1J2NlbGVyeSd9LCAnZXJyYmFja3MnOiBOb25lLCAnZXRhJzogTm9uZSwgJ2V4cGlyZXMnOiBOb25lLCAnZ3JvdXAnOiBOb25lLCAnaG9zdG5hbWUnOiAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcsICdpZCc6ICc1MDIyMWY0YS04ZGI2LTRiMDktYmNkZS0wZjVhZmJiNDUxN2InLCAnaXNfZWFnZXInOiBGYWxzZSwgLi4ufSkKICAgIDMwNyAKICAgIDMwOCAKICAgIDMwOSBkZWYgX2Zhc3RfdHJhY2VfdGFzayh0YXNrLCB1dWlkLCBhcmdzLCBrd2FyZ3MsIHJlcXVlc3Q9e30pOgogICAgMzEwICAgICAjIHNldHVwX3dvcmtlcl9vcHRpbWl6YXRpb25zIHdpbGwgcG9pbnQgdHJhY2VfdGFza19yZXQgdG8gaGVyZSwKICAgIDMxMSAgICAgIyBzbyB0aGlzIGlzIHRoZSBmdW5jdGlvbiB1c2VkIGluIHRoZSB3b3JrZXIuCi0tPiAzMTIgICAgIHJldHVybiBfdGFza3NbdGFza10uX190cmFjZV9fKHV1aWQsIGFyZ3MsIGt3YXJncywgcmVxdWVzdClbMF0KICAgICAgICB0YXNrLl9fdHJhY2VfXyA9IHVuZGVmaW5lZAogICAgICAgIHV1aWQgPSAnNTAyMjFmNGEtOGRiNi00YjA5LWJjZGUtMGY1YWZiYjQ1MTdiJwogICAgICAgIGFyZ3MgPSAoKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDAxIERlYyAyMDEyIDE0OjE2OjQwLjY3MTI4OCArMDAwMD4pLCkKICAgICAgICBrd2FyZ3MgPSB7fQogICAgICAgIHJlcXVlc3QgPSB7J3JldHJpZXMnOiAwLCAndGFzayc6ICdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCAnZ3JvdXAnOiBOb25lLCAnY2FsbGJhY2tzJzogTm9uZSwgJ2VycmJhY2tzJzogTm9uZSwgJ2RlbGl2ZXJ5X2luZm8nOiB7J3ByaW9yaXR5JzogMCwgJ3JvdXRpbmdfa2V5JzogdSdjZWxlcnknLCAnZXhjaGFuZ2UnOiB1J2NlbGVyeSd9LCAnYXJncyc6ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMDEgRGVjIDIwMTIgMTQ6MTY6NDAuNjcxMjg4ICswMDAwPiksKSwgJ2V4cGlyZXMnOiBOb25lLCAnaWQnOiAnNTAyMjFmNGEtOGRiNi00YjA5LWJjZGUtMGY1YWZiYjQ1MTdiJywgJ2lzX2VhZ2VyJzogRmFsc2UsICdldGEnOiBOb25lLCAna3dhcmdzJzoge30sICdob3N0bmFtZSc6ICdWbGFkaXNsYXZzLU1hY0Jvb2stQWlyLmxvY2FsJywgJ3V0Yyc6IFRydWV9CiAgICAzMTMgCiAgICAzMTQgCiAgICAzMTUgZGVmIGVhZ2VyX3RyYWNlX3Rhc2sodGFzaywgdXVpZCwgYXJncywga3dhcmdzLCByZXF1ZXN0PU5vbmUsICoqb3B0cyk6CiAgICAzMTYgICAgIG9wdHMuc2V0ZGVmYXVsdCgnZWFnZXInLCBUcnVlKQoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvY2VsZXJ5L3Rhc2svdHJhY2UucHkgaW4gdHJhY2VfdGFzayh1dWlkPSc1MDIyMWY0YS04ZGI2LTRiMDktYmNkZS0wZjVhZmJiNDUxN2InLCBhcmdzPSgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMDEgRGVjIDIwMTIgMTQ6MTY6NDAuNjcxMjg4ICswMDAwPiksKSwga3dhcmdzPXt9LCByZXF1ZXN0PXsnYXJncyc6ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMDEgRGVjIDIwMTIgMTQ6MTY6NDAuNjcxMjg4ICswMDAwPiksKSwgJ2NhbGxiYWNrcyc6IE5vbmUsICdkZWxpdmVyeV9pbmZvJzogeydleGNoYW5nZSc6IHUnY2VsZXJ5JywgJ3ByaW9yaXR5JzogMCwgJ3JvdXRpbmdfa2V5JzogdSdjZWxlcnknfSwgJ2VycmJhY2tzJzogTm9uZSwgJ2V0YSc6IE5vbmUsICdleHBpcmVzJzogTm9uZSwgJ2dyb3VwJzogTm9uZSwgJ2hvc3RuYW1lJzogJ1ZsYWRpc2xhdnMtTWFjQm9vay1BaXIubG9jYWwnLCAnaWQnOiAnNTAyMjFmNGEtOGRiNi00YjA5LWJjZGUtMGY1YWZiYjQ1MTdiJywgJ2lzX2VhZ2VyJzogRmFsc2UsIC4uLn0pCiAgICAyMTkgICAgICAgICAgICAgICAgICAgICBzdG9yZV9yZXN1bHQodXVpZCwgeydwaWQnOiBwaWQsCiAgICAyMjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdob3N0bmFtZSc6IGhvc3RuYW1lfSwgU1RBUlRFRCkKICAgIDIyMSAKICAgIDIyMiAgICAgICAgICAgICAgICAgIyAtKi0gVFJBQ0UgLSotCiAgICAyMjMgICAgICAgICAgICAgICAgIHRyeToKLS0+IDIyNCAgICAgICAgICAgICAgICAgICAgIFIgPSByZXR2YWwgPSBmdW4oKmFyZ3MsICoqa3dhcmdzKQogICAgICAgIFIgPSBOb25lCiAgICAgICAgcmV0dmFsID0gdW5kZWZpbmVkCiAgICAgICAgYXJncyA9ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMDEgRGVjIDIwMTIgMTQ6MTY6NDAuNjcxMjg4ICswMDAwPiksKQogICAgICAgIGt3YXJncyA9IHt9CiAgICAyMjUgICAgICAgICAgICAgICAgICAgICBzdGF0ZSA9IFNVQ0NFU1MKICAgIDIyNiAgICAgICAgICAgICAgICAgZXhjZXB0IElnbm9yZSwgZXhjOgogICAgMjI3ICAgICAgICAgICAgICAgICAgICAgSSwgUiA9IEluZm8oSUdOT1JFRCwgZXhjKSwgRXhjZXB0aW9uSW5mbyhpbnRlcm5hbD1UcnVlKQogICAgMjI4ICAgICAgICAgICAgICAgICBleGNlcHQgUmV0cnlUYXNrRXJyb3IsIGV4YzoKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfYXBwL3Rhc2tzLnB5IGluIHN0YXJ0X3F1YXN0KChhcmdzPVsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4xNl80MF82NzEyODhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4xNl80MF82NzEyODhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTYuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAnMjAwJywgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2Z1bGxfb3V0cHV0J10sIGNvbW1hbmQ9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2Z1bGxfb3V0cHV0JykpCiAgICAgODEgICAgIHRyeToKICAgICA4MiAgICAgICAgIGlmIG5vdCBzZXR0aW5ncy5RVUFTVF9ESVJQQVRIIGluIHN5cy5wYXRoOgogICAgIDgzICAgICAgICAgICAgIHN5cy5wYXRoLmluc2VydCgxLCBzZXR0aW5ncy5RVUFTVF9ESVJQQVRIKQogICAgIDg0ICAgICAgICAgaW1wb3J0IHF1YXN0CiAgICAgODUgCi0tLT4gODYgICAgICAgICByZXN1bHQgPSBxdWFzdC5tYWluKGFyZ3NbMTpdKQogICAgICAgIHJlc3VsdCA9IHVuZGVmaW5lZAogICAgICAgIHF1YXN0Lm1haW4gPSA8ZnVuY3Rpb24gbWFpbiBhdCAweDEwZWNmODZlMD4KICAgICAgICBhcmdzID0gWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMTZfNDBfNjcxMjg4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEk2LmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvZnVsbF9vdXRwdXQnXQogICAgIDg3IAogICAgIDg4ICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgODkgICAgICAgICB0cmFjZV9iYWNrID0gdHJhY2ViYWNrLmZvcm1hdF9leGMoKQogICAgIDkwICAgICAgICAgYWRkX3RvX2VuZCA9ICdcblxuVXNlciBlbWFpbDogJyArIHN0cih1c2VyX2VtYWlsKSArIFwKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weSBpbiBtYWluKGFyZ3M9W3UnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjE2XzQwXzY3MTI4OF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJNi5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvZnVsbF9vdXRwdXQnXSwgbGliX2Rpcj0nL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvbGlicycpCiAgICA0NDcgICAgIGlmIHFjb25maWcucmVmZXJlbmNlOgogICAgNDQ4ICAgICAgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICA0NDkgICAgICAgICAjIyMgZm9ybWVyIFBMQU5UQUtPTFlBLCBQTEFOVEFHT1JBCiAgICA0NTAgICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgIDQ1MSAgICAgICAgIGZyb20gbGlicyBpbXBvcnQgY29udGlnc19hbmFseXplcgotLT4gNDUyICAgICAgICAgbnVjbWVyX3N0YXR1c2VzID0gY29udGlnc19hbmFseXplci5kbyhxY29uZmlnLnJlZmVyZW5jZSwgY29udGlnc19mcGF0aHMsIHFjb25maWcuY3ljbGljLCBvdXRwdXRfZGlycGF0aCArICcvY29udGlnc19yZXBvcnRzJywgbGliX2RpciwgcWNvbmZpZy5kcmF3X3Bsb3RzKQogICAgICAgIG51Y21lcl9zdGF0dXNlcyA9IHVuZGVmaW5lZAogICAgICAgIGNvbnRpZ3NfYW5hbHl6ZXIuZG8gPSA8ZnVuY3Rpb24gZG8gYXQgMHgxMTAyMjU1ZjA+CiAgICAgICAgb3V0cHV0X2RpcnBhdGggPSB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvZnVsbF9vdXRwdXQnCiAgICAgICAgbGliX2RpciA9ICcvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzJwogICAgNDUzICAgICAgICAgZm9yIGNvbnRpZ3NfZnBhdGggaW4gY29udGlnc19mcGF0aHM6CiAgICA0NTQgICAgICAgICAgICAgaWYgbnVjbWVyX3N0YXR1c2VzW2NvbnRpZ3NfZnBhdGhdID09IGNvbnRpZ3NfYW5hbHl6ZXIuTnVjbWVyU3RhdHVzLk9LOgogICAgNDU1ICAgICAgICAgICAgICAgICBhbGlnbmVkX2ZwYXRocy5hcHBlbmQoY29udGlnc19mcGF0aCkKICAgIDQ1NiAKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzL2NvbnRpZ3NfYW5hbHl6ZXIucHkgaW4gZG8ocmVmZXJlbmNlPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLi9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvcmVmZXJlbmNlXzEwSy5mYXN0YScsIGZpbGVuYW1lcz1bdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uNDBfNjcxMjg4X1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEkzJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uNDBfNjcxMjg4X1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEk2J10sIGN5Y2xpYz1UcnVlLCBvdXRwdXRfZGlyPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLl8xNF8xNl80MF82NzEyODhfVVRDL2Z1bGxfb3V0cHV0L2NvbnRpZ3NfcmVwb3J0cycsIGxpYl9kaXI9Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMnLCBkcmF3X3Bsb3RzPVRydWUpCiAgIDExOTkgICAgICAgICBvcy5ta2RpcihudWNtZXJfb3V0cHV0X2RpcikKICAgMTIwMCAKICAgMTIwMSAgICAgZnJvbSBqb2JsaWIgaW1wb3J0IFBhcmFsbGVsLCBkZWxheWVkCiAgIDEyMDIgICAgIHN0YXR1c2VzX3Jlc3VsdHNfcGFpcnMgPSBQYXJhbGxlbChuX2pvYnM9bGVuKGZpbGVuYW1lcykpKGRlbGF5ZWQocGxhbnRha29seWFfcHJvY2VzcykoCiAgIDEyMDMgICAgICAgICBjeWNsaWMsIGRyYXdfcGxvdHMsIG51Y21lcl9vdXRwdXRfZGlyLCBmbmFtZSwgaWQsIG15ZW52LCBvdXRwdXRfZGlyLCByZWZlcmVuY2UpCi0+IDEyMDQgICAgICAgICAgIGZvciBpZCwgZm5hbWUgaW4gZW51bWVyYXRlKGZpbGVuYW1lcykpCiAgICAgICAgaWQgPSB1bmRlZmluZWQKICAgICAgICBmaWxlbmFtZXMgPSBbdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8xNl80MF82NzEyODhfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTMnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzE2XzQwXzY3MTI4OF9VVEMvZnVsbF9vdXRwdXQvY29ycmVjdGVkX2lucHV0L0VDT0xJNiddCiAgIDEyMDUgICAgICMgdW56aXBwaW5nCiAgIDEyMDYgICAgIHN0YXR1c2VzLCByZXN1bHRzID0gW3hbMF0gZm9yIHggaW4gc3RhdHVzZXNfcmVzdWx0c19wYWlyc10sIFt4WzFdIGZvciB4IGluIHN0YXR1c2VzX3Jlc3VsdHNfcGFpcnNdCiAgIDEyMDcgCiAgIDEyMDggICAgIGRlZiBzYXZlX3Jlc3VsdChyZXN1bHQpOgoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvam9ibGliL3BhcmFsbGVsLnB5IGluIF9fY2FsbF9fKHNlbGY9UGFyYWxsZWwobl9qb2JzPTIpLCBpdGVyYWJsZT08Z2VuZXJhdG9yIG9iamVjdCA8Z2VuZXhwcj4+KQogICAgNTExICAgICAgICAgc2VsZi5uX2Rpc3BhdGNoZWQgPSAwCiAgICA1MTIgICAgICAgICB0cnk6CiAgICA1MTMgICAgICAgICAgICAgZm9yIGZ1bmN0aW9uLCBhcmdzLCBrd2FyZ3MgaW4gaXRlcmFibGU6CiAgICA1MTQgICAgICAgICAgICAgICAgIHNlbGYuZGlzcGF0Y2goZnVuY3Rpb24sIGFyZ3MsIGt3YXJncykKICAgIDUxNSAKLS0+IDUxNiAgICAgICAgICAgICBzZWxmLnJldHJpZXZlKCkKICAgICAgICBzZWxmLnJldHJpZXZlID0gPGJvdW5kIG1ldGhvZCBQYXJhbGxlbC5yZXRyaWV2ZSBvZiBQYXJhbGxlbChuX2pvYnM9Mik+CiAgICA1MTcgICAgICAgICAgICAgIyBNYWtlIHN1cmUgdGhhdCB3ZSBnZXQgYSBsYXN0IG1lc3NhZ2UgdGVsbGluZyB1cyB3ZSBhcmUgZG9uZQogICAgNTE4ICAgICAgICAgICAgIGVsYXBzZWRfdGltZSA9IHRpbWUudGltZSgpIC0gc2VsZi5fc3RhcnRfdGltZQogICAgNTE5ICAgICAgICAgICAgIHNlbGYuX3ByaW50KCdEb25lICUzaSBvdXQgb2YgJTNpIHwgZWxhcHNlZDogJXMgZmluaXNoZWQnLAogICAgNTIwICAgICAgICAgICAgICAgICAgICAgICAgIChsZW4oc2VsZi5fb3V0cHV0KSwKCiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIFN1Yi1wcm9jZXNzIHRyYWNlYmFjazoKICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgSW5kZXhFcnJvciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2F0IERlYyAgMSAxODoxODoxMSAyMDEyClBJRDogMjM4ODZQeXRob24gMi43LjE6IC9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi92aXJ0dWFsZW52L2Jpbi9weXRob24KLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMvY29udGlnc19hbmFseXplci5weWMgaW4gcGxhbnRha29seWFfcHJvY2VzcyhjeWNsaWM9VHJ1ZSwgZHJhd19wbG90cz1UcnVlLCBudWNtZXJfb3V0cHV0X2Rpcj11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi44OF9VVEMvZnVsbF9vdXRwdXQvY29udGlnc19yZXBvcnRzL251Y21lcl9vdXRwdXQnLCBmaWxlbmFtZT11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi40MF82NzEyODhfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTMnLCBpZD0wLCBteWVudj17J0FwcGxlX1B1YlN1Yl9Tb2NrZXRfUmVuZGVyJzogJy90bXAvbGF1bmNoLTg2a2dQMy9SZW5kZXInLCAnQXBwbGVfVWJpcXVpdHlfTWVzc2FnZSc6ICcvdG1wL2xhdW5jaC1Md2RNNUEvQXBwbGVfVWJpcXVpdHlfTWVzc2FnZScsICdDRUxFUllfTE9BREVSJzogJ2RqY2VsZXJ5LmxvYWRlcnMuRGphbmdvTG9hZGVyJywgJ0NFTEVSWV9MT0dfRklMRSc6ICcnLCAnQ0VMRVJZX0xPR19MRVZFTCc6ICczMCcsICdDRUxFUllfTE9HX1JFRElSRUNUJzogJzEnLCAnQ0VMRVJZX0xPR19SRURJUkVDVF9MRVZFTCc6ICdXQVJOSU5HJywgJ0NMSUNPTE9SJzogJzEnLCAnQ09NTUFORF9NT0RFJzogJ3VuaXgyMDAzJywgJ0RFVkVMT1BNRU5UJzogJzEnLCAuLi59LCBvdXRwdXRfZGlyPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLl8xNF8xNl80MF82NzEyODhfVVRDL2Z1bGxfb3V0cHV0L2NvbnRpZ3NfcmVwb3J0cycsIHJlZmVyZW5jZT11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi4vZnVsbF9vdXRwdXQvY29ycmVjdGVkX2lucHV0L3JlZmVyZW5jZV8xMEsuZmFzdGEnKQogICAxMTQ4IAogICAxMTQ5IAogICAxMTUwIGRlZiBwbGFudGFrb2x5YV9wcm9jZXNzKGN5Y2xpYywgZHJhd19wbG90cywgbnVjbWVyX291dHB1dF9kaXIsIGZpbGVuYW1lLCBpZCwgbXllbnYsIG91dHB1dF9kaXIsIHJlZmVyZW5jZSk6CiAgIDExNTEgICAgIHByaW50ICcgICcgKyBpZF90b19zdHIoaWQpICsgb3MucGF0aC5iYXNlbmFtZShmaWxlbmFtZSkgKyAnLi4uJwogICAxMTUyICAgICBudWNtZXJfZm5hbWUgPSBvcy5wYXRoLmpvaW4obnVjbWVyX291dHB1dF9kaXIsIG9zLnBhdGguYmFzZW5hbWUoZmlsZW5hbWUpKQotPiAxMTUzICAgICBudWNtZXJfaXNfb2ssIHJlc3VsdCA9IHBsYW50YWtvbHlhKGN5Y2xpYywgZHJhd19wbG90cywgaWQsIGZpbGVuYW1lLCBudWNtZXJfZm5hbWUsIG15ZW52LCBvdXRwdXRfZGlyLCByZWZlcmVuY2UpCiAgIDExNTQgICAgIGNsZWFyX2ZpbGVzKGZpbGVuYW1lLCBudWNtZXJfZm5hbWUpCiAgIDExNTUgCiAgIDExNTYgICAgIHJldHVybiBudWNtZXJfaXNfb2ssIHJlc3VsdAogICAxMTU3IAoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMvY29udGlnc19hbmFseXplci5weWMgaW4gcGxhbnRha29seWEoY3ljbGljPVRydWUsIGRyYXdfcGxvdHM9VHJ1ZSwgaWQ9MCwgZmlsZW5hbWU9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uNDBfNjcxMjg4X1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEkzJywgbnVjbWVyZmlsZW5hbWU9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uZnVsbF9vdXRwdXQvY29udGlnc19yZXBvcnRzL251Y21lcl9vdXRwdXQvRUNPTEkzJywgbXllbnY9eydBcHBsZV9QdWJTdWJfU29ja2V0X1JlbmRlcic6ICcvdG1wL2xhdW5jaC04NmtnUDMvUmVuZGVyJywgJ0FwcGxlX1ViaXF1aXR5X01lc3NhZ2UnOiAnL3RtcC9sYXVuY2gtTHdkTTVBL0FwcGxlX1ViaXF1aXR5X01lc3NhZ2UnLCAnQ0VMRVJZX0xPQURFUic6ICdkamNlbGVyeS5sb2FkZXJzLkRqYW5nb0xvYWRlcicsICdDRUxFUllfTE9HX0ZJTEUnOiAnJywgJ0NFTEVSWV9MT0dfTEVWRUwnOiAnMzAnLCAnQ0VMRVJZX0xPR19SRURJUkVDVCc6ICcxJywgJ0NFTEVSWV9MT0dfUkVESVJFQ1RfTEVWRUwnOiAnV0FSTklORycsICdDTElDT0xPUic6ICcxJywgJ0NPTU1BTkRfTU9ERSc6ICd1bml4MjAwMycsICdERVZFTE9QTUVOVCc6ICcxJywgLi4ufSwgb3V0cHV0X2Rpcj11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi5fMTRfMTZfNDBfNjcxMjg4X1VUQy9mdWxsX291dHB1dC9jb250aWdzX3JlcG9ydHMnLCByZWZlcmVuY2U9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9yZWZlcmVuY2VfMTBLLmZhc3RhJykKICAgIDM3OSAgICAgICAgIHRtcF9jb29yZHNfZmlsZSA9IG9wZW4odG1wX2Nvb3Jkc19maWxlbmFtZSkKICAgIDM4MCAgICAgICAgIGZvciBsaW5lIGluIHRtcF9jb29yZHNfZmlsZToKICAgIDM4MSAgICAgICAgICAgICBoZWFkZXIuYXBwZW5kKGxpbmUpCiAgICAzODIgICAgICAgICAgICAgaWYgbGluZS5zdGFydHN3aXRoKCc9PT09PScpOgogICAgMzgzICAgICAgICAgICAgICAgICBicmVhawotLT4gMzg0ICAgICAgICAgY29vcmRzX2ZpbGUud3JpdGUoaGVhZGVyWy0yXSkKICAgIDM4NSAgICAgICAgIGNvb3Jkc19maWxlLndyaXRlKGhlYWRlclstMV0pCiAgICAzODYgICAgICAgICBmb3IgbGluZSBpbiB0bXBfY29vcmRzX2ZpbGU6CiAgICAzODcgICAgICAgICAgICAgY29vcmRzX2ZpbGUud3JpdGUobGluZSkKICAgIDM4OCAgICAgICAgIGNvb3Jkc19maWxlLmNsb3NlKCkKCkluZGV4RXJyb3I6IGxpc3QgaW5kZXggb3V0IG9mIHJhbmdlcQKFUnEDfWIu", "hidden": false}}, {"pk": 371, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "c9d304b8-db20-4ab8-9f1a-89c8bf138d78", "date_done": "2012-12-01T14:19:40.618Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-1, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-1, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-1, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-1, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x110426938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x110438690>, <billiard.queues.SimpleQueue object at 0x1104387d0>, <function process_initializer at 0x110889140>, (<Celery default:0x1108885d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1108885d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x110885de8>\n        args = ('quast_app.tasks.start_quast', 'c9d304b8-db20-4ab8-9f1a-89c8bf138d78', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),), 'expires': None, 'id': 'c9d304b8-db20-4ab8-9f1a-89c8bf138d78', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='c9d304b8-db20-4ab8-9f1a-89c8bf138d78', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'c9d304b8-db20-4ab8-9f1a-89c8bf138d78', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'c9d304b8-db20-4ab8-9f1a-89c8bf138d78'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),), 'expires': None, 'id': 'c9d304b8-db20-4ab8-9f1a-89c8bf138d78', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='c9d304b8-db20-4ab8-9f1a-89c8bf138d78', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'c9d304b8-db20-4ab8-9f1a-89c8bf138d78', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], <QuastSession: 01 Dec 2012 14:18:02.798428 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x1112e0668>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI3.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_02_798428_UTC/contigs_evaluation/ECOLI6.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x112d4bd70>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...02_798428_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...02_798428_UTC/full_output/corrected_input/ECOLI6'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_18_02_798428_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output/corrected_input/ECOLI3', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_18_02_798428_UTC/full_output/corrected_input/ECOLI6']\n   1205     # unzipping\n   1206     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1207 \n   1208     def save_result(result):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 18:19:40 2012\nPID: 23976Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...02_798428_UTC/full_output/corrected_input/ECOLI3', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_18_02_798428_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...02_798428_UTC/full_output/corrected_input/ECOLI3', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI3', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_18_02_798428_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 372, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "dd498e85-7c60-4e6a-b8bf-83ffc078fcbd", "date_done": "2012-12-01T14:26:24.057Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10b37d938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10b38f690>, <billiard.queues.SimpleQueue object at 0x10b38f7d0>, <function process_initializer at 0x10b7e0140>, (<Celery default:0x10b7df5d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10b7df5d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x10b7dcde8>\n        args = ('quast_app.tasks.start_quast', 'dd498e85-7c60-4e6a-b8bf-83ffc078fcbd', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),), 'expires': None, 'id': 'dd498e85-7c60-4e6a-b8bf-83ffc078fcbd', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='dd498e85-7c60-4e6a-b8bf-83ffc078fcbd', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'dd498e85-7c60-4e6a-b8bf-83ffc078fcbd', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'dd498e85-7c60-4e6a-b8bf-83ffc078fcbd'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),), 'expires': None, 'id': 'dd498e85-7c60-4e6a-b8bf-83ffc078fcbd', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='dd498e85-7c60-4e6a-b8bf-83ffc078fcbd', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'dd498e85-7c60-4e6a-b8bf-83ffc078fcbd', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], <QuastSession: 01 Dec 2012 14:26:02.911671 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x10c237758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...26_02_911671_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x10dc30b90>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...02_911671_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...02_911671_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_26_02_911671_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output/corrected_input/ECOLI3']\n   1205 \n   1206     reload(Parallel)\n   1207     reload(delayed)\n   1208 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 18:26:22 2012\nPID: 24118Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...71_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...02_911671_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_26_02_911671_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n        nucmer_is_ok = undefined\n        result = undefined\n        cyclic = True\n        draw_plots = True\n        id = 0\n        filename = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output/corrected_input/ECOLI2'\n        nucmer_fname = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output/contigs_reports/nucmer_output/ECOLI2'\n        myenv = {'LC_NUMERIC': 'ru_RU.UTF-8', 'MACOSX_DEPLOYMENT_TARGET': '10.8', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'LC_CTYPE': 'ru_RU.UTF-8', 'TERM_PROGRAM_VERSION': '309', '_MP_FORK_LOGFILE_': '', 'MULTIPROCESSING_FORKING_DISABLE': '1', 'CELERY_LOG_REDIRECT': '1', 'LOGNAME': 'vladsaveliev', 'USER': 'vladsaveliev', 'HOME': '/Users/vladsaveliev', 'PATH': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/MUMmer3.23-osx:/Users/vladsaveliev/Dropbox/au/scala/scala/2.9.2:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin:/usr/local/mysql/bin', 'DISPLAY': '/tmp/launch-KGjw4c/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'Apple_Terminal', 'LANG': 'ru_RU.UTF-8', 'TERM': 'xterm-256color', 'SHELL': '/bin/bash', 'TZ': 'Europe/Moscow', 'VERSIONER_PYTHON_VERSION': '2.7', 'LC_MONETARY': 'ru_RU.UTF-8', 'FORKED_BY_MULTIPROCESSING': '1', 'CELERY_LOG_FILE': '', 'TERM_SESSION_ID': 'AEF1E351-EC04-48C7-A92A-E2E7683E7627', 'SSH_AUTH_SOCK': '/tmp/launch-ZiTXcA/Listeners', 'SHLVL': '1', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'MP_MAIN_FILE': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/manage.pyc', 'LC_ALL': 'ru_RU.UTF-8', '_': '../virtualenv/bin/python', 'DEVELOPMENT': '1', 'celery_dummy_proxy': 'set_by_celeryd', 'TMPDIR': '/var/folders/wp/6kqq17055n390ym24d4k1vw80000gn/T/', 'LC_MESSAGES': 'ru_RU.UTF-8', 'LC_COLLATE': 'ru_RU.UTF-8', '_MP_FORK_LOGFORMAT_': '[%(asctime)s: %(levelname)s/%(processName)s] %(message)s', 'CLICOLOR': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'PWD': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website', '_MP_FORK_LOGLEVEL_': '30', 'DJANGO_SETTINGS_MODULE': 'settings', 'LC_TIME': 'ru_RU.UTF-8', 'CELERY_LOG_LEVEL': '30', 'COMMAND_MODE': 'unix2003'}\n        output_dir = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output/contigs_reports'\n        reference = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_26_02_911671_UTC/full_output/corrected_input/reference_10K.fasta'\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...02_911671_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_26_02_911671_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n        coords_file.write = <built-in method write of file object at 0x10d9d46f0>\n        header = []\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 373, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "5ee91590-d30c-413b-a848-07f2fe57868a", "date_done": "2012-12-01T14:26:58.118Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nTypeError: reload() argument must be module\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpUeXBlRXJyb3IKcQFVIHJlbG9hZCgpIGFyZ3VtZW50IG11c3QgYmUgbW9kdWxlcQKFcQNScQQu", "hidden": false}}, {"pk": 374, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4339914c-e2bb-47c7-98cc-579b5acc116a", "date_done": "2012-12-01T14:29:05.839Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 375, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b", "date_done": "2012-12-01T14:29:24.194Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-3, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-3, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-3, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-3, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x107c5e938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x107c70690>, <billiard.queues.SimpleQueue object at 0x107c707d0>, <function process_initializer at 0x1080c1140>, (<Celery default:0x1080c05d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1080c05d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x1080bdde8>\n        args = ('quast_app.tasks.start_quast', 'b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),), 'expires': None, 'id': 'b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),), 'expires': None, 'id': 'b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'b9cbdd3b-0c7e-4f6c-a1d3-4d169112083b', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], <QuastSession: 01 Dec 2012 14:28:51.586828 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x108b18758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...28_51_586828_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x10a4f9de8>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456         reload(contigs_analyzer)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...51_586828_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...51_586828_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_28_51_586828_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1199         os.mkdir(nucmer_output_dir)\n   1200 \n   1201     from joblib import Parallel, delayed\n   1202     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1203         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1204           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_14_28_51_586828_UTC/full_output/corrected_input/ECOLI3']\n   1205 \n   1206     # unzipping\n   1207     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1208 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 18:29:23 2012\nPID: 24322Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...28_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...51_586828_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_28_51_586828_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1148 \n   1149 \n   1150 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1151     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1152     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1153     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1154     clear_files(filename, nucmer_fname)\n   1155 \n   1156     return nucmer_is_ok, result\n   1157 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...51_586828_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._14_28_51_586828_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    379         tmp_coords_file = open(tmp_coords_filename)\n    380         for line in tmp_coords_file:\n    381             header.append(line)\n    382             if line.startswith('====='):\n    383                 break\n--> 384         coords_file.write(header[-2])\n    385         coords_file.write(header[-1])\n    386         for line in tmp_coords_file:\n    387             coords_file.write(line)\n    388         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjam9ibGliLm15X2V4Y2VwdGlvbnMKSm9ibGliSW5kZXhFcnJvcgpxAVTrZgAATXVsdGlwcm9jZXNzaW5nIGV4Y2VwdGlvbjoKICAgIC4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvPHN0cmluZz4gaW4gPG1vZHVsZT4oKQotLS0tPiAxIAogICAgICAyIAogICAgICAzIAogICAgICA0IAogICAgICA1IAogICAgICA2IAogICAgICA3IAogICAgICA4IAogICAgICA5IAogICAgIDEwIAoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvYmlsbGlhcmQvZm9ya2luZy5weSBpbiBtYWluKCkKICAgIDUyOCAgICAgc2VsZiA9IGxvYWQoZnJvbV9wYXJlbnQpCiAgICA1MjkgICAgIHByb2Nlc3MuY3VycmVudF9wcm9jZXNzKCkuX2luaGVyaXRpbmcgPSBGYWxzZQogICAgNTMwIAogICAgNTMxICAgICBmcm9tX3BhcmVudC5jbG9zZSgpCiAgICA1MzIgCi0tPiA1MzMgICAgIGV4aXRjb2RlID0gc2VsZi5fYm9vdHN0cmFwKCkKICAgICAgICBleGl0Y29kZSA9IHVuZGVmaW5lZAogICAgICAgIHNlbGYuX2Jvb3RzdHJhcCA9IDxib3VuZCBtZXRob2QgUHJvY2Vzcy5fYm9vdHN0cmFwIG9mIDxQcm9jZXNzKFBvb2xXb3JrZXItMywgc3RhcnRlZCBkYWVtb24pPj4KICAgIDUzNCAgICAgZXhpdChleGl0Y29kZSkKICAgIDUzNSAKICAgIDUzNiAKICAgIDUzNyBkZWYgZ2V0X3ByZXBhcmF0aW9uX2RhdGEobmFtZSk6CgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9iaWxsaWFyZC9wcm9jZXNzLnB5IGluIF9ib290c3RyYXAoc2VsZj08UHJvY2VzcyhQb29sV29ya2VyLTMsIHN0YXJ0ZWQgZGFlbW9uKT4pCiAgICAyNDMgICAgICAgICAgICAgICAgICMgZGVsYXkgZmluYWxpemF0aW9uIG9mIHRoZSBvbGQgcHJvY2VzcyBvYmplY3QgdW50aWwgYWZ0ZXIKICAgIDI0NCAgICAgICAgICAgICAgICAgIyBfcnVuX2FmdGVyX2ZvcmtlcnMoKSBpcyBleGVjdXRlZAogICAgMjQ1ICAgICAgICAgICAgICAgICBkZWwgb2xkX3Byb2Nlc3MKICAgIDI0NiAgICAgICAgICAgICB1dGlsLmluZm8oJ2NoaWxkIHByb2Nlc3MgY2FsbGluZyBzZWxmLnJ1bigpJykKICAgIDI0NyAgICAgICAgICAgICB0cnk6Ci0tPiAyNDggICAgICAgICAgICAgICAgIHNlbGYucnVuKCkKICAgICAgICBzZWxmLnJ1biA9IDxib3VuZCBtZXRob2QgUHJvY2Vzcy5ydW4gb2YgPFByb2Nlc3MoUG9vbFdvcmtlci0zLCBzdGFydGVkIGRhZW1vbik+PgogICAgMjQ5ICAgICAgICAgICAgICAgICBleGl0Y29kZSA9IDAKICAgIDI1MCAgICAgICAgICAgICBmaW5hbGx5OgogICAgMjUxICAgICAgICAgICAgICAgICB1dGlsLl9leGl0X2Z1bmN0aW9uKCkKICAgIDI1MiAgICAgICAgIGV4Y2VwdCBTeXN0ZW1FeGl0LCBlOgoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvYmlsbGlhcmQvcHJvY2Vzcy5weSBpbiBydW4oc2VsZj08UHJvY2VzcyhQb29sV29ya2VyLTMsIHN0YXJ0ZWQgZGFlbW9uKT4pCiAgICAgOTIgICAgIGRlZiBydW4oc2VsZik6CiAgICAgOTMgICAgICAgICAnJycKICAgICA5NCAgICAgICAgIE1ldGhvZCB0byBiZSBydW4gaW4gc3ViLXByb2Nlc3M7IGNhbiBiZSBvdmVycmlkZGVuIGluIHN1Yi1jbGFzcwogICAgIDk1ICAgICAgICAgJycnCiAgICAgOTYgICAgICAgICBpZiBzZWxmLl90YXJnZXQ6Ci0tLT4gOTcgICAgICAgICAgICAgc2VsZi5fdGFyZ2V0KCpzZWxmLl9hcmdzLCAqKnNlbGYuX2t3YXJncykKICAgICAgICBzZWxmLl90YXJnZXQgPSA8ZnVuY3Rpb24gd29ya2VyIGF0IDB4MTA3YzVlOTM4PgogICAgICAgIHNlbGYuX2FyZ3MgPSAoPGJpbGxpYXJkLnF1ZXVlcy5TaW1wbGVRdWV1ZSBvYmplY3QgYXQgMHgxMDdjNzA2OTA+LCA8YmlsbGlhcmQucXVldWVzLlNpbXBsZVF1ZXVlIG9iamVjdCBhdCAweDEwN2M3MDdkMD4sIDxmdW5jdGlvbiBwcm9jZXNzX2luaXRpYWxpemVyIGF0IDB4MTA4MGMxMTQwPiwgKDxDZWxlcnkgZGVmYXVsdDoweDEwODBjMDVkMD4sICdWbGFkaXNsYXZzLU1hY0Jvb2stQWlyLmxvY2FsJyksIE5vbmUsIE5vbmUpCiAgICAgICAgc2VsZi5fa3dhcmdzID0ge30KICAgICA5OCAKICAgICA5OSAgICAgZGVmIHN0YXJ0KHNlbGYpOgogICAgMTAwICAgICAgICAgJycnCiAgICAxMDEgICAgICAgICBTdGFydCBjaGlsZCBwcm9jZXNzCgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9iaWxsaWFyZC9wb29sLnB5IGluIHdvcmtlcihpbnF1ZXVlPTxiaWxsaWFyZC5xdWV1ZXMuU2ltcGxlUXVldWUgb2JqZWN0Piwgb3V0cXVldWU9PGJpbGxpYXJkLnF1ZXVlcy5TaW1wbGVRdWV1ZSBvYmplY3Q+LCBpbml0aWFsaXplcj08ZnVuY3Rpb24gcHJvY2Vzc19pbml0aWFsaXplcj4sIGluaXRhcmdzPSg8Q2VsZXJ5IGRlZmF1bHQ6MHgxMDgwYzA1ZDA+LCAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcpLCBtYXh0YXNrcz1Ob25lLCBzZW50aW5lbD1Ob25lKQogICAgMjkzICAgICAgICAgICAgIGJyZWFrCiAgICAyOTQgCiAgICAyOTUgICAgICAgICBqb2IsIGksIGZ1bmMsIGFyZ3MsIGt3ZHMgPSB0YXNrCiAgICAyOTYgICAgICAgICBwdXQoKEFDSywgKGpvYiwgaSwgdGltZS50aW1lKCksIHBpZCkpKQogICAgMjk3ICAgICAgICAgdHJ5OgotLT4gMjk4ICAgICAgICAgICAgIHJlc3VsdCA9IChUcnVlLCBmdW5jKCphcmdzLCAqKmt3ZHMpKQogICAgICAgIHJlc3VsdCA9IHVuZGVmaW5lZAogICAgICAgIGZ1bmMgPSA8ZnVuY3Rpb24gX2Zhc3RfdHJhY2VfdGFzayBhdCAweDEwODBiZGRlOD4KICAgICAgICBhcmdzID0gKCdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCAnYjljYmRkM2ItMGM3ZS00ZjZjLWExZDMtNGQxNjkxMTIwODNiJywgKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAnMjAwJywgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAwMSBEZWMgMjAxMiAxNDoyODo1MS41ODY4MjggKzAwMDA+KSwpLCB7fSwgeydyZXRyaWVzJzogMCwgJ3Rhc2snOiAncXVhc3RfYXBwLnRhc2tzLnN0YXJ0X3F1YXN0JywgJ2dyb3VwJzogTm9uZSwgJ2NhbGxiYWNrcyc6IE5vbmUsICdlcnJiYWNrcyc6IE5vbmUsICdkZWxpdmVyeV9pbmZvJzogeydwcmlvcml0eSc6IDAsICdyb3V0aW5nX2tleSc6IHUnY2VsZXJ5JywgJ2V4Y2hhbmdlJzogdSdjZWxlcnknfSwgJ2FyZ3MnOiAoKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkyLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDAxIERlYyAyMDEyIDE0OjI4OjUxLjU4NjgyOCArMDAwMD4pLCksICdleHBpcmVzJzogTm9uZSwgJ2lkJzogJ2I5Y2JkZDNiLTBjN2UtNGY2Yy1hMWQzLTRkMTY5MTEyMDgzYicsICdpc19lYWdlcic6IEZhbHNlLCAnZXRhJzogTm9uZSwgJ2t3YXJncyc6IHt9LCAnaG9zdG5hbWUnOiAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcsICd1dGMnOiBUcnVlfSkKICAgICAgICBrd2RzID0ge30KICAgIDI5OSAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAzMDAgICAgICAgICAgICAgcmVzdWx0ID0gKEZhbHNlLCBFeGNlcHRpb25JbmZvKCkpCiAgICAzMDEgICAgICAgICB0cnk6CiAgICAzMDIgICAgICAgICAgICAgcHV0KChSRUFEWSwgKGpvYiwgaSwgcmVzdWx0KSkpCgouLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC92aXJ0dWFsZW52L2xpYi9weXRob24yLjcvc2l0ZS1wYWNrYWdlcy9jZWxlcnkvdGFzay90cmFjZS5weSBpbiBfZmFzdF90cmFjZV90YXNrKHRhc2s9J3F1YXN0X2FwcC50YXNrcy5zdGFydF9xdWFzdCcsIHV1aWQ9J2I5Y2JkZDNiLTBjN2UtNGY2Yy1hMWQzLTRkMTY5MTEyMDgzYicsIGFyZ3M9KChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkyLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAwMSBEZWMgMjAxMiAxNDoyODo1MS41ODY4MjggKzAwMDA+KSwpLCBrd2FyZ3M9e30sIHJlcXVlc3Q9eydhcmdzJzogKChbJy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL3F1YXN0LnB5JywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkyLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmU4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9mdWxsX291dHB1dCddLCA8UXVhc3RTZXNzaW9uOiAwMSBEZWMgMjAxMiAxNDoyODo1MS41ODY4MjggKzAwMDA+KSwpLCAnY2FsbGJhY2tzJzogTm9uZSwgJ2RlbGl2ZXJ5X2luZm8nOiB7J2V4Y2hhbmdlJzogdSdjZWxlcnknLCAncHJpb3JpdHknOiAwLCAncm91dGluZ19rZXknOiB1J2NlbGVyeSd9LCAnZXJyYmFja3MnOiBOb25lLCAnZXRhJzogTm9uZSwgJ2V4cGlyZXMnOiBOb25lLCAnZ3JvdXAnOiBOb25lLCAnaG9zdG5hbWUnOiAnVmxhZGlzbGF2cy1NYWNCb29rLUFpci5sb2NhbCcsICdpZCc6ICdiOWNiZGQzYi0wYzdlLTRmNmMtYTFkMy00ZDE2OTExMjA4M2InLCAnaXNfZWFnZXInOiBGYWxzZSwgLi4ufSkKICAgIDMwNyAKICAgIDMwOCAKICAgIDMwOSBkZWYgX2Zhc3RfdHJhY2VfdGFzayh0YXNrLCB1dWlkLCBhcmdzLCBrd2FyZ3MsIHJlcXVlc3Q9e30pOgogICAgMzEwICAgICAjIHNldHVwX3dvcmtlcl9vcHRpbWl6YXRpb25zIHdpbGwgcG9pbnQgdHJhY2VfdGFza19yZXQgdG8gaGVyZSwKICAgIDMxMSAgICAgIyBzbyB0aGlzIGlzIHRoZSBmdW5jdGlvbiB1c2VkIGluIHRoZSB3b3JrZXIuCi0tPiAzMTIgICAgIHJldHVybiBfdGFza3NbdGFza10uX190cmFjZV9fKHV1aWQsIGFyZ3MsIGt3YXJncywgcmVxdWVzdClbMF0KICAgICAgICB0YXNrLl9fdHJhY2VfXyA9IHVuZGVmaW5lZAogICAgICAgIHV1aWQgPSAnYjljYmRkM2ItMGM3ZS00ZjZjLWExZDMtNGQxNjkxMTIwODNiJwogICAgICAgIGFyZ3MgPSAoKFsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkyLmZhc3RhJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQycsICctbycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDL2Z1bGxfb3V0cHV0J10sIDxRdWFzdFNlc3Npb246IDAxIERlYyAyMDEyIDE0OjI4OjUxLjU4NjgyOCArMDAwMD4pLCkKICAgICAgICBrd2FyZ3MgPSB7fQogICAgICAgIHJlcXVlc3QgPSB7J3JldHJpZXMnOiAwLCAndGFzayc6ICdxdWFzdF9hcHAudGFza3Muc3RhcnRfcXVhc3QnLCAnZ3JvdXAnOiBOb25lLCAnY2FsbGJhY2tzJzogTm9uZSwgJ2VycmJhY2tzJzogTm9uZSwgJ2RlbGl2ZXJ5X2luZm8nOiB7J3ByaW9yaXR5JzogMCwgJ3JvdXRpbmdfa2V5JzogdSdjZWxlcnknLCAnZXhjaGFuZ2UnOiB1J2NlbGVyeSd9LCAnYXJncyc6ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTIuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMDEgRGVjIDIwMTIgMTQ6Mjg6NTEuNTg2ODI4ICswMDAwPiksKSwgJ2V4cGlyZXMnOiBOb25lLCAnaWQnOiAnYjljYmRkM2ItMGM3ZS00ZjZjLWExZDMtNGQxNjkxMTIwODNiJywgJ2lzX2VhZ2VyJzogRmFsc2UsICdldGEnOiBOb25lLCAna3dhcmdzJzoge30sICdob3N0bmFtZSc6ICdWbGFkaXNsYXZzLU1hY0Jvb2stQWlyLmxvY2FsJywgJ3V0Yyc6IFRydWV9CiAgICAzMTMgCiAgICAzMTQgCiAgICAzMTUgZGVmIGVhZ2VyX3RyYWNlX3Rhc2sodGFzaywgdXVpZCwgYXJncywga3dhcmdzLCByZXF1ZXN0PU5vbmUsICoqb3B0cyk6CiAgICAzMTYgICAgIG9wdHMuc2V0ZGVmYXVsdCgnZWFnZXInLCBUcnVlKQoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvdmlydHVhbGVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvY2VsZXJ5L3Rhc2svdHJhY2UucHkgaW4gdHJhY2VfdGFzayh1dWlkPSdiOWNiZGQzYi0wYzdlLTRmNmMtYTFkMy00ZDE2OTExMjA4M2InLCBhcmdzPSgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMDEgRGVjIDIwMTIgMTQ6Mjg6NTEuNTg2ODI4ICswMDAwPiksKSwga3dhcmdzPXt9LCByZXF1ZXN0PXsnYXJncyc6ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMDEgRGVjIDIwMTIgMTQ6Mjg6NTEuNTg2ODI4ICswMDAwPiksKSwgJ2NhbGxiYWNrcyc6IE5vbmUsICdkZWxpdmVyeV9pbmZvJzogeydleGNoYW5nZSc6IHUnY2VsZXJ5JywgJ3ByaW9yaXR5JzogMCwgJ3JvdXRpbmdfa2V5JzogdSdjZWxlcnknfSwgJ2VycmJhY2tzJzogTm9uZSwgJ2V0YSc6IE5vbmUsICdleHBpcmVzJzogTm9uZSwgJ2dyb3VwJzogTm9uZSwgJ2hvc3RuYW1lJzogJ1ZsYWRpc2xhdnMtTWFjQm9vay1BaXIubG9jYWwnLCAnaWQnOiAnYjljYmRkM2ItMGM3ZS00ZjZjLWExZDMtNGQxNjkxMTIwODNiJywgJ2lzX2VhZ2VyJzogRmFsc2UsIC4uLn0pCiAgICAyMTkgICAgICAgICAgICAgICAgICAgICBzdG9yZV9yZXN1bHQodXVpZCwgeydwaWQnOiBwaWQsCiAgICAyMjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdob3N0bmFtZSc6IGhvc3RuYW1lfSwgU1RBUlRFRCkKICAgIDIyMSAKICAgIDIyMiAgICAgICAgICAgICAgICAgIyAtKi0gVFJBQ0UgLSotCiAgICAyMjMgICAgICAgICAgICAgICAgIHRyeToKLS0+IDIyNCAgICAgICAgICAgICAgICAgICAgIFIgPSByZXR2YWwgPSBmdW4oKmFyZ3MsICoqa3dhcmdzKQogICAgICAgIFIgPSBOb25lCiAgICAgICAgcmV0dmFsID0gdW5kZWZpbmVkCiAgICAgICAgYXJncyA9ICgoWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTIuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQnXSwgPFF1YXN0U2Vzc2lvbjogMDEgRGVjIDIwMTIgMTQ6Mjg6NTEuNTg2ODI4ICswMDAwPiksKQogICAgICAgIGt3YXJncyA9IHt9CiAgICAyMjUgICAgICAgICAgICAgICAgICAgICBzdGF0ZSA9IFNVQ0NFU1MKICAgIDIyNiAgICAgICAgICAgICAgICAgZXhjZXB0IElnbm9yZSwgZXhjOgogICAgMjI3ICAgICAgICAgICAgICAgICAgICAgSSwgUiA9IEluZm8oSUdOT1JFRCwgZXhjKSwgRXhjZXB0aW9uSW5mbyhpbnRlcm5hbD1UcnVlKQogICAgMjI4ICAgICAgICAgICAgICAgICBleGNlcHQgUmV0cnlUYXNrRXJyb3IsIGV4YzoKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfYXBwL3Rhc2tzLnB5IGluIHN0YXJ0X3F1YXN0KChhcmdzPVsnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvcXVhc3QucHknLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4yOF81MV81ODY4MjhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTIuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4yOF81MV81ODY4MjhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTMuZmFzdGEnLCAnLVInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL3JlZmVyZW5jZV8xMEsuZmFzdGEuZ3onLCAnLUcnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL2dlbmVzXzEwSy5nZmYnLCAnLU8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL2RhdGFfc2V0cy9lLWNvbGktMTBrL29wZXJvbnNfMTBLLmdmZicsICctLW1pbi1jb250aWcnLCAnMjAwJywgJy1KJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDL2Z1bGxfb3V0cHV0J10sIGNvbW1hbmQ9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlLi4uZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDL2Z1bGxfb3V0cHV0JykpCiAgICAgODEgICAgIHRyeToKICAgICA4MiAgICAgICAgIGlmIG5vdCBzZXR0aW5ncy5RVUFTVF9ESVJQQVRIIGluIHN5cy5wYXRoOgogICAgIDgzICAgICAgICAgICAgIHN5cy5wYXRoLmluc2VydCgxLCBzZXR0aW5ncy5RVUFTVF9ESVJQQVRIKQogICAgIDg0ICAgICAgICAgaW1wb3J0IHF1YXN0CiAgICAgODUgCi0tLT4gODYgICAgICAgICByZXN1bHQgPSBxdWFzdC5tYWluKGFyZ3NbMTpdKQogICAgICAgIHJlc3VsdCA9IHVuZGVmaW5lZAogICAgICAgIHF1YXN0Lm1haW4gPSA8ZnVuY3Rpb24gbWFpbiBhdCAweDEwOGIxODc1OD4KICAgICAgICBhcmdzID0gWycvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDL2NvbnRpZ3NfZXZhbHVhdGlvbi9FQ09MSTIuZmFzdGEnLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS8uLi9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9jb250aWdzX2V2YWx1YXRpb24vRUNPTEkzLmZhc3RhJywgJy1SJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9yZWZlcmVuY2VfMTBLLmZhc3RhLmd6JywgJy1HJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9nZW5lc18xMEsuZ2ZmJywgJy1PJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9kYXRhX3NldHMvZS1jb2xpLTEway9vcGVyb25zXzEwSy5nZmYnLCAnLS1taW4tY29udGlnJywgJzIwMCcsICctSicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvcmVzdWx0cy82NWZiYzBlNmNmZjUxNDBlM2E3MTEzZmI3NTY3ZThhOS8wMV9EZWNfMjAxMl8xNF8yOF81MV81ODY4MjhfVVRDJywgJy1vJywgdScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQnXQogICAgIDg3IAogICAgIDg4ICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgODkgICAgICAgICB0cmFjZV9iYWNrID0gdHJhY2ViYWNrLmZvcm1hdF9leGMoKQogICAgIDkwICAgICAgICAgYWRkX3RvX2VuZCA9ICdcblxuVXNlciBlbWFpbDogJyArIHN0cih1c2VyX2VtYWlsKSArIFwKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9xdWFzdC5weSBpbiBtYWluKGFyZ3M9W3UnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMi5mYXN0YScsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLjI4XzUxXzU4NjgyOF9VVEMvY29udGlnc19ldmFsdWF0aW9uL0VDT0xJMy5mYXN0YScsICctUicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZS4uLmRhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvcmVmZXJlbmNlXzEwSy5mYXN0YS5neicsICctRycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvZ2VuZXNfMTBLLmdmZicsICctTycsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlLy4uL2RhdGEvZGF0YV9zZXRzL2UtY29saS0xMGsvb3Blcm9uc18xMEsuZ2ZmJywgJy0tbWluLWNvbnRpZycsICcyMDAnLCAnLUonLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi4zYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMnLCAnLW8nLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2UuLi5lOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQnXSwgbGliX2Rpcj0nL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvbGlicycpCiAgICA0NDcgICAgIGlmIHFjb25maWcucmVmZXJlbmNlOgogICAgNDQ4ICAgICAgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICA0NDkgICAgICAgICAjIyMgZm9ybWVyIFBMQU5UQUtPTFlBLCBQTEFOVEFHT1JBCiAgICA0NTAgICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgIDQ1MSAgICAgICAgIGZyb20gbGlicyBpbXBvcnQgY29udGlnc19hbmFseXplcgotLT4gNDUyICAgICAgICAgbnVjbWVyX3N0YXR1c2VzID0gY29udGlnc19hbmFseXplci5kbyhxY29uZmlnLnJlZmVyZW5jZSwgY29udGlnc19mcGF0aHMsIHFjb25maWcuY3ljbGljLCBvdXRwdXRfZGlycGF0aCArICcvY29udGlnc19yZXBvcnRzJywgbGliX2RpciwgcWNvbmZpZy5kcmF3X3Bsb3RzKQogICAgICAgIG51Y21lcl9zdGF0dXNlcyA9IHVuZGVmaW5lZAogICAgICAgIGNvbnRpZ3NfYW5hbHl6ZXIuZG8gPSA8ZnVuY3Rpb24gZG8gYXQgMHgxMGE0ZjlkZTg+CiAgICAgICAgb3V0cHV0X2RpcnBhdGggPSB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQnCiAgICAgICAgbGliX2RpciA9ICcvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzJwogICAgNDUzICAgICAgICAgZm9yIGNvbnRpZ3NfZnBhdGggaW4gY29udGlnc19mcGF0aHM6CiAgICA0NTQgICAgICAgICAgICAgaWYgbnVjbWVyX3N0YXR1c2VzW2NvbnRpZ3NfZnBhdGhdID09IGNvbnRpZ3NfYW5hbHl6ZXIuTnVjbWVyU3RhdHVzLk9LOgogICAgNDU1ICAgICAgICAgICAgICAgICBhbGlnbmVkX2ZwYXRocy5hcHBlbmQoY29udGlnc19mcGF0aCkKICAgIDQ1NiAgICAgICAgIHJlbG9hZChjb250aWdzX2FuYWx5emVyKQoKLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uCi9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvcXVhc3Qtd2Vic2l0ZS9xdWFzdF90b29sL2xpYnMvY29udGlnc19hbmFseXplci5weSBpbiBkbyhyZWZlcmVuY2U9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9yZWZlcmVuY2VfMTBLLmZhc3RhJywgZmlsZW5hbWVzPVt1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi41MV81ODY4MjhfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTInLCB1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi41MV81ODY4MjhfVVRDL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9FQ09MSTMnXSwgY3ljbGljPVRydWUsIG91dHB1dF9kaXI9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQvY29udGlnc19yZXBvcnRzJywgbGliX2Rpcj0nL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9xdWFzdC13ZWJzaXRlL3F1YXN0X3Rvb2wvbGlicycsIGRyYXdfcGxvdHM9VHJ1ZSkKICAgMTE5OSAgICAgICAgIG9zLm1rZGlyKG51Y21lcl9vdXRwdXRfZGlyKQogICAxMjAwIAogICAxMjAxICAgICBmcm9tIGpvYmxpYiBpbXBvcnQgUGFyYWxsZWwsIGRlbGF5ZWQKICAgMTIwMiAgICAgc3RhdHVzZXNfcmVzdWx0c19wYWlycyA9IFBhcmFsbGVsKG5fam9icz1sZW4oZmlsZW5hbWVzKSkoZGVsYXllZChwbGFudGFrb2x5YV9wcm9jZXNzKSgKICAgMTIwMyAgICAgICAgIGN5Y2xpYywgZHJhd19wbG90cywgbnVjbWVyX291dHB1dF9kaXIsIGZuYW1lLCBpZCwgbXllbnYsIG91dHB1dF9kaXIsIHJlZmVyZW5jZSkKLT4gMTIwNCAgICAgICAgICAgZm9yIGlkLCBmbmFtZSBpbiBlbnVtZXJhdGUoZmlsZW5hbWVzKSkKICAgICAgICBpZCA9IHVuZGVmaW5lZAogICAgICAgIGZpbGVuYW1lcyA9IFt1Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXN1bHRzLzY1ZmJjMGU2Y2ZmNTE0MGUzYTcxMTNmYjc1NjdlOGE5LzAxX0RlY18yMDEyXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQvY29ycmVjdGVkX2lucHV0L0VDT0xJMicsIHUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlc3VsdHMvNjVmYmMwZTZjZmY1MTQwZTNhNzExM2ZiNzU2N2U4YTkvMDFfRGVjXzIwMTJfMTRfMjhfNTFfNTg2ODI4X1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEkzJ10KICAgMTIwNSAKICAgMTIwNiAgICAgIyB1bnppcHBpbmcKICAgMTIwNyAgICAgc3RhdHVzZXMsIHJlc3VsdHMgPSBbeFswXSBmb3IgeCBpbiBzdGF0dXNlc19yZXN1bHRzX3BhaXJzXSwgW3hbMV0gZm9yIHggaW4gc3RhdHVzZXNfcmVzdWx0c19wYWlyc10KICAgMTIwOCAKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3ZpcnR1YWxlbnYvbGliL3B5dGhvbjIuNy9zaXRlLXBhY2thZ2VzL2pvYmxpYi9wYXJhbGxlbC5weSBpbiBfX2NhbGxfXyhzZWxmPVBhcmFsbGVsKG5fam9icz0yKSwgaXRlcmFibGU9PGdlbmVyYXRvciBvYmplY3QgPGdlbmV4cHI+PikKICAgIDUxMSAgICAgICAgIHNlbGYubl9kaXNwYXRjaGVkID0gMAogICAgNTEyICAgICAgICAgdHJ5OgogICAgNTEzICAgICAgICAgICAgIGZvciBmdW5jdGlvbiwgYXJncywga3dhcmdzIGluIGl0ZXJhYmxlOgogICAgNTE0ICAgICAgICAgICAgICAgICBzZWxmLmRpc3BhdGNoKGZ1bmN0aW9uLCBhcmdzLCBrd2FyZ3MpCiAgICA1MTUgCi0tPiA1MTYgICAgICAgICAgICAgc2VsZi5yZXRyaWV2ZSgpCiAgICAgICAgc2VsZi5yZXRyaWV2ZSA9IDxib3VuZCBtZXRob2QgUGFyYWxsZWwucmV0cmlldmUgb2YgUGFyYWxsZWwobl9qb2JzPTIpPgogICAgNTE3ICAgICAgICAgICAgICMgTWFrZSBzdXJlIHRoYXQgd2UgZ2V0IGEgbGFzdCBtZXNzYWdlIHRlbGxpbmcgdXMgd2UgYXJlIGRvbmUKICAgIDUxOCAgICAgICAgICAgICBlbGFwc2VkX3RpbWUgPSB0aW1lLnRpbWUoKSAtIHNlbGYuX3N0YXJ0X3RpbWUKICAgIDUxOSAgICAgICAgICAgICBzZWxmLl9wcmludCgnRG9uZSAlM2kgb3V0IG9mICUzaSB8IGVsYXBzZWQ6ICVzIGZpbmlzaGVkJywKICAgIDUyMCAgICAgICAgICAgICAgICAgICAgICAgICAobGVuKHNlbGYuX291dHB1dCksCgogICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBTdWItcHJvY2VzcyB0cmFjZWJhY2s6CiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIEluZGV4RXJyb3IgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNhdCBEZWMgIDEgMTg6Mjk6MjMgMjAxMgpQSUQ6IDI0MzIyUHl0aG9uIDIuNy4xOiAvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvLi4vdmlydHVhbGVudi9iaW4vcHl0aG9uCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzL2NvbnRpZ3NfYW5hbHl6ZXIucHljIGluIHBsYW50YWtvbHlhX3Byb2Nlc3MoY3ljbGljPVRydWUsIGRyYXdfcGxvdHM9VHJ1ZSwgbnVjbWVyX291dHB1dF9kaXI9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uMjhfVVRDL2Z1bGxfb3V0cHV0L2NvbnRpZ3NfcmVwb3J0cy9udWNtZXJfb3V0cHV0JywgZmlsZW5hbWU9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uNTFfNTg2ODI4X1VUQy9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvRUNPTEkyJywgaWQ9MCwgbXllbnY9eydBcHBsZV9QdWJTdWJfU29ja2V0X1JlbmRlcic6ICcvdG1wL2xhdW5jaC04NmtnUDMvUmVuZGVyJywgJ0FwcGxlX1ViaXF1aXR5X01lc3NhZ2UnOiAnL3RtcC9sYXVuY2gtTHdkTTVBL0FwcGxlX1ViaXF1aXR5X01lc3NhZ2UnLCAnQ0VMRVJZX0xPQURFUic6ICdkamNlbGVyeS5sb2FkZXJzLkRqYW5nb0xvYWRlcicsICdDRUxFUllfTE9HX0ZJTEUnOiAnJywgJ0NFTEVSWV9MT0dfTEVWRUwnOiAnMzAnLCAnQ0VMRVJZX0xPR19SRURJUkVDVCc6ICcxJywgJ0NFTEVSWV9MT0dfUkVESVJFQ1RfTEVWRUwnOiAnV0FSTklORycsICdDTElDT0xPUic6ICcxJywgJ0NPTU1BTkRfTU9ERSc6ICd1bml4MjAwMycsICdERVZFTE9QTUVOVCc6ICcxJywgLi4ufSwgb3V0cHV0X2Rpcj11Jy9Vc2Vycy92bGFkc2F2ZWxpZXYvRHJvcGJveC9iaW8vcXVhc3QvZGF0YS9yZXMuLi5fMTRfMjhfNTFfNTg2ODI4X1VUQy9mdWxsX291dHB1dC9jb250aWdzX3JlcG9ydHMnLCByZWZlcmVuY2U9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uL2Z1bGxfb3V0cHV0L2NvcnJlY3RlZF9pbnB1dC9yZWZlcmVuY2VfMTBLLmZhc3RhJykKICAgMTE0OCAKICAgMTE0OSAKICAgMTE1MCBkZWYgcGxhbnRha29seWFfcHJvY2VzcyhjeWNsaWMsIGRyYXdfcGxvdHMsIG51Y21lcl9vdXRwdXRfZGlyLCBmaWxlbmFtZSwgaWQsIG15ZW52LCBvdXRwdXRfZGlyLCByZWZlcmVuY2UpOgogICAxMTUxICAgICBwcmludCAnICAnICsgaWRfdG9fc3RyKGlkKSArIG9zLnBhdGguYmFzZW5hbWUoZmlsZW5hbWUpICsgJy4uLicKICAgMTE1MiAgICAgbnVjbWVyX2ZuYW1lID0gb3MucGF0aC5qb2luKG51Y21lcl9vdXRwdXRfZGlyLCBvcy5wYXRoLmJhc2VuYW1lKGZpbGVuYW1lKSkKLT4gMTE1MyAgICAgbnVjbWVyX2lzX29rLCByZXN1bHQgPSBwbGFudGFrb2x5YShjeWNsaWMsIGRyYXdfcGxvdHMsIGlkLCBmaWxlbmFtZSwgbnVjbWVyX2ZuYW1lLCBteWVudiwgb3V0cHV0X2RpciwgcmVmZXJlbmNlKQogICAxMTU0ICAgICBjbGVhcl9maWxlcyhmaWxlbmFtZSwgbnVjbWVyX2ZuYW1lKQogICAxMTU1IAogICAxMTU2ICAgICByZXR1cm4gbnVjbWVyX2lzX29rLCByZXN1bHQKICAgMTE1NyAKCi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgovVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L3F1YXN0LXdlYnNpdGUvcXVhc3RfdG9vbC9saWJzL2NvbnRpZ3NfYW5hbHl6ZXIucHljIGluIHBsYW50YWtvbHlhKGN5Y2xpYz1UcnVlLCBkcmF3X3Bsb3RzPVRydWUsIGlkPTAsIGZpbGVuYW1lPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLjUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQvY29ycmVjdGVkX2lucHV0L0VDT0xJMicsIG51Y21lcmZpbGVuYW1lPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLmZ1bGxfb3V0cHV0L2NvbnRpZ3NfcmVwb3J0cy9udWNtZXJfb3V0cHV0L0VDT0xJMicsIG15ZW52PXsnQXBwbGVfUHViU3ViX1NvY2tldF9SZW5kZXInOiAnL3RtcC9sYXVuY2gtODZrZ1AzL1JlbmRlcicsICdBcHBsZV9VYmlxdWl0eV9NZXNzYWdlJzogJy90bXAvbGF1bmNoLUx3ZE01QS9BcHBsZV9VYmlxdWl0eV9NZXNzYWdlJywgJ0NFTEVSWV9MT0FERVInOiAnZGpjZWxlcnkubG9hZGVycy5EamFuZ29Mb2FkZXInLCAnQ0VMRVJZX0xPR19GSUxFJzogJycsICdDRUxFUllfTE9HX0xFVkVMJzogJzMwJywgJ0NFTEVSWV9MT0dfUkVESVJFQ1QnOiAnMScsICdDRUxFUllfTE9HX1JFRElSRUNUX0xFVkVMJzogJ1dBUk5JTkcnLCAnQ0xJQ09MT1InOiAnMScsICdDT01NQU5EX01PREUnOiAndW5peDIwMDMnLCAnREVWRUxPUE1FTlQnOiAnMScsIC4uLn0sIG91dHB1dF9kaXI9dScvVXNlcnMvdmxhZHNhdmVsaWV2L0Ryb3Bib3gvYmlvL3F1YXN0L2RhdGEvcmVzLi4uXzE0XzI4XzUxXzU4NjgyOF9VVEMvZnVsbF9vdXRwdXQvY29udGlnc19yZXBvcnRzJywgcmVmZXJlbmNlPXUnL1VzZXJzL3ZsYWRzYXZlbGlldi9Ecm9wYm94L2Jpby9xdWFzdC9kYXRhL3Jlcy4uLi9mdWxsX291dHB1dC9jb3JyZWN0ZWRfaW5wdXQvcmVmZXJlbmNlXzEwSy5mYXN0YScpCiAgICAzNzkgICAgICAgICB0bXBfY29vcmRzX2ZpbGUgPSBvcGVuKHRtcF9jb29yZHNfZmlsZW5hbWUpCiAgICAzODAgICAgICAgICBmb3IgbGluZSBpbiB0bXBfY29vcmRzX2ZpbGU6CiAgICAzODEgICAgICAgICAgICAgaGVhZGVyLmFwcGVuZChsaW5lKQogICAgMzgyICAgICAgICAgICAgIGlmIGxpbmUuc3RhcnRzd2l0aCgnPT09PT0nKToKICAgIDM4MyAgICAgICAgICAgICAgICAgYnJlYWsKLS0+IDM4NCAgICAgICAgIGNvb3Jkc19maWxlLndyaXRlKGhlYWRlclstMl0pCiAgICAzODUgICAgICAgICBjb29yZHNfZmlsZS53cml0ZShoZWFkZXJbLTFdKQogICAgMzg2ICAgICAgICAgZm9yIGxpbmUgaW4gdG1wX2Nvb3Jkc19maWxlOgogICAgMzg3ICAgICAgICAgICAgIGNvb3Jkc19maWxlLndyaXRlKGxpbmUpCiAgICAzODggICAgICAgICBjb29yZHNfZmlsZS5jbG9zZSgpCgpJbmRleEVycm9yOiBsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChVJxA31iLg==", "hidden": false}}, {"pk": 376, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "daa0d08f-a968-44c9-a215-d26483719026", "date_done": "2012-12-01T14:44:49.945Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs3zK9YDADbbBgc=", "result": "gAJjYmlsbGlhcmQuZXhjZXB0aW9ucwpXb3JrZXJMb3N0RXJyb3IKcQFVKFdvcmtlciBleGl0ZWQgcHJlbWF0dXJlbHkgKGV4aXRjb2RlOiAyKS5xAoVxA1JxBC4=", "hidden": false}}, {"pk": 377, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c4ee1f23-b5b9-4ec2-a7ff-dc4a430c8e36", "date_done": "2012-12-01T15:15:07.303Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 378, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "b00a4aa3-f699-4ec9-bdf3-03f115b52664", "date_done": "2012-12-01T15:15:47.518Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x107ea3938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x107eb5690>, <billiard.queues.SimpleQueue object at 0x107eb57d0>, <function process_initializer at 0x108306140>, (<Celery default:0x1083055d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1083055d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x108302de8>\n        args = ('quast_app.tasks.start_quast', 'b00a4aa3-f699-4ec9-bdf3-03f115b52664', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),), 'expires': None, 'id': 'b00a4aa3-f699-4ec9-bdf3-03f115b52664', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='b00a4aa3-f699-4ec9-bdf3-03f115b52664', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'b00a4aa3-f699-4ec9-bdf3-03f115b52664', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'b00a4aa3-f699-4ec9-bdf3-03f115b52664'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),), 'expires': None, 'id': 'b00a4aa3-f699-4ec9-bdf3-03f115b52664', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='b00a4aa3-f699-4ec9-bdf3-03f115b52664', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'b00a4aa3-f699-4ec9-bdf3-03f115b52664', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], <QuastSession: 01 Dec 2012 15:14:53.888635 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x108d5d758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...14_53_888635_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x10a73ede8>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456         reload(contigs_analyzer)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...53_888635_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...53_888635_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_14_53_888635_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1204         os.mkdir(nucmer_output_dir)\n   1205 \n   1206     from joblib import Parallel, delayed\n   1207     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1208         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1209           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_14_53_888635_UTC/full_output/corrected_input/ECOLI3']\n   1210 \n   1211     # unzipping\n   1212     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1213 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 19:15:47 2012\nPID: 24920Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...35_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...53_888635_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_14_53_888635_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1153 \n   1154 \n   1155 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1156     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1157     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1158     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1159     clear_files(filename, nucmer_fname)\n   1160 \n   1161     return nucmer_is_ok, result\n   1162 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...53_888635_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_14_53_888635_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    384 \n    385         print '*' * 200\n    386         print str(header)\n    387         print '*' * 200\n    388 \n--> 389         coords_file.write(header[-2])\n    390         coords_file.write(header[-1])\n    391         for line in tmp_coords_file:\n    392             coords_file.write(line)\n    393         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 379, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "98b2ec2f-e879-4087-98bd-da52a03d8077", "date_done": "2012-12-01T15:18:30.546Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 380, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c2415b39-4910-4c2a-8b33-45511cbffaad", "date_done": "2012-12-01T15:18:36.330Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 381, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "438227dc-60eb-482f-bfab-13f9a5673112", "date_done": "2012-12-01T15:22:07.149Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-2, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-2, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-2, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-2, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10f68f938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10f6a1690>, <billiard.queues.SimpleQueue object at 0x10f6a17d0>, <function process_initializer at 0x10faf2140>, (<Celery default:0x10faf15d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10faf15d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = (True, 0)\n        func = <function _fast_trace_task at 0x10faeede8>\n        args = ('quast_app.tasks.start_quast', '438227dc-60eb-482f-bfab-13f9a5673112', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),), 'expires': None, 'id': '438227dc-60eb-482f-bfab-13f9a5673112', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='438227dc-60eb-482f-bfab-13f9a5673112', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '438227dc-60eb-482f-bfab-13f9a5673112', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '438227dc-60eb-482f-bfab-13f9a5673112'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),), 'expires': None, 'id': '438227dc-60eb-482f-bfab-13f9a5673112', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='438227dc-60eb-482f-bfab-13f9a5673112', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '438227dc-60eb-482f-bfab-13f9a5673112', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], <QuastSession: 01 Dec 2012 15:18:19.818759 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x1105496e0>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...18_19_818759_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x111f2acf8>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456         reload(contigs_analyzer)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...19_818759_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...19_818759_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_18_19_818759_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1205         os.mkdir(nucmer_output_dir)\n   1206 \n   1207     from joblib import Parallel, delayed\n   1208     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1209         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1210           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_18_19_818759_UTC/full_output/corrected_input/ECOLI3']\n   1211 \n   1212     # unzipping\n   1213     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1214 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 19:22:06 2012\nPID: 25122Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...59_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...19_818759_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_18_19_818759_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1154 \n   1155 \n   1156 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1157     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1158     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1159     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1160     clear_files(filename, nucmer_fname)\n   1161 \n   1162     return nucmer_is_ok, result\n   1163 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...19_818759_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_18_19_818759_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    385         print '*' * 150\n    386         print 'Contents of header of %s' % tmp_coords_file\n    387         print str(header)\n    388         print '*' * 150\n    389 \n--> 390         coords_file.write(header[-2])\n    391         coords_file.write(header[-1])\n    392         for line in tmp_coords_file:\n    393             coords_file.write(line)\n    394         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 382, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "af9f312a-e0a6-4a40-b596-9391f09c8a87", "date_done": "2012-12-01T15:31:21.638Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibAttributeError: JoblibAttributeError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-2, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-2, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-2, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-2, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x107208938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10721a690>, <billiard.queues.SimpleQueue object at 0x10721a7d0>, <function process_initializer at 0x10766b140>, (<Celery default:0x10766a5d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10766a5d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x107667de8>\n        args = ('quast_app.tasks.start_quast', 'af9f312a-e0a6-4a40-b596-9391f09c8a87', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),), 'expires': None, 'id': 'af9f312a-e0a6-4a40-b596-9391f09c8a87', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='af9f312a-e0a6-4a40-b596-9391f09c8a87', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'af9f312a-e0a6-4a40-b596-9391f09c8a87', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'af9f312a-e0a6-4a40-b596-9391f09c8a87'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),), 'expires': None, 'id': 'af9f312a-e0a6-4a40-b596-9391f09c8a87', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='af9f312a-e0a6-4a40-b596-9391f09c8a87', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'af9f312a-e0a6-4a40-b596-9391f09c8a87', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], <QuastSession: 01 Dec 2012 15:31:01.875829 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x1080c2758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...31_01_875829_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x109aa3d70>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456         reload(contigs_analyzer)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...01_875829_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...01_875829_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_31_01_875829_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1206         os.mkdir(nucmer_output_dir)\n   1207 \n   1208     from joblib import Parallel, delayed\n   1209     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1210         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1211           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output/corrected_input/ECOLI3']\n   1212 \n   1213     # unzipping\n   1214     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1215 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    AttributeError                                     Sat Dec  1 19:31:20 2012\nPID: 25241Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...29_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...01_875829_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_31_01_875829_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1155 \n   1156 \n   1157 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1158     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1159     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1160     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n        nucmer_is_ok = undefined\n        result = undefined\n        cyclic = True\n        draw_plots = True\n        id = 0\n        filename = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output/corrected_input/ECOLI2'\n        nucmer_fname = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output/contigs_reports/nucmer_output/ECOLI2'\n        myenv = {'LC_NUMERIC': 'ru_RU.UTF-8', 'MACOSX_DEPLOYMENT_TARGET': '10.8', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'LC_CTYPE': 'ru_RU.UTF-8', 'TERM_PROGRAM_VERSION': '309', '_MP_FORK_LOGFILE_': '', 'MULTIPROCESSING_FORKING_DISABLE': '1', 'CELERY_LOG_REDIRECT': '1', 'LOGNAME': 'vladsaveliev', 'USER': 'vladsaveliev', 'HOME': '/Users/vladsaveliev', 'PATH': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/MUMmer3.23-osx:/Users/vladsaveliev/Dropbox/au/scala/scala/2.9.2:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin:/usr/local/mysql/bin', 'DISPLAY': '/tmp/launch-KGjw4c/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'Apple_Terminal', 'LANG': 'ru_RU.UTF-8', 'TERM': 'xterm-256color', 'SHELL': '/bin/bash', 'TZ': 'Europe/Moscow', 'VERSIONER_PYTHON_VERSION': '2.7', 'LC_MONETARY': 'ru_RU.UTF-8', 'FORKED_BY_MULTIPROCESSING': '1', 'CELERY_LOG_FILE': '', 'TERM_SESSION_ID': 'AEF1E351-EC04-48C7-A92A-E2E7683E7627', 'SSH_AUTH_SOCK': '/tmp/launch-ZiTXcA/Listeners', 'SHLVL': '1', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'MP_MAIN_FILE': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/manage.pyc', 'LC_ALL': 'ru_RU.UTF-8', '_': '../virtualenv/bin/python', 'DEVELOPMENT': '1', 'celery_dummy_proxy': 'set_by_celeryd', 'TMPDIR': '/var/folders/wp/6kqq17055n390ym24d4k1vw80000gn/T/', 'LC_MESSAGES': 'ru_RU.UTF-8', 'LC_COLLATE': 'ru_RU.UTF-8', '_MP_FORK_LOGFORMAT_': '[%(asctime)s: %(levelname)s/%(processName)s] %(message)s', 'CLICOLOR': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'PWD': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website', '_MP_FORK_LOGLEVEL_': '30', 'DJANGO_SETTINGS_MODULE': 'settings', 'LC_TIME': 'ru_RU.UTF-8', 'CELERY_LOG_LEVEL': '30', 'COMMAND_MODE': 'unix2003'}\n        output_dir = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output/contigs_reports'\n        reference = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_31_01_875829_UTC/full_output/corrected_input/reference_10K.fasta'\n   1161     clear_files(filename, nucmer_fname)\n   1162 \n   1163     return nucmer_is_ok, result\n   1164 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...01_875829_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_31_01_875829_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    356         # GAGE params of Nucmer\n    357         #subprocess.call(['nucmer', '--maxmatch', '-p', nucmerfilename, '-l', '30', '-banded', reference, filename],\n    358         #    stdout=open(logfilename_out, 'a'), stderr=logfile_err, env=myenv)\n    359         subprocess.call(['nucmer', '--maxmatch', '-p', nucmerfilename, reference, filename],\n    360              stdout=open(logfilename_out, 'a'), stderr=logfile_err, env=myenv)\n--> 361         logfilename_out.close()\n        logfilename_out.close = undefined\n    362 \n    363         # Filtering by IDY% = 95 (as GAGE did)\n    364         subprocess.call(['delta-filter', '-i', '95', delta_filename],\n    365             stdout=open(filtered_delta_filename, 'w'), stderr=logfile_err, env=myenv)\n\nAttributeError: 'unicode' object has no attribute 'close'\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 383, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "011c7bff-afba-40e6-b177-065bb738dae4", "date_done": "2012-12-01T15:43:25.018Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibAttributeError: JoblibAttributeError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-2, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-2, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-2, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-2, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x105e13938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x105e25690>, <billiard.queues.SimpleQueue object at 0x105e257d0>, <function process_initializer at 0x106276140>, (<Celery default:0x1062755d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x1062755d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x106272de8>\n        args = ('quast_app.tasks.start_quast', '011c7bff-afba-40e6-b177-065bb738dae4', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),), 'expires': None, 'id': '011c7bff-afba-40e6-b177-065bb738dae4', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='011c7bff-afba-40e6-b177-065bb738dae4', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '011c7bff-afba-40e6-b177-065bb738dae4', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '011c7bff-afba-40e6-b177-065bb738dae4'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),), 'expires': None, 'id': '011c7bff-afba-40e6-b177-065bb738dae4', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='011c7bff-afba-40e6-b177-065bb738dae4', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '011c7bff-afba-40e6-b177-065bb738dae4', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:05.813382 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x106ccd758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_05_813382_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x1086aed70>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456         reload(contigs_analyzer)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...05_813382_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...05_813382_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_43_05_813382_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1209         os.mkdir(nucmer_output_dir)\n   1210 \n   1211     from joblib import Parallel, delayed\n   1212     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1213         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1214           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output/corrected_input/ECOLI3']\n   1215 \n   1216     # unzipping\n   1217     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1218 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    AttributeError                                     Sat Dec  1 19:43:24 2012\nPID: 25338Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...82_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...05_813382_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_43_05_813382_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1158 \n   1159 \n   1160 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1161     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1162     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1163     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n        nucmer_is_ok = undefined\n        result = undefined\n        cyclic = True\n        draw_plots = True\n        id = 0\n        filename = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output/corrected_input/ECOLI2'\n        nucmer_fname = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output/contigs_reports/nucmer_output/ECOLI2'\n        myenv = {'LC_NUMERIC': 'ru_RU.UTF-8', 'MACOSX_DEPLOYMENT_TARGET': '10.8', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'LC_CTYPE': 'ru_RU.UTF-8', 'TERM_PROGRAM_VERSION': '309', '_MP_FORK_LOGFILE_': '', 'MULTIPROCESSING_FORKING_DISABLE': '1', 'CELERY_LOG_REDIRECT': '1', 'LOGNAME': 'vladsaveliev', 'USER': 'vladsaveliev', 'HOME': '/Users/vladsaveliev', 'PATH': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/MUMmer3.23-osx:/Users/vladsaveliev/Dropbox/au/scala/scala/2.9.2:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin:/usr/local/mysql/bin', 'DISPLAY': '/tmp/launch-KGjw4c/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'Apple_Terminal', 'LANG': 'ru_RU.UTF-8', 'TERM': 'xterm-256color', 'SHELL': '/bin/bash', 'TZ': 'Europe/Moscow', 'VERSIONER_PYTHON_VERSION': '2.7', 'LC_MONETARY': 'ru_RU.UTF-8', 'FORKED_BY_MULTIPROCESSING': '1', 'CELERY_LOG_FILE': '', 'TERM_SESSION_ID': 'AEF1E351-EC04-48C7-A92A-E2E7683E7627', 'SSH_AUTH_SOCK': '/tmp/launch-ZiTXcA/Listeners', 'SHLVL': '1', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'MP_MAIN_FILE': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/manage.pyc', 'LC_ALL': 'ru_RU.UTF-8', '_': '../virtualenv/bin/python', 'DEVELOPMENT': '1', 'celery_dummy_proxy': 'set_by_celeryd', 'TMPDIR': '/var/folders/wp/6kqq17055n390ym24d4k1vw80000gn/T/', 'LC_MESSAGES': 'ru_RU.UTF-8', 'LC_COLLATE': 'ru_RU.UTF-8', '_MP_FORK_LOGFORMAT_': '[%(asctime)s: %(levelname)s/%(processName)s] %(message)s', 'CLICOLOR': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'PWD': '/Users/vladsaveliev/Dropbox/bio/quast/quast-website', '_MP_FORK_LOGLEVEL_': '30', 'DJANGO_SETTINGS_MODULE': 'settings', 'LC_TIME': 'ru_RU.UTF-8', 'CELERY_LOG_LEVEL': '30', 'COMMAND_MODE': 'unix2003'}\n        output_dir = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output/contigs_reports'\n        reference = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_05_813382_UTC/full_output/corrected_input/reference_10K.fasta'\n   1164     clear_files(filename, nucmer_fname)\n   1165 \n   1166     return nucmer_is_ok, result\n   1167 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...05_813382_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_43_05_813382_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    378             stdout=tmp_coords_file, stderr=logfile_err, env=myenv)\n    379         tmp_coords_file.close()\n    380 \n    381         subprocess.call(['dnadiff', '-d', delta_filename, '-p', nucmerfilename],\n    382             stdout=open(logfilename_out, 'a'), stderr=logfile_err, env=myenv)\n--> 383         logfilename_out.close()\n        logfilename_out.close = undefined\n    384 \n    385         # removing waste lines from coords file\n    386         coords_file = open(coords_filename, 'w')\n    387         header = []\n\nAttributeError: 'unicode' object has no attribute 'close'\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 384, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "19050430-c832-4e3d-919f-2f0dea0f6fac", "date_done": "2012-12-01T15:46:54.747Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibAttributeError: JoblibAttributeError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-1, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-1, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-1, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-1, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x10d060938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x10d072690>, <billiard.queues.SimpleQueue object at 0x10d0727d0>, <function process_initializer at 0x10d4c3140>, (<Celery default:0x10d4c25d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x10d4c25d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x10d4bfde8>\n        args = ('quast_app.tasks.start_quast', '19050430-c832-4e3d-919f-2f0dea0f6fac', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),), 'expires': None, 'id': '19050430-c832-4e3d-919f-2f0dea0f6fac', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='19050430-c832-4e3d-919f-2f0dea0f6fac', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '19050430-c832-4e3d-919f-2f0dea0f6fac', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = '19050430-c832-4e3d-919f-2f0dea0f6fac'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),), 'expires': None, 'id': '19050430-c832-4e3d-919f-2f0dea0f6fac', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='19050430-c832-4e3d-919f-2f0dea0f6fac', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': '19050430-c832-4e3d-919f-2f0dea0f6fac', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], <QuastSession: 01 Dec 2012 15:43:13.165149 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x10df1a758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...43_13_165149_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x10f8fbde8>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456         reload(contigs_analyzer)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...13_165149_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...13_165149_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_43_13_165149_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1209         os.mkdir(nucmer_output_dir)\n   1210 \n   1211     from joblib import Parallel, delayed\n   1212     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1213         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1214           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_43_13_165149_UTC/full_output/corrected_input/ECOLI3']\n   1215 \n   1216     # unzipping\n   1217     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1218 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    AttributeError                                     Sat Dec  1 19:46:54 2012\nPID: 25449Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...49_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...13_165149_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_43_13_165149_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1158 \n   1159 \n   1160 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1161     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1162     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1163     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1164     clear_files(filename, nucmer_fname)\n   1165 \n   1166     return nucmer_is_ok, result\n   1167 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...13_165149_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_43_13_165149_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    378             stdout=tmp_coords_file, stderr=logfile_err, env=myenv)\n    379         tmp_coords_file.close()\n    380 \n    381         subprocess.call(['dnadiff', '-d', delta_filename, '-p', nucmerfilename],\n    382             stdout=open(logfilename_out, 'a'), stderr=logfile_err, env=myenv)\n--> 383         logfilename_out.close()\n    384 \n    385         # removing waste lines from coords file\n    386         coords_file = open(coords_filename, 'w')\n    387         header = []\n\nAttributeError: 'unicode' object has no attribute 'close'\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 385, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c57700e6-4a94-4036-aa7b-5d2e3152dcf2", "date_done": "2012-12-01T15:55:30.457Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 386, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "e54b3b1d-3649-4cb4-bf03-58f04953c4cc", "date_done": "2012-12-01T15:55:55.073Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nJoblibIndexError: JoblibIndexError\n___________________________________________________________________________\nMultiprocessing exception:\n    ...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/<string> in <module>()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/forking.py in main()\n    528     self = load(from_parent)\n    529     process.current_process()._inheriting = False\n    530 \n    531     from_parent.close()\n    532 \n--> 533     exitcode = self._bootstrap()\n        exitcode = undefined\n        self._bootstrap = <bound method Process._bootstrap of <Process(PoolWorker-4, started daemon)>>\n    534     exit(exitcode)\n    535 \n    536 \n    537 def get_preparation_data(name):\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in _bootstrap(self=<Process(PoolWorker-4, started daemon)>)\n    243                 # delay finalization of the old process object until after\n    244                 # _run_after_forkers() is executed\n    245                 del old_process\n    246             util.info('child process calling self.run()')\n    247             try:\n--> 248                 self.run()\n        self.run = <bound method Process.run of <Process(PoolWorker-4, started daemon)>>\n    249                 exitcode = 0\n    250             finally:\n    251                 util._exit_function()\n    252         except SystemExit, e:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/process.py in run(self=<Process(PoolWorker-4, started daemon)>)\n     92     def run(self):\n     93         '''\n     94         Method to be run in sub-process; can be overridden in sub-class\n     95         '''\n     96         if self._target:\n---> 97             self._target(*self._args, **self._kwargs)\n        self._target = <function worker at 0x1058b9938>\n        self._args = (<billiard.queues.SimpleQueue object at 0x1058cb690>, <billiard.queues.SimpleQueue object at 0x1058cb7d0>, <function process_initializer at 0x105d1c140>, (<Celery default:0x105d1b5d0>, 'Vladislavs-MacBook-Air.local'), None, None)\n        self._kwargs = {}\n     98 \n     99     def start(self):\n    100         '''\n    101         Start child process\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/billiard/pool.py in worker(inqueue=<billiard.queues.SimpleQueue object>, outqueue=<billiard.queues.SimpleQueue object>, initializer=<function process_initializer>, initargs=(<Celery default:0x105d1b5d0>, 'Vladislavs-MacBook-Air.local'), maxtasks=None, sentinel=None)\n    293             break\n    294 \n    295         job, i, func, args, kwds = task\n    296         put((ACK, (job, i, time.time(), pid)))\n    297         try:\n--> 298             result = (True, func(*args, **kwds))\n        result = undefined\n        func = <function _fast_trace_task at 0x105d18de8>\n        args = ('quast_app.tasks.start_quast', 'e54b3b1d-3649-4cb4-bf03-58f04953c4cc', ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),), {}, {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),), 'expires': None, 'id': 'e54b3b1d-3649-4cb4-bf03-58f04953c4cc', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True})\n        kwds = {}\n    299         except Exception:\n    300             result = (False, ExceptionInfo())\n    301         try:\n    302             put((READY, (job, i, result)))\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in _fast_trace_task(task='quast_app.tasks.start_quast', uuid='e54b3b1d-3649-4cb4-bf03-58f04953c4cc', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'e54b3b1d-3649-4cb4-bf03-58f04953c4cc', 'is_eager': False, ...})\n    307 \n    308 \n    309 def _fast_trace_task(task, uuid, args, kwargs, request={}):\n    310     # setup_worker_optimizations will point trace_task_ret to here,\n    311     # so this is the function used in the worker.\n--> 312     return _tasks[task].__trace__(uuid, args, kwargs, request)[0]\n        task.__trace__ = undefined\n        uuid = 'e54b3b1d-3649-4cb4-bf03-58f04953c4cc'\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),)\n        kwargs = {}\n        request = {'retries': 0, 'task': 'quast_app.tasks.start_quast', 'group': None, 'callbacks': None, 'errbacks': None, 'delivery_info': {'priority': 0, 'routing_key': u'celery', 'exchange': u'celery'}, 'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),), 'expires': None, 'id': 'e54b3b1d-3649-4cb4-bf03-58f04953c4cc', 'is_eager': False, 'eta': None, 'kwargs': {}, 'hostname': 'Vladislavs-MacBook-Air.local', 'utc': True}\n    313 \n    314 \n    315 def eager_trace_task(task, uuid, args, kwargs, request=None, **opts):\n    316     opts.setdefault('eager', True)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py in trace_task(uuid='e54b3b1d-3649-4cb4-bf03-58f04953c4cc', args=((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),), kwargs={}, request={'args': ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),), 'callbacks': None, 'delivery_info': {'exchange': u'celery', 'priority': 0, 'routing_key': u'celery'}, 'errbacks': None, 'eta': None, 'expires': None, 'group': None, 'hostname': 'Vladislavs-MacBook-Air.local', 'id': 'e54b3b1d-3649-4cb4-bf03-58f04953c4cc', 'is_eager': False, ...})\n    219                     store_result(uuid, {'pid': pid,\n    220                                         'hostname': hostname}, STARTED)\n    221 \n    222                 # -*- TRACE -*-\n    223                 try:\n--> 224                     R = retval = fun(*args, **kwargs)\n        R = None\n        retval = undefined\n        args = ((['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], <QuastSession: 01 Dec 2012 15:55:16.872716 +0000>),)\n        kwargs = {}\n    225                     state = SUCCESS\n    226                 except Ignore, exc:\n    227                     I, R = Info(IGNORED, exc), ExceptionInfo(internal=True)\n    228                 except RetryTaskError, exc:\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py in start_quast((args=['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], command=u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'))\n     81     try:\n     82         if not settings.QUAST_DIRPATH in sys.path:\n     83             sys.path.insert(1, settings.QUAST_DIRPATH)\n     84         import quast\n     85 \n---> 86         result = quast.main(args[1:])\n        result = undefined\n        quast.main = <function main at 0x106773758>\n        args = ['/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output']\n     87 \n     88     except Exception as e:\n     89         trace_back = traceback.format_exc()\n     90         add_to_end = '\\n\\nUser email: ' + str(user_email) + \\\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/quast.py in main(args=[u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI2.fasta', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...55_16_872716_UTC/contigs_evaluation/ECOLI3.fasta', '-R', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...data/data_sets/e-coli-10k/reference_10K.fasta.gz', '-G', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/genes_10K.gff', '-O', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-website/../data/data_sets/e-coli-10k/operons_10K.gff', '--min-contig', '200', '-J', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC', '-o', u'/Users/vladsaveliev/Dropbox/bio/quast/quast-we...e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'], lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs')\n    447     if qconfig.reference:\n    448         ########################################################################\n    449         ### former PLANTAKOLYA, PLANTAGORA\n    450         ########################################################################\n    451         from libs import contigs_analyzer\n--> 452         nucmer_statuses = contigs_analyzer.do(qconfig.reference, contigs_fpaths, qconfig.cyclic, output_dirpath + '/contigs_reports', lib_dir, qconfig.draw_plots)\n        nucmer_statuses = undefined\n        contigs_analyzer.do = <function do at 0x108154de8>\n        output_dirpath = u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output'\n        lib_dir = '/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs'\n    453         for contigs_fpath in contigs_fpaths:\n    454             if nucmer_statuses[contigs_fpath] == contigs_analyzer.NucmerStatus.OK:\n    455                 aligned_fpaths.append(contigs_fpath)\n    456         reload(contigs_analyzer)\n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.py in do(reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta', filenames=[u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...16_872716_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...16_872716_UTC/full_output/corrected_input/ECOLI3'], cyclic=True, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_55_16_872716_UTC/full_output/contigs_reports', lib_dir='/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs', draw_plots=True)\n   1210         os.mkdir(nucmer_output_dir)\n   1211 \n   1212     from joblib import Parallel, delayed\n   1213     statuses_results_pairs = Parallel(n_jobs=len(filenames))(delayed(plantakolya_process)(\n   1214         cyclic, draw_plots, nucmer_output_dir, fname, id, myenv, output_dir, reference)\n-> 1215           for id, fname in enumerate(filenames))\n        id = undefined\n        filenames = [u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output/corrected_input/ECOLI2', u'/Users/vladsaveliev/Dropbox/bio/quast/data/results/65fbc0e6cff5140e3a7113fb7567e8a9/01_Dec_2012_15_55_16_872716_UTC/full_output/corrected_input/ECOLI3']\n   1216 \n   1217     # unzipping\n   1218     statuses, results = [x[0] for x in statuses_results_pairs], [x[1] for x in statuses_results_pairs]\n   1219 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/joblib/parallel.py in __call__(self=Parallel(n_jobs=2), iterable=<generator object <genexpr>>)\n    511         self.n_dispatched = 0\n    512         try:\n    513             for function, args, kwargs in iterable:\n    514                 self.dispatch(function, args, kwargs)\n    515 \n--> 516             self.retrieve()\n        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=2)>\n    517             # Make sure that we get a last message telling us we are done\n    518             elapsed_time = time.time() - self._start_time\n    519             self._print('Done %3i out of %3i | elapsed: %s finished',\n    520                         (len(self._output),\n\n    ---------------------------------------------------------------------------\n    Sub-process traceback:\n    ---------------------------------------------------------------------------\n    IndexError                                         Sat Dec  1 19:55:54 2012\nPID: 25602Python 2.7.1: /Users/vladsaveliev/Dropbox/bio/quast/quast-website/../virtualenv/bin/python\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya_process(cyclic=True, draw_plots=True, nucmer_output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...16_UTC/full_output/contigs_reports/nucmer_output', filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...16_872716_UTC/full_output/corrected_input/ECOLI2', id=0, myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_55_16_872716_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n   1159 \n   1160 \n   1161 def plantakolya_process(cyclic, draw_plots, nucmer_output_dir, filename, id, myenv, output_dir, reference):\n   1162     print '  ' + id_to_str(id) + os.path.basename(filename) + '...'\n   1163     nucmer_fname = os.path.join(nucmer_output_dir, os.path.basename(filename))\n-> 1164     nucmer_is_ok, result = plantakolya(cyclic, draw_plots, id, filename, nucmer_fname, myenv, output_dir, reference)\n   1165     clear_files(filename, nucmer_fname)\n   1166 \n   1167     return nucmer_is_ok, result\n   1168 \n\n...........................................................................\n/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_tool/libs/contigs_analyzer.pyc in plantakolya(cyclic=True, draw_plots=True, id=0, filename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...16_872716_UTC/full_output/corrected_input/ECOLI2', nucmerfilename=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res...full_output/contigs_reports/nucmer_output/ECOLI2', myenv={'Apple_PubSub_Socket_Render': '/tmp/launch-86kgP3/Render', 'Apple_Ubiquity_Message': '/tmp/launch-LwdM5A/Apple_Ubiquity_Message', 'CELERY_LOADER': 'djcelery.loaders.DjangoLoader', 'CELERY_LOG_FILE': '', 'CELERY_LOG_LEVEL': '30', 'CELERY_LOG_REDIRECT': '1', 'CELERY_LOG_REDIRECT_LEVEL': 'WARNING', 'CLICOLOR': '1', 'COMMAND_MODE': 'unix2003', 'DEVELOPMENT': '1', ...}, output_dir=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res..._15_55_16_872716_UTC/full_output/contigs_reports', reference=u'/Users/vladsaveliev/Dropbox/bio/quast/data/res.../full_output/corrected_input/reference_10K.fasta')\n    390         for line in tmp_coords_file:\n    391             header.append(line)\n    392             if line.startswith('====='):\n    393                 break\n    394 \n--> 395         coords_file.write(header[-2])\n    396         coords_file.write(header[-1])\n    397         for line in tmp_coords_file:\n    398             coords_file.write(line)\n    399         coords_file.close()\n\nIndexError: list index out of range\n___________________________________________________________________________\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "", "hidden": false}}, {"pk": 387, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "31ce074e-e2be-469f-a9bf-bb33bae94c0a", "date_done": "2012-12-01T16:05:13.187Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 388, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a913e077-8c5a-4333-a4d1-bfde8abcd286", "date_done": "2012-12-01T16:05:42.630Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 389, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "70dc7e14-1137-4402-928c-1227c3164f92", "date_done": "2012-12-01T16:06:04.543Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 390, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "1c47aecc-93a3-4aba-b938-e5da5c0955a8", "date_done": "2012-12-01T16:15:16.009Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 391, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9fcda3b2-2c4a-4a15-ba52-c09d394254ae", "date_done": "2012-12-01T16:15:34.545Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 392, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "38a3546f-2175-4d05-ac69-110a225ad6d9", "date_done": "2012-12-01T16:15:35.143Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 393, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "99034c7a-c5c1-42f7-bcae-d932fd50d5be", "date_done": "2012-12-01T16:15:38.698Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 394, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7602e2b4-f005-459c-b0e0-b01cc3e9600c", "date_done": "2012-12-01T16:16:01.005Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 395, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2f5fca31-f282-4204-a721-4ad33c2d462c", "date_done": "2012-12-01T16:16:13.458Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 396, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d7667e1f-26c1-47f7-a0a8-d5dc93f6de72", "date_done": "2012-12-01T16:16:32.817Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 397, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e0a9305a-fdf3-4011-b65d-98bf9abe30f6", "date_done": "2012-12-01T16:16:36.370Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 398, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d5a74ab4-4b73-4f85-b04a-d49f664400d4", "date_done": "2012-12-01T23:39:59.746Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 399, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "01f44164-2868-410b-9cd9-c22e4ccc1672", "date_done": "2012-12-02T01:18:56.525Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 400, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c7338a9b-045a-48b5-beb0-37f9bd5546ab", "date_done": "2012-12-02T01:18:57.759Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 401, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0da8263b-d8f3-473e-8789-b6aab98b89dd", "date_done": "2012-12-02T01:19:04.843Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 402, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9961b007-e9cc-4f8e-bfc2-015a63c663f9", "date_done": "2012-12-02T02:19:37.407Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 403, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c5abf71a-8f70-4b8a-a14a-5b90eb16365e", "date_done": "2012-12-02T02:25:22.024Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 404, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f12452ff-2e0a-4db1-a9b5-d146aa588e91", "date_done": "2012-12-02T02:25:24.438Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 405, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "ec68e54c-e813-41af-8ed0-41d6d4c14e1d", "date_done": "2012-12-02T02:28:00.076Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 406, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e7a83605-eb8a-4899-8a5f-4f5394841a7f", "date_done": "2012-12-02T02:29:12.993Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 407, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "fcc2a24d-c180-41a3-9249-7aaa5751b76b", "date_done": "2012-12-02T02:30:04.290Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs3zK9YDADbbBgc=", "result": "gAJjYmlsbGlhcmQuZXhjZXB0aW9ucwpXb3JrZXJMb3N0RXJyb3IKcQFVKFdvcmtlciBleGl0ZWQgcHJlbWF0dXJlbHkgKGV4aXRjb2RlOiAxKS5xAoVxA1JxBC4=", "hidden": false}}, {"pk": 408, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6019e2d8-6ee4-4647-8d00-a8b4880cfc87", "date_done": "2012-12-02T02:31:47.966Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 409, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "663f40d7-4620-4586-bc07-007eb1e7d475", "date_done": "2012-12-02T11:26:58.726Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 410, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "3aabf544-9a4f-4e04-83d2-8e11614c494e", "date_done": "2012-12-02T11:28:32.023Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 411, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2dc55aa1-32f7-4417-a591-dbe3755b1370", "date_done": "2012-12-04T21:23:15.948Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 412, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "205b35c1-390b-44c3-8d63-7ed64ee05610", "date_done": "2012-12-04T21:23:32.873Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 413, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a79a357f-951c-435b-ba85-5c1770858b31", "date_done": "2012-12-04T21:23:32.907Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 414, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b38f4536-f70c-4242-9dbd-7ee804fca81c", "date_done": "2012-12-04T21:23:34.503Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 415, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b6a11ebf-7248-4ab9-90cb-cb6ee2351e15", "date_done": "2012-12-04T21:23:42.677Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 416, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f64fae04-8357-4388-91b3-871f68aca982", "date_done": "2012-12-04T21:23:52.375Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 417, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "51e0ef35-7a86-4933-ab08-50be5f52fb50", "date_done": "2012-12-04T21:24:00.631Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 418, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "8857a90a-78a3-432f-8665-cfab36d47405", "date_done": "2012-12-04T21:24:28.658Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 419, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "dae4d361-2e1a-4e8c-8ac9-1944b3865055", "date_done": "2012-12-04T21:24:29.231Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 420, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "90c1a54d-c354-4b90-a992-2d338502d35e", "date_done": "2012-12-11T06:55:50.683Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 421, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "cb226fd4-4d68-4ea7-9087-cf0ac62e8e4f", "date_done": "2012-12-11T06:56:09.145Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 422, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "74f49585-5aed-4d02-a997-5e58ec22c06d", "date_done": "2012-12-13T14:34:32.486Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 75, in start_quast\n    if quast_session.user_session.email:\nAttributeError: 'UserSession' object has no attribute 'email'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUtJ1VzZXJTZXNzaW9uJyBvYmplY3QgaGFzIG5vIGF0dHJpYnV0ZSAnZW1haWwncQKFcQNScQQu", "hidden": false}}, {"pk": 423, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "8fc98ce3-90f0-415c-8e98-cb6bc791f392", "date_done": "2012-12-13T14:36:06.177Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 106, in start_quast\n    send_result_mail(my_email, to_me=True, add_to_end=add_to_end)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 67, in send_result_mail\n    '\\n\\n\\nIn case of any problems, feel free to reply to this message' +\nAttributeError: 'QuastSession' object has no attribute 'datas_et'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUxJ1F1YXN0U2Vzc2lvbicgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ2RhdGFzX2V0J3EChXEDUnEELg==", "hidden": false}}, {"pk": 424, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7e7bf9e8-de8a-4726-8901-719198381481", "date_done": "2012-12-13T14:37:10.364Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 425, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "dbac7a89-9344-4a03-b8e6-a3df5d2b117f", "date_done": "2012-12-13T17:49:45.502Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 75, in start_quast\n    if quast_session.user_session.get_email():\nAttributeError: 'NoneType' object has no attribute 'get_email'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUuJ05vbmVUeXBlJyBvYmplY3QgaGFzIG5vIGF0dHJpYnV0ZSAnZ2V0X2VtYWlsJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 426, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "b0d58b47-769d-49cd-8489-edf4c8584b5c", "date_done": "2012-12-13T17:52:06.326Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 75, in start_quast\n    if quast_session.user:\nAttributeError: 'NoneType' object has no attribute 'get_email'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUuJ05vbmVUeXBlJyBvYmplY3QgaGFzIG5vIGF0dHJpYnV0ZSAnZ2V0X2VtYWlsJ3EChXEDUnEELg==", "hidden": false}}, {"pk": 427, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "f3821a5a-41e8-48a0-b587-ffe887d921eb", "date_done": "2012-12-13T17:53:27.339Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 104, in start_quast\n    '\\n\\nArgs: ' + str(args)\nAttributeError: 'NoneType' object has no attribute 'session_key'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUwJ05vbmVUeXBlJyBvYmplY3QgaGFzIG5vIGF0dHJpYnV0ZSAnc2Vzc2lvbl9rZXkncQKFcQNScQQu", "hidden": false}}, {"pk": 428, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "69d8b16d-0d8d-452f-b8dd-8bce1d32bfe3", "date_done": "2012-12-13T17:59:14.107Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 37, in start_quast\n    def start_quast((args, quast_session, user_session)):\nValueError: too many values to unpack\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpWYWx1ZUVycm9yCnEBVRl0b28gbWFueSB2YWx1ZXMgdG8gdW5wYWNrcQKFcQNScQQu", "hidden": false}}, {"pk": 429, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b84aafca-36c0-4d08-a2b6-3804e896c580", "date_done": "2012-12-13T17:59:53.699Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 430, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7dcc1570-7c00-4e96-8685-cdb8d007b9d0", "date_done": "2012-12-13T18:07:44.503Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 431, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "283b4510-7f8a-459b-af1f-bffe4decf08d", "date_done": "2012-12-13T23:20:15.217Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 432, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "93f54879-9af3-4bed-a056-4c4733db7943", "date_done": "2012-12-13T23:50:17.746Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 433, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "ff91580b-4965-4479-93d6-89fe6d0eacf7", "date_done": "2012-12-13T23:50:34.661Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 434, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "483c0ebc-3acf-49be-a51f-a288e78586fa", "date_done": "2012-12-14T16:05:50.418Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 435, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "dcea92bf-c7e1-416a-b7b4-ea52297e6b81", "date_done": "2012-12-14T16:07:27.798Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 436, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "d29f2fdb-065c-492f-bd55-e5d06799888d", "date_done": "2012-12-14T16:07:48.367Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 437, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "39c29232-e28d-4a05-a976-35d1c863aeca", "date_done": "2012-12-14T16:26:27.527Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 438, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "4b1a6b46-3b69-46cf-9049-f1999672ecc1", "date_done": "2012-12-14T16:27:06.365Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nIndexError: list index out of range\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbmRleEVycm9yCnEBVRdsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChXEDUnEELg==", "hidden": false}}, {"pk": 439, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "5ea0dfdf-d00d-4380-a50b-7783d4c36056", "date_done": "2012-12-14T16:27:27.455Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 440, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "20cba6ac-566c-4ce5-b4b9-d3f85ac4d4f3", "date_done": "2012-12-14T18:05:51.187Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nIndexError: list index out of range\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbmRleEVycm9yCnEBVRdsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChXEDUnEELg==", "hidden": false}}, {"pk": 441, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4950fa61-738b-4bdc-9072-f4dfbb4ea42e", "date_done": "2012-12-14T18:05:58.320Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 442, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "559edcba-d449-47a4-9f97-85e2a0065822", "date_done": "2012-12-14T18:10:04.048Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 443, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "91f9cc73-2e45-4cd3-b261-80615b429f36", "date_done": "2012-12-14T22:36:21.002Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 444, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "674bf5c8-b403-4626-b766-5d7288b2ad64", "date_done": "2012-12-14T22:36:45.090Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nIndexError: list index out of range\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbmRleEVycm9yCnEBVRdsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChXEDUnEELg==", "hidden": false}}, {"pk": 445, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "711f2e5b-7cf5-4c17-bdcc-02334b12295e", "date_done": "2012-12-15T00:30:27.113Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 446, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "aa9f2a1d-42bc-4d02-aa1e-b9d7d586e0ca", "date_done": "2012-12-15T00:30:57.676Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 447, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "53c9447c-cd2a-4613-b5c9-879d88ef17e5", "date_done": "2012-12-15T00:42:31.657Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 448, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "96c8ccf8-f2fc-4df4-9d56-0302450da0f8", "date_done": "2012-12-15T00:43:37.384Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 449, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "4b07e394-e6dc-45ea-92f8-5529d9ddafe9", "date_done": "2012-12-15T00:46:52.617Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 450, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "47ae1e08-037c-4ce3-9470-f214a4fff44e", "date_done": "2012-12-15T00:50:10.136Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 451, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f79d25fb-082a-4a84-8fa1-f676eb998812", "date_done": "2012-12-15T00:51:45.824Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 452, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "28c059d6-9ead-4438-8819-4b626b17ab17", "date_done": "2012-12-15T00:56:11.950Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nIndexError: list index out of range\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbmRleEVycm9yCnEBVRdsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChXEDUnEELg==", "hidden": false}}, {"pk": 453, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e877358d-013c-4b4b-a6b4-c5be7aa66ed2", "date_done": "2012-12-15T14:50:50.612Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 454, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "80605c49-0f5f-42ac-b985-8aca365d2262", "date_done": "2012-12-15T15:20:03.559Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 455, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "e7c25c5b-83fa-4b44-943d-f06003950f77", "date_done": "2012-12-15T15:27:04.178Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 456, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "df404b84-7af8-4648-983a-4a15f10eee10", "date_done": "2012-12-15T15:32:11.940Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nIndexError: list index out of range\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpJbmRleEVycm9yCnEBVRdsaXN0IGluZGV4IG91dCBvZiByYW5nZXEChXEDUnEELg==", "hidden": false}}, {"pk": 457, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b4e764d6-5056-40af-89d4-b0ff3167dfea", "date_done": "2012-12-15T15:34:17.126Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 458, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "3caef977-cacb-4736-8f56-0d57994f8f8c", "date_done": "2012-12-15T15:37:25.607Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 459, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f8971fbd-eef0-41ef-9429-a060997d7f19", "date_done": "2012-12-15T15:51:52.862Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 460, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "dbf147fb-39d0-4b6e-b0e0-bc44e37278ca", "date_done": "2012-12-15T15:55:29.646Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 461, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a71a554a-b8ab-454a-90b7-ecfd719dc3f3", "date_done": "2012-12-15T16:24:06.618Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 462, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "eaf028e0-c5e6-4ab8-be82-99a471a5ea2f", "date_done": "2012-12-15T16:26:14.925Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 463, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9a53028b-6180-4014-a995-5c0387ac4eaa", "date_done": "2012-12-15T16:30:36.046Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 464, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "cd31833d-18af-4e12-97d3-c6b24e94b2e9", "date_done": "2012-12-15T16:36:19.312Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 465, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a27e74a8-9a94-4cd6-adb0-8e1d69d2c169", "date_done": "2012-12-15T16:48:14.966Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 466, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7547b61d-ba96-4d4f-a443-b3911e317d26", "date_done": "2012-12-15T16:48:39.102Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 467, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "9d512302-c6b4-4561-a422-75d2c0dde846", "date_done": "2012-12-15T16:51:14.676Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 468, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "7561874f-dafa-41b6-901f-cab07f1893eb", "date_done": "2012-12-15T16:55:24.910Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 469, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a33eaa29-d615-4388-83c6-fce9d4603ac1", "date_done": "2012-12-15T16:55:55.378Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 470, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "8e8369cd-eac4-43d4-9374-c1c80465ce5e", "date_done": "2012-12-15T16:59:36.993Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 471, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "34dd5bc8-029d-4273-a263-4670484bba7f", "date_done": "2012-12-15T16:59:55.091Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 472, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "ed1dfc3c-37b8-475c-ad5b-7c924147dc4e", "date_done": "2012-12-15T17:01:59.738Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 473, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "600d21fc-e339-4d73-afe5-1dd890742a82", "date_done": "2012-12-15T17:02:55.089Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 474, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f72b8cea-ed08-43eb-b970-b11c3ab2756d", "date_done": "2012-12-15T17:07:47.074Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 475, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2d7351f8-3b8a-4fea-9d5e-349aabc9f784", "date_done": "2012-12-15T20:19:56.614Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 476, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "602ead44-e008-4f04-ba73-f739d853911b", "date_done": "2012-12-15T20:28:32.964Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 477, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b8e94aad-e66d-499d-9007-322e11611de1", "date_done": "2012-12-15T20:29:11.307Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 478, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0ce61c7e-2665-40ef-8ff4-5db8465f8b7b", "date_done": "2012-12-15T21:29:53.521Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 479, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "fc078436-3f71-4c43-a985-3a076fad5121", "date_done": "2012-12-15T21:30:37.926Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 480, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "55ae3c11-cd3c-4f65-a16c-8f4cd7268eeb", "date_done": "2012-12-15T21:39:11.186Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 481, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "bbd45ba6-dfef-4648-8d44-6f3a04242e44", "date_done": "2012-12-15T21:50:58.352Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 482, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "29862d38-80e9-4468-9da9-b34ae833fb8e", "date_done": "2012-12-15T21:56:18.871Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 483, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6f0f51a2-cf86-4717-b8a0-76030da8365a", "date_done": "2012-12-15T23:22:55.567Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 484, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "49766326-e2d9-45cc-be6c-b01660b93629", "date_done": "2012-12-15T23:23:50.523Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 485, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "036575d5-54d5-4d07-9ac7-5e9d64fb4736", "date_done": "2012-12-15T23:24:28.942Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 486, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "a47dde24-68d9-4cab-9f56-7ea0c3ebc38d", "date_done": "2012-12-15T23:25:30.044Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 487, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "db55c0b2-2bc0-440f-bfea-ae8ce151e848", "date_done": "2012-12-15T23:26:17.933Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 488, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6f559f7f-c955-4bb4-adc0-bd8b5cc2db49", "date_done": "2012-12-15T23:42:47.159Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 489, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "8756f80d-5904-4b56-a02e-40f1206c2787", "date_done": "2012-12-15T23:48:18.057Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 490, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "0363659e-e291-4357-87f8-b6bfa29df504", "date_done": "2012-12-16T00:01:02.526Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 491, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "646ace7e-ae95-44bd-9e3e-9fa27308ac82", "date_done": "2012-12-16T00:08:58.240Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 492, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "072f350c-f6cd-4144-a721-99ef3cae93c0", "date_done": "2012-12-16T00:12:08.216Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 493, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "6d338a47-ee5b-4bc3-b558-82ca13b49a6f", "date_done": "2012-12-16T00:15:36.145Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 494, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "874db473-5951-4110-9a87-fb272ad4049a", "date_done": "2012-12-16T00:18:42.437Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 495, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "b50d91e9-9dcb-4f38-8936-59b09c30265f", "date_done": "2012-12-16T00:20:03.728Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 496, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "f76aec9a-e04a-4cd3-bc93-da52e49e7a48", "date_done": "2012-12-16T00:32:21.684Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 497, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "2ede5f73-8c82-4d02-bbd6-46aaa2ae16ed", "date_done": "2012-12-16T12:23:06.130Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 498, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "cbb553dc-dc07-4e68-907e-4f6702e8e233", "date_done": "2012-12-18T11:44:15.149Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 499, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c111fac6-8b50-45f6-8ba7-4caa62448907", "date_done": "2012-12-25T10:16:36.183Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 500, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "afb51a49-1836-4ac5-8538-752dcbf9f9e3", "date_done": "2012-12-26T17:31:59.610Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 501, "model": "djcelery.taskmeta", "fields": {"status": "FAILURE", "task_id": "676f79bf-4b3e-4a80-862b-b7ba60d01007", "date_done": "2012-12-27T16:58:31.742Z", "traceback": "Traceback (most recent call last):\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/virtualenv/lib/python2.7/site-packages/celery/task/trace.py\", line 224, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File \"/Users/vladsaveliev/Dropbox/bio/quast/quast-website/quast_app/tasks.py\", line 98, in start_quast\n    raise e\nAttributeError: class Fields has no attribute 'AMBIGUOUS'\n", "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": "gAJjZXhjZXB0aW9ucwpBdHRyaWJ1dGVFcnJvcgpxAVUpY2xhc3MgRmllbGRzIGhhcyBubyBhdHRyaWJ1dGUgJ0FNQklHVU9VUydxAoVxA1JxBC4=", "hidden": false}}, {"pk": 502, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "207da4f8-297f-4da9-83de-b8460931b84c", "date_done": "2012-12-27T17:00:13.458Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 503, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "38c84bd2-28b7-4cea-93ee-64d9899b6e1f", "date_done": "2013-01-20T14:42:55.644Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 504, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "41c6d765-1fdb-40a6-9094-e46a0ddd2b7f", "date_done": "2013-01-20T16:17:50.602Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 505, "model": "djcelery.taskmeta", "fields": {"status": "SUCCESS", "task_id": "c7f0d906-8d74-40f8-ac9d-0cc2da139b88", "date_done": "2013-01-20T16:30:10.068Z", "traceback": null, "meta": "eJxrYKotZAzlSM7IzEkpSs2LLdYDADcIBhY=", "result": 0, "hidden": false}}, {"pk": 23, "model": "quast_app.user", "fields": {"password": "AqFck2Mq9jZa", "input_dirname": "1_1.com", "email": "1@1.com", "default_data_set": null}}, {"pk": 24, "model": "quast_app.user", "fields": {"password": "ExQdWjJSu5t4", "input_dirname": "2_2.com", "email": "2@2.com", "default_data_set": null}}, {"pk": 25, "model": "quast_app.user", "fields": {"password": "QGqAqKwQXacS", "input_dirname": "3_3.com", "email": "3@3.com", "default_data_set": null}}, {"pk": 26, "model": "quast_app.user", "fields": {"password": "Ssj6cdc439aG", "input_dirname": "4_4.com", "email": "4@4.com", "default_data_set": null}}, {"pk": 27, "model": "quast_app.user", "fields": {"password": "aCDA5UWUsMMD", "input_dirname": "5_5.com", "email": "5@5.com", "default_data_set": null}}, {"pk": 28, "model": "quast_app.user", "fields": {"password": "pd5fCzgaMgQk", "input_dirname": "6_6.com", "email": "6@6.com", "default_data_set": null}}, {"pk": 29, "model": "quast_app.user", "fields": {"password": "3WWkHAdNThk3", "input_dirname": "7_7.com", "email": "7@7.com", "default_data_set": 5}}, {"pk": 30, "model": "quast_app.user", "fields": {"password": "nzZExmk4ZPaw", "input_dirname": "vladislav.sav_gmail.com", "email": "vladislav.sav@gmail.com", "default_data_set": 10}}, {"pk": 31, "model": "quast_app.user", "fields": {"password": "S7YBr1NCWhrk", "input_dirname": "nod.only_gmail.com", "email": "nod.only@gmail.com", "default_data_set": null}}, {"pk": 32, "model": "quast_app.user", "fields": {"password": "HrdpjALGRWtT", "input_dirname": "vladsaveliev_me.com", "email": "vladsaveliev@me.com", "default_data_set": null}}, {"pk": 1, "model": "quast_app.usersession", "fields": {"session_key": "06ed3c2f50ac9fb1d77c2e5d176f50ed", "input_dirname": "06ed3c2f50ac9fb1d77c2e5d176f50ed", "user": null, "default_data_set": null}}, {"pk": 2, "model": "quast_app.usersession", "fields": {"session_key": "92dc2016faf78bd351f17de58721f4f2", "input_dirname": "92dc2016faf78bd351f17de58721f4f2", "user": null, "default_data_set": null}}, {"pk": 3, "model": "quast_app.usersession", "fields": {"session_key": "35bc24b9dce0520f37f6dbef2a2bfa7c", "input_dirname": "35bc24b9dce0520f37f6dbef2a2bfa7c", "user": null, "default_data_set": null}}, {"pk": 4, "model": "quast_app.usersession", "fields": {"session_key": "6453c3cc332a41e9dcd3407318f5cd04", "input_dirname": "6453c3cc332a41e9dcd3407318f5cd04", "user": null, "default_data_set": null}}, {"pk": 5, "model": "quast_app.usersession", "fields": {"session_key": "361aa36802e1a9cde34550359c046f43", "input_dirname": "361aa36802e1a9cde34550359c046f43", "user": null, "default_data_set": null}}, {"pk": 6, "model": "quast_app.usersession", "fields": {"session_key": "305034655494f38ea9c9599226f50c99", "input_dirname": "305034655494f38ea9c9599226f50c99", "user": null, "default_data_set": null}}, {"pk": 7, "model": "quast_app.usersession", "fields": {"session_key": "4ade9de4585c8c83700e533bd6323c4c", "input_dirname": "4ade9de4585c8c83700e533bd6323c4c", "user": null, "default_data_set": null}}, {"pk": 8, "model": "quast_app.usersession", "fields": {"session_key": "4d45ca3eb57dfda20f4c132996375bb2", "input_dirname": "4d45ca3eb57dfda20f4c132996375bb2", "user": null, "default_data_set": null}}, {"pk": 10, "model": "quast_app.usersession", "fields": {"session_key": "b4f6b65bcf3d1fabc956320bc9d1f211", "input_dirname": "b4f6b65bcf3d1fabc956320bc9d1f211", "user": null, "default_data_set": null}}, {"pk": 11, "model": "quast_app.usersession", "fields": {"session_key": "67b70bcad97b123edebf934e821272a3", "input_dirname": "67b70bcad97b123edebf934e821272a3", "user": null, "default_data_set": null}}, {"pk": 12, "model": "quast_app.usersession", "fields": {"session_key": "6ed1efba8de31b968d8f1c6cdfc29296", "input_dirname": "6ed1efba8de31b968d8f1c6cdfc29296", "user": null, "default_data_set": null}}, {"pk": 13, "model": "quast_app.usersession", "fields": {"session_key": "18391a0f3edf41847ed510bfa0c70760", "input_dirname": "18391a0f3edf41847ed510bfa0c70760", "user": null, "default_data_set": null}}, {"pk": 15, "model": "quast_app.usersession", "fields": {"session_key": "9d1b3310a37068643aeefecb44dd8c1d", "input_dirname": "9d1b3310a37068643aeefecb44dd8c1d", "user": null, "default_data_set": null}}, {"pk": 16, "model": "quast_app.usersession", "fields": {"session_key": "5232fdda7b37e3e7d763be03d756edfd", "input_dirname": "5232fdda7b37e3e7d763be03d756edfd", "user": null, "default_data_set": null}}, {"pk": 22, "model": "quast_app.usersession", "fields": {"session_key": "1666ad6e51ec89567f9b50aa8330f3ee", "input_dirname": "1666ad6e51ec89567f9b50aa8330f3ee", "user": 24, "default_data_set": null}}, {"pk": 23, "model": "quast_app.usersession", "fields": {"session_key": "6007f6e790e2d1cde99f95576821393f", "input_dirname": "6007f6e790e2d1cde99f95576821393f", "user": 23, "default_data_set": null}}, {"pk": 24, "model": "quast_app.usersession", "fields": {"session_key": "65fbc0e6cff5140e3a7113fb7567e8a9", "input_dirname": "65fbc0e6cff5140e3a7113fb7567e8a9", "user": 30, "default_data_set": 10}}, {"pk": 25, "model": "quast_app.usersession", "fields": {"session_key": "f53d1fe8c0e19d47f04df0240a1e4e1c", "input_dirname": "f53d1fe8c0e19d47f04df0240a1e4e1c", "user": 25, "default_data_set": null}}, {"pk": 26, "model": "quast_app.usersession", "fields": {"session_key": "a430b40e74f62708fee68a4228476aea", "input_dirname": "a430b40e74f62708fee68a4228476aea", "user": 25, "default_data_set": null}}, {"pk": 27, "model": "quast_app.usersession", "fields": {"session_key": "b2e56f9a902acc65ec29c070d9da26f2", "input_dirname": "b2e56f9a902acc65ec29c070d9da26f2", "user": 26, "default_data_set": null}}, {"pk": 28, "model": "quast_app.usersession", "fields": {"session_key": "09581ca30f76fba50fa8ab1dc1fa7e09", "input_dirname": "09581ca30f76fba50fa8ab1dc1fa7e09", "user": 26, "default_data_set": null}}, {"pk": 29, "model": "quast_app.usersession", "fields": {"session_key": "544e86047a01d2f684a14fdc13a3b64c", "input_dirname": "544e86047a01d2f684a14fdc13a3b64c", "user": 27, "default_data_set": null}}, {"pk": 30, "model": "quast_app.usersession", "fields": {"session_key": "ec823cb4b1d9e72251316bc6456977ba", "input_dirname": "ec823cb4b1d9e72251316bc6456977ba", "user": 28, "default_data_set": null}}, {"pk": 31, "model": "quast_app.usersession", "fields": {"session_key": "a62214f408c583918d5d8b6e49b49860", "input_dirname": "a62214f408c583918d5d8b6e49b49860", "user": 28, "default_data_set": null}}, {"pk": 32, "model": "quast_app.usersession", "fields": {"session_key": "d5b742ba14c98476115ad48da5174532", "input_dirname": "d5b742ba14c98476115ad48da5174532", "user": 29, "default_data_set": 5}}, {"pk": 33, "model": "quast_app.usersession", "fields": {"session_key": "1938be2639e2a9f11d73df6fc61ac03c", "input_dirname": "1938be2639e2a9f11d73df6fc61ac03c", "user": null, "default_data_set": null}}, {"pk": 34, "model": "quast_app.usersession", "fields": {"session_key": "07e9493f8510e3709d72c4ba86bba27a", "input_dirname": "07e9493f8510e3709d72c4ba86bba27a", "user": null, "default_data_set": null}}, {"pk": 1, "model": "quast_app.dataset", "fields": {"dirname": "e-coli-10k", "name": "E. coli, first 10K", "operons_fname": "operons_10K.gff", "genes_fname": "genes_10K.gff", "reference_fname": "reference_10K.fasta.gz", "remember": true}}, {"pk": 2, "model": "quast_app.dataset", "fields": {"dirname": "e-coli", "name": "E. coli", "operons_fname": "operons.gff", "genes_fname": "genes.gff", "reference_fname": "reference.fasta.gz", "remember": true}}, {"pk": 3, "model": "quast_app.dataset", "fields": {"dirname": "05_sep_2012_022059154681", "name": "05_Sep_2012_02:20:59.154681", "operons_fname": null, "genes_fname": null, "reference_fname": null, "remember": false}}, {"pk": 4, "model": "quast_app.dataset", "fields": {"dirname": "08_oct_2012_170629379818", "name": "08_Oct_2012_17:06:29.379818", "operons_fname": null, "genes_fname": null, "reference_fname": null, "remember": false}}, {"pk": 5, "model": "quast_app.dataset", "fields": {"dirname": "kkk", "name": "kkk", "operons_fname": null, "genes_fname": null, "reference_fname": null, "remember": true}}, {"pk": 6, "model": "quast_app.dataset", "fields": {"dirname": "fff", "name": "fff", "operons_fname": null, "genes_fname": null, "reference_fname": null, "remember": true}}, {"pk": 7, "model": "quast_app.dataset", "fields": {"dirname": "19_nov_2012_171547289789", "name": "19_Nov_2012_17:15:47.289789", "operons_fname": null, "genes_fname": null, "reference_fname": null, "remember": false}}, {"pk": 8, "model": "quast_app.dataset", "fields": {"dirname": "20_nov_2012_230932816308", "name": "20_Nov_2012_23:09:32.816308", "operons_fname": null, "genes_fname": null, "reference_fname": "reference_10K.fasta", "remember": false}}, {"pk": 9, "model": "quast_app.dataset", "fields": {"dirname": "lol", "name": "lol", "operons_fname": null, "genes_fname": null, "reference_fname": "reference.fa.gz", "remember": true}}, {"pk": 10, "model": "quast_app.dataset", "fields": {"dirname": "test", "name": "Test", "operons_fname": null, "genes_fname": "genes_1K.gff", "reference_fname": "reference_1K.fa.gz", "remember": true}}, {"pk": 1, "model": "quast_app.contigsfile", "fields": {"file_index": "fb104b42becf8617fea82a5c249e4d4e", "user_session": 1, "fname": "ECOLI2.fasta"}}, {"pk": 2, "model": "quast_app.contigsfile", "fields": {"file_index": "d930d61f02bd588697b2c7febd26a32", "user_session": 1, "fname": "ECOLI6.fasta"}}, {"pk": 3, "model": "quast_app.contigsfile", "fields": {"file_index": "762a979e8d9dade050607e76bd2e1699", "user_session": 1, "fname": "ECOLI3.fasta"}}, {"pk": 4, "model": "quast_app.contigsfile", "fields": {"file_index": "5a700154ef71b26e5aefc4faa912d680", "user_session": 2, "fname": "assembly_10K_1.fasta"}}, {"pk": 5, "model": "quast_app.contigsfile", "fields": {"file_index": "d180428b327fa864bd17624802e125cf", "user_session": 2, "fname": "assembly_10K_2.fasta"}}, {"pk": 6, "model": "quast_app.contigsfile", "fields": {"file_index": "73281dc93fe9a90e450b85f7df1311ec", "user_session": 3, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 7, "model": "quast_app.contigsfile", "fields": {"file_index": "233fff916d17043d2681b3c0287e5e00", "user_session": 3, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 8, "model": "quast_app.contigsfile", "fields": {"file_index": "69a21ae5c5dd91228db3dcd9870837ff", "user_session": 4, "fname": "ECOLI2.fasta"}}, {"pk": 11, "model": "quast_app.contigsfile", "fields": {"file_index": "d7591db4b4040296a2ad8d4e7788f02b", "user_session": 10, "fname": "assembly_10K_1.fasta"}}, {"pk": 12, "model": "quast_app.contigsfile", "fields": {"file_index": "d8765579995e4a6f20d45b9d52296eb9", "user_session": 10, "fname": "assembly_10K_2.fasta"}}, {"pk": 13, "model": "quast_app.contigsfile", "fields": {"file_index": "892f0fbd4e67721ea96c7100e0a4d15b", "user_session": 11, "fname": "assembly_10K_2.fasta"}}, {"pk": 14, "model": "quast_app.contigsfile", "fields": {"file_index": "658e37d854c58a511932f5f6fa626770", "user_session": 11, "fname": "assembly_10K_1.fasta"}}, {"pk": 15, "model": "quast_app.contigsfile", "fields": {"file_index": "5729a926b729a73446a891d4f02725ff", "user_session": 12, "fname": "assembly_10K_1.fasta"}}, {"pk": 16, "model": "quast_app.contigsfile", "fields": {"file_index": "5f7a52e36238eb6a5be00a14279d648b", "user_session": 12, "fname": "assembly_10K_2.fasta"}}, {"pk": 29, "model": "quast_app.contigsfile", "fields": {"file_index": "872f42549a580ae636cd9c4665ad088c", "user_session": 6, "fname": "ECOLI2.fasta"}}, {"pk": 32, "model": "quast_app.contigsfile", "fields": {"file_index": "8814fd420637337d6178f5d81223e3d1", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 33, "model": "quast_app.contigsfile", "fields": {"file_index": "5232ed8d152df65e7554e137e9513dba", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 34, "model": "quast_app.contigsfile", "fields": {"file_index": "e1f32ca472fe1a4590663451e9b8a259", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 35, "model": "quast_app.contigsfile", "fields": {"file_index": "4e27db118666bd494c734e6be090ebe6", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 36, "model": "quast_app.contigsfile", "fields": {"file_index": "ede9808d4db049f7655c2573dfa64a5b", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 37, "model": "quast_app.contigsfile", "fields": {"file_index": "8c5ccbc0be6f609f0a5e8525cad185c0", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 38, "model": "quast_app.contigsfile", "fields": {"file_index": "c2ab7f96675b226ad77eaf1389b44cec", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 39, "model": "quast_app.contigsfile", "fields": {"file_index": "227a0b6b5f3c9e02e028baed76d8e6dc", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 40, "model": "quast_app.contigsfile", "fields": {"file_index": "3b8c4ea3e0c8fa12733f6b1ff6ec2be3", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 41, "model": "quast_app.contigsfile", "fields": {"file_index": "cb5111837b6ba358a7cd1a78d4489f6c", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 42, "model": "quast_app.contigsfile", "fields": {"file_index": "a2f198006ea2e59fdcdd4099dcc783b4", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 43, "model": "quast_app.contigsfile", "fields": {"file_index": "ddf8bd465512128c46a39e4d93869857", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 44, "model": "quast_app.contigsfile", "fields": {"file_index": "18d4f8aa654f4ae55a2ae0436ae0e780", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 45, "model": "quast_app.contigsfile", "fields": {"file_index": "d60a6d44f6d0d37434e2a22d4dc6fee7", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 46, "model": "quast_app.contigsfile", "fields": {"file_index": "13df6ecbff71f5cb0c915fc99f70510d", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 47, "model": "quast_app.contigsfile", "fields": {"file_index": "241a85d3745789a91c24ac646e70c679", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 48, "model": "quast_app.contigsfile", "fields": {"file_index": "b399dfe9b5c8377f24991e21259fba11", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 49, "model": "quast_app.contigsfile", "fields": {"file_index": "5b78708657e8ceab4a7934c4e3aeb5c3", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 52, "model": "quast_app.contigsfile", "fields": {"file_index": "8530d5184c9e98f6512e3d853d4020ad", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 53, "model": "quast_app.contigsfile", "fields": {"file_index": "afcfff6467a9535344c494939aa74dd1", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 54, "model": "quast_app.contigsfile", "fields": {"file_index": "6d330dc0be091d5ec8d8f9e8c93f040a", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 55, "model": "quast_app.contigsfile", "fields": {"file_index": "94df09bb4b05b03a609c2781ab02d81a", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 56, "model": "quast_app.contigsfile", "fields": {"file_index": "3e0e61b62573362272e21f78c3cf8378", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 57, "model": "quast_app.contigsfile", "fields": {"file_index": "ba0597cf7054d063406442a52e1b77cd", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 58, "model": "quast_app.contigsfile", "fields": {"file_index": "b385e47723ec2e2d6cefa6ffc41a26af", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 59, "model": "quast_app.contigsfile", "fields": {"file_index": "d5572ef87b321e53e19354bad01c2ce5", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 60, "model": "quast_app.contigsfile", "fields": {"file_index": "8b96fa292e09650fe72603f4f5ddd5ae", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 61, "model": "quast_app.contigsfile", "fields": {"file_index": "89bc01dfceed5b005ffc52dd14716ce1", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 62, "model": "quast_app.contigsfile", "fields": {"file_index": "7ce5414f0f6c0d9a4e9358486c78c86", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 63, "model": "quast_app.contigsfile", "fields": {"file_index": "f8dfe1a80be8f5030a555676a6a2f5ae", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 64, "model": "quast_app.contigsfile", "fields": {"file_index": "5e091854a8d37efac91eed351ebd7ee4", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 65, "model": "quast_app.contigsfile", "fields": {"file_index": "1d5c829d4509873e89915c7f8f73e0c7", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 66, "model": "quast_app.contigsfile", "fields": {"file_index": "5ca2a4a9eb33d68576b1595a16c4f294", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 67, "model": "quast_app.contigsfile", "fields": {"file_index": "cdd6e805099a441c05f2f98fa68bcd8b", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 68, "model": "quast_app.contigsfile", "fields": {"file_index": "61af3f8053e6c1c2c3d17d0f18bf9791", "user_session": null, "fname": "ECOLI3.fasta__2"}}, {"pk": 69, "model": "quast_app.contigsfile", "fields": {"file_index": "5416d121268429b54fc0ccd07711dfcf", "user_session": null, "fname": "ECOLI6.fasta__2"}}, {"pk": 70, "model": "quast_app.contigsfile", "fields": {"file_index": "d21d934a98f080ffea9c423281ebff6e", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 71, "model": "quast_app.contigsfile", "fields": {"file_index": "39775ea7a9c9683f79dfdddb258e3702", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 72, "model": "quast_app.contigsfile", "fields": {"file_index": "772a2d8b42dc04cdc3b63e04a5586152", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 73, "model": "quast_app.contigsfile", "fields": {"file_index": "84512f3aaa2af72fdd3d9690660043b3", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 74, "model": "quast_app.contigsfile", "fields": {"file_index": "e8bde30769cee9c06a53e8054adb009a", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 75, "model": "quast_app.contigsfile", "fields": {"file_index": "296832e93f13cd78d8bd7b8aa1a3e2e1", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 76, "model": "quast_app.contigsfile", "fields": {"file_index": "69834f1babe111d0c2165de93b40d409", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 77, "model": "quast_app.contigsfile", "fields": {"file_index": "92586e860a35698aaaf598abddd6940", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 78, "model": "quast_app.contigsfile", "fields": {"file_index": "d909c2fa3e18add952579a9a238f2214", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 79, "model": "quast_app.contigsfile", "fields": {"file_index": "2607338ac8e454b7e29525b43c3d8da7", "user_session": null, "fname": "ECOLI3.fasta__2"}}, {"pk": 80, "model": "quast_app.contigsfile", "fields": {"file_index": "fe587312d6c4c2431b2c094eba7e82d0", "user_session": null, "fname": "ECOLI6.fasta__2"}}, {"pk": 81, "model": "quast_app.contigsfile", "fields": {"file_index": "1c0cebd69ef531c95627dd167dee8a8c", "user_session": null, "fname": "ECOLI7.fasta__2"}}, {"pk": 82, "model": "quast_app.contigsfile", "fields": {"file_index": "c59c78dfe2ee7b99547d09712751236d", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 83, "model": "quast_app.contigsfile", "fields": {"file_index": "ad6d8837aac972bb9eab451fc84a343b", "user_session": null, "fname": "operons_10K.gff"}}, {"pk": 84, "model": "quast_app.contigsfile", "fields": {"file_index": "e74dbc7e1ce2dd6ca1a160019c62ec31", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 85, "model": "quast_app.contigsfile", "fields": {"file_index": "38667cd523f18487e9a45f487a30e92d", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 86, "model": "quast_app.contigsfile", "fields": {"file_index": "f6d02cab37493d1523d2f5497c71ed85", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 87, "model": "quast_app.contigsfile", "fields": {"file_index": "a2f3651ab4d073173f6024b3c5f412f5", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 88, "model": "quast_app.contigsfile", "fields": {"file_index": "d8b2a14000e9fdace3ace707b02eb081", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 89, "model": "quast_app.contigsfile", "fields": {"file_index": "6fac216cb7bfac538f31fb041adf7163", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 90, "model": "quast_app.contigsfile", "fields": {"file_index": "4c58cae2053f0e28e28783a9b070e5b6", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 91, "model": "quast_app.contigsfile", "fields": {"file_index": "395a39792f0e341fb349c5bfe9e01800", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 92, "model": "quast_app.contigsfile", "fields": {"file_index": "19bde2bf07d3ab1a3e919d08b4a027a5", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 93, "model": "quast_app.contigsfile", "fields": {"file_index": "fd38a387d37419a8b9b3f6476e91784e", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 94, "model": "quast_app.contigsfile", "fields": {"file_index": "f4f5f19fb7d7d7ac3f3fc655f27e66a4", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 95, "model": "quast_app.contigsfile", "fields": {"file_index": "d9e2099d59331f9f53851323b9b86e59", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 96, "model": "quast_app.contigsfile", "fields": {"file_index": "3779c8911e2f2f4594627970c0652f79", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 97, "model": "quast_app.contigsfile", "fields": {"file_index": "1bcda1945d4a03ba51e7c68fa5d6e4bb", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 98, "model": "quast_app.contigsfile", "fields": {"file_index": "571d6851120ebbaed5a128b702456956", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 99, "model": "quast_app.contigsfile", "fields": {"file_index": "46f2670a2345e8aa3c66ff462d57de28", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 100, "model": "quast_app.contigsfile", "fields": {"file_index": "413b074f10c1ee2fc4ff57db6bb589ab", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 101, "model": "quast_app.contigsfile", "fields": {"file_index": "ba8cf90623b39de9f87c7c57236bd9ff", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 102, "model": "quast_app.contigsfile", "fields": {"file_index": "431efefc301e22c75d05bbdc258b6061", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 103, "model": "quast_app.contigsfile", "fields": {"file_index": "217098c6ef57262522254f07ce3452a3", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 104, "model": "quast_app.contigsfile", "fields": {"file_index": "5ef7e38ef0d511e22fc149dec83c6da7", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 105, "model": "quast_app.contigsfile", "fields": {"file_index": "e49e518b6295fc00c28fd13d7470c67c", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 106, "model": "quast_app.contigsfile", "fields": {"file_index": "cff66c4c2363babea12ae2a4d1afe5d3", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 107, "model": "quast_app.contigsfile", "fields": {"file_index": "2aae00b0e1df3f582cbf82f0015a5a17", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 108, "model": "quast_app.contigsfile", "fields": {"file_index": "2ced94782bfa6b075e1b196af40c4195", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 109, "model": "quast_app.contigsfile", "fields": {"file_index": "2a2100b350b30ee72f38ab11345973bd", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 110, "model": "quast_app.contigsfile", "fields": {"file_index": "60c45a998e00eceb98a095f07bb4e4ee", "user_session": null, "fname": "ECOLI2.fasta"}}, {"pk": 111, "model": "quast_app.contigsfile", "fields": {"file_index": "4a90f62426d7be83756356ae3a97ac24", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 112, "model": "quast_app.contigsfile", "fields": {"file_index": "8a94878858f2b8d61b3d9e01b4c9864e", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 113, "model": "quast_app.contigsfile", "fields": {"file_index": "f63d0ed67ab03e0ce63070827b3b3b4", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 114, "model": "quast_app.contigsfile", "fields": {"file_index": "76dd80242a3d83a19a8c01eb4092c15f", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 115, "model": "quast_app.contigsfile", "fields": {"file_index": "fa8af263f3a6d9504a6999d6cddf3c12", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 116, "model": "quast_app.contigsfile", "fields": {"file_index": "5f13f88466857872ea732cb44699134d", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 117, "model": "quast_app.contigsfile", "fields": {"file_index": "aafa92751c887ba7a3ac9f6773e6f3b8", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 118, "model": "quast_app.contigsfile", "fields": {"file_index": "e41f5dfb1f42606b81a4605bc25d7441", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 119, "model": "quast_app.contigsfile", "fields": {"file_index": "c1241d998407417a67d08ccc45e49d8f", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 120, "model": "quast_app.contigsfile", "fields": {"file_index": "d8899469f4547c76ed6de8ce68f35366", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 121, "model": "quast_app.contigsfile", "fields": {"file_index": "7aa5461b689901326ec74f231788bdd", "user_session": null, "fname": "contigs.fasta"}}, {"pk": 122, "model": "quast_app.contigsfile", "fields": {"file_index": "35a6560bdc3b1c42e64d6634a09b71cf", "user_session": null, "fname": "scaffolds.fasta"}}, {"pk": 123, "model": "quast_app.contigsfile", "fields": {"file_index": "d355ed6adfa2f0990604355dfcd4e495", "user_session": null, "fname": "simplified_contigs.fasta"}}, {"pk": 124, "model": "quast_app.contigsfile", "fields": {"file_index": "ec2b520d1b1f46711ddc2756eb97b522", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 125, "model": "quast_app.contigsfile", "fields": {"file_index": "a59517b0e05f360464be0cc38ee86f96", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 126, "model": "quast_app.contigsfile", "fields": {"file_index": "5df91e84da46412b00de89e358e4772a", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 127, "model": "quast_app.contigsfile", "fields": {"file_index": "244b928238a27390c2449d4bec87a873", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 128, "model": "quast_app.contigsfile", "fields": {"file_index": "efa2a86b6130f6bdca2e8a0492cf2890", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 129, "model": "quast_app.contigsfile", "fields": {"file_index": "e921fa64fe2c28d626f366ba447d1914", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 130, "model": "quast_app.contigsfile", "fields": {"file_index": "4af623bb2438b3fde81fd9353d1f06c0", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 131, "model": "quast_app.contigsfile", "fields": {"file_index": "abae91a16b31b1207ed61df9174b7b17", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 132, "model": "quast_app.contigsfile", "fields": {"file_index": "c2f47176965b045d0b18022aa1f2347c", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 133, "model": "quast_app.contigsfile", "fields": {"file_index": "5b35beb782e168b9a0f07b9a1e7e74c5", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 134, "model": "quast_app.contigsfile", "fields": {"file_index": "f3c0f3155807bff63b04b95a2ac5e69a", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 135, "model": "quast_app.contigsfile", "fields": {"file_index": "3562d5a4c198663c33700d7713f89042", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 136, "model": "quast_app.contigsfile", "fields": {"file_index": "b8288121e2addb052f20e261668b5d", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 137, "model": "quast_app.contigsfile", "fields": {"file_index": "92a55bed2588a5423303fad6ce85ec95", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 138, "model": "quast_app.contigsfile", "fields": {"file_index": "8f98d304a2a6e2653526da9e90e6f2e3", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 139, "model": "quast_app.contigsfile", "fields": {"file_index": "bda50b131adce0a4d9a5b693653597fa", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 140, "model": "quast_app.contigsfile", "fields": {"file_index": "d5c132c3a34d19b2ce4099935c29e769", "user_session": null, "fname": "SPAdes_contigs_2.fasta__2"}}, {"pk": 141, "model": "quast_app.contigsfile", "fields": {"file_index": "6d91074b1f7292a1565c2fc5d8707951", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 142, "model": "quast_app.contigsfile", "fields": {"file_index": "92314861e8b36717b32f682af87f45e0", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 143, "model": "quast_app.contigsfile", "fields": {"file_index": "b5b55187611e802ba9e01a8e07f674a5", "user_session": null, "fname": "SPAdes_contigs_2.fasta__2"}}, {"pk": 144, "model": "quast_app.contigsfile", "fields": {"file_index": "1f7eb4349df3acfc56954d20a5c9c070", "user_session": null, "fname": "SPAdes_full_ecoli.fasta"}}, {"pk": 145, "model": "quast_app.contigsfile", "fields": {"file_index": "f7306bb1625525185cbc7d51d32d904e", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 146, "model": "quast_app.contigsfile", "fields": {"file_index": "14c704ff8ea72ea7e75502209225ba0b", "user_session": null, "fname": "SPAdes_full_ecoli.fasta"}}, {"pk": 147, "model": "quast_app.contigsfile", "fields": {"file_index": "d9aa74046268e05390ded19763e3dea3", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 148, "model": "quast_app.contigsfile", "fields": {"file_index": "c18c593b2924448c74505cff9328eab7", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 149, "model": "quast_app.contigsfile", "fields": {"file_index": "4c40def756a499978824e8a429db5745", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 150, "model": "quast_app.contigsfile", "fields": {"file_index": "11c1006f1b00d31101cab2626c8c7af5", "user_session": null, "fname": "allpaths_full_ecoli.fasta"}}, {"pk": 151, "model": "quast_app.contigsfile", "fields": {"file_index": "1518b413c882eb498f3c86b460ca2893", "user_session": null, "fname": "reference.fa.gz"}}, {"pk": 152, "model": "quast_app.contigsfile", "fields": {"file_index": "3ba45e8bb263371bd91a625e9af1d86f", "user_session": null, "fname": "allpaths_full_ecoli.fasta"}}, {"pk": 153, "model": "quast_app.contigsfile", "fields": {"file_index": "3f611219fd68c265b14966194490919c", "user_session": null, "fname": "allpaths_full_ecoli.fasta"}}, {"pk": 154, "model": "quast_app.contigsfile", "fields": {"file_index": "26c73bdbc593c9ad553d4610d96667c9", "user_session": null, "fname": "allpaths_full_ecoli.fasta"}}, {"pk": 155, "model": "quast_app.contigsfile", "fields": {"file_index": "e71955a313ed8aec71fd7fe8bd030630", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 156, "model": "quast_app.contigsfile", "fields": {"file_index": "661363da5e05588ec7a1730ca2f7a42f", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 157, "model": "quast_app.contigsfile", "fields": {"file_index": "b04248327b6b705c9528b61ea1f53e0f", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 158, "model": "quast_app.contigsfile", "fields": {"file_index": "3ce8d727509bb0eabb1ebe3a6ba3e62a", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 159, "model": "quast_app.contigsfile", "fields": {"file_index": "8f8045b606446c5af92d812eb4df858f", "user_session": null, "fname": "SPAdes_full_ecoli.fasta"}}, {"pk": 160, "model": "quast_app.contigsfile", "fields": {"file_index": "681a38e68abcb36b15e46be6de7b060d", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 161, "model": "quast_app.contigsfile", "fields": {"file_index": "42f03b6e118644280073a4f1ff5ef773", "user_session": null, "fname": "assembly_10K_1_where_nucmer_shall_fail.fasta"}}, {"pk": 162, "model": "quast_app.contigsfile", "fields": {"file_index": "2390e9cc66b0cbbdee278d789a7881b", "user_session": null, "fname": "not_matched_iter1_unpaired_longest.fasta"}}, {"pk": 163, "model": "quast_app.contigsfile", "fields": {"file_index": "5fed70e2f4342100d3cf773ca051fc4a", "user_session": null, "fname": "allpaths_full_ecoli.fasta"}}, {"pk": 164, "model": "quast_app.contigsfile", "fields": {"file_index": "a03a2f07be5aff71e10e630756299988", "user_session": null, "fname": "allpaths_full_ecoli.fasta"}}, {"pk": 165, "model": "quast_app.contigsfile", "fields": {"file_index": "157f05781cf49dd0e50a05fa22cb4d78", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 166, "model": "quast_app.contigsfile", "fields": {"file_index": "342fb41a4744b4bc4677c8efeb4ee7b1", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 167, "model": "quast_app.contigsfile", "fields": {"file_index": "34d8cb2d54c74bc227feeb9d6d0513df", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 168, "model": "quast_app.contigsfile", "fields": {"file_index": "f5149541995a6a861ed3974eb2938391", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 169, "model": "quast_app.contigsfile", "fields": {"file_index": "17c49f93e34fbc4edcc5176371c3c3a9", "user_session": null, "fname": "allpaths_full_ecoli.fasta"}}, {"pk": 170, "model": "quast_app.contigsfile", "fields": {"file_index": "b9e0a6d325b6e01a4c8dbd2d6c0e2d25", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 171, "model": "quast_app.contigsfile", "fields": {"file_index": "70ca5be31e38f5c4991406651c7446ae", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 172, "model": "quast_app.contigsfile", "fields": {"file_index": "cab7d419c185fd09dbac8d4dd7965bec", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 173, "model": "quast_app.contigsfile", "fields": {"file_index": "388d655b62cb8e14a149d635d0976f52", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 174, "model": "quast_app.contigsfile", "fields": {"file_index": "f9e89bf8eafb62184d6e56ac207f13e3", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 175, "model": "quast_app.contigsfile", "fields": {"file_index": "79bd508cf7c46d006abde01581639821", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 176, "model": "quast_app.contigsfile", "fields": {"file_index": "9bf657090fa3d748efd901fa6f13bfd5", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 177, "model": "quast_app.contigsfile", "fields": {"file_index": "5de7d2764b309779f5150244ca3d7f88", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 178, "model": "quast_app.contigsfile", "fields": {"file_index": "63a134fc1999bbb4ee4375730dcd7fa0", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 179, "model": "quast_app.contigsfile", "fields": {"file_index": "d1652a717e9a16a557e7f1186ab730f9", "user_session": null, "fname": "allpaths_full_ecoli.fasta"}}, {"pk": 180, "model": "quast_app.contigsfile", "fields": {"file_index": "3a5c4191eb52fad53fbf9a985bef96bc", "user_session": null, "fname": "ECOLI3.fasta"}}, {"pk": 181, "model": "quast_app.contigsfile", "fields": {"file_index": "b79691153ad6944c88bd61e51313082c", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 182, "model": "quast_app.contigsfile", "fields": {"file_index": "8a5306583e6396623142a1882be3c2bc", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 183, "model": "quast_app.contigsfile", "fields": {"file_index": "f7a5a4759355a6cb346b9630fa072c9e", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 184, "model": "quast_app.contigsfile", "fields": {"file_index": "4e7e8cdcf6d7b3766cd7cfe6bab1a560", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 185, "model": "quast_app.contigsfile", "fields": {"file_index": "67b98e9ecdb8a53eb9aa639d1a666582", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 186, "model": "quast_app.contigsfile", "fields": {"file_index": "85b5ece6bcba11dab62a6825a92fab33", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 187, "model": "quast_app.contigsfile", "fields": {"file_index": "42fe596b8fbba41fa3ceb06b672ccf58", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 188, "model": "quast_app.contigsfile", "fields": {"file_index": "e7559e2915a7568636690025794c4f4b", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 189, "model": "quast_app.contigsfile", "fields": {"file_index": "4fd007ab899ba3520c11c01d70d3ed56", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 190, "model": "quast_app.contigsfile", "fields": {"file_index": "901fe3346c6b83845d773af2072a103a", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 191, "model": "quast_app.contigsfile", "fields": {"file_index": "95d7bc2b3e12d0c31607b3c615af40e2", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 192, "model": "quast_app.contigsfile", "fields": {"file_index": "a06da98e710725e94b07a60efc355c37", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 193, "model": "quast_app.contigsfile", "fields": {"file_index": "4cf7c911897ff0c22e45728c5b9cd276", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 194, "model": "quast_app.contigsfile", "fields": {"file_index": "5fc7c7e4c02ebc2b0828e5af5b02f4e", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 195, "model": "quast_app.contigsfile", "fields": {"file_index": "4219a0e27f7b69e9019ad3df56df95c4", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 196, "model": "quast_app.contigsfile", "fields": {"file_index": "77ed5fbed8116f25220551607c7cbd82", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 197, "model": "quast_app.contigsfile", "fields": {"file_index": "fbcd78ac4d32f66698bd3b2701028c1c", "user_session": null, "fname": "SPAdes_contigs_2.fasta__2"}}, {"pk": 198, "model": "quast_app.contigsfile", "fields": {"file_index": "1dbe2e5346760ac9f7380455fc8e91fd", "user_session": null, "fname": "SPAdes_contigs_2.fasta__3"}}, {"pk": 199, "model": "quast_app.contigsfile", "fields": {"file_index": "ba27ab58499abba7a4afb377aa50344a", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 200, "model": "quast_app.contigsfile", "fields": {"file_index": "a153ef4c3b308f8311d307bb5ffc21d0", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 201, "model": "quast_app.contigsfile", "fields": {"file_index": "2031fc9c419fb5d2abcd23d6b0e25dd1", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 202, "model": "quast_app.contigsfile", "fields": {"file_index": "3c6f12f0c62a65fc7d55dfd114cdbaa5", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 203, "model": "quast_app.contigsfile", "fields": {"file_index": "419f32ee419ec47047c3c95628efdc19", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 204, "model": "quast_app.contigsfile", "fields": {"file_index": "db33cfbafabcb8bf7b473f49ebcfdb29", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 205, "model": "quast_app.contigsfile", "fields": {"file_index": "c16996e62b5b620d84aa3ec081d48069", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 206, "model": "quast_app.contigsfile", "fields": {"file_index": "dbae79e26002db83bd3bd5ed655c81c", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 207, "model": "quast_app.contigsfile", "fields": {"file_index": "f979fc482866f9098e95fc7482d99d98", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 208, "model": "quast_app.contigsfile", "fields": {"file_index": "27c5cb43aa4b95193a3e4db09d1350ef", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 209, "model": "quast_app.contigsfile", "fields": {"file_index": "416fd230ebfef041ed72396d737e3cf8", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 210, "model": "quast_app.contigsfile", "fields": {"file_index": "f88d1c03f062e67cfd01bd017928825", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 211, "model": "quast_app.contigsfile", "fields": {"file_index": "855f19daa09df6ead5063f005e6280e3", "user_session": null, "fname": "SPAdes_contigs_1_copy_of_previous.fasta"}}, {"pk": 212, "model": "quast_app.contigsfile", "fields": {"file_index": "eeecf81537033d9175388343bbd5f4f3", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 213, "model": "quast_app.contigsfile", "fields": {"file_index": "20a63d201e3aa504516e6ccc362747a5", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 214, "model": "quast_app.contigsfile", "fields": {"file_index": "66dd391ed778e40d9a6c7e3c339e98cb", "user_session": null, "fname": "SPAdes_contigs_1_copy_of_previous.fasta"}}, {"pk": 215, "model": "quast_app.contigsfile", "fields": {"file_index": "2486e61e62513908fd293e657622543f", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 216, "model": "quast_app.contigsfile", "fields": {"file_index": "ce39a2aa0ab321ccec0acd4ca69b75d9", "user_session": null, "fname": "SPAdes_contigs_1_copy_of_previous.fasta"}}, {"pk": 217, "model": "quast_app.contigsfile", "fields": {"file_index": "c67db5ddefdc0a9753e39a46ac433b1a", "user_session": null, "fname": "SPAdes_contigs_1_copy_of_previous.fasta"}}, {"pk": 218, "model": "quast_app.contigsfile", "fields": {"file_index": "630344bd5b4cd867ac6c07f4b4a8523b", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 219, "model": "quast_app.contigsfile", "fields": {"file_index": "93446c03560a775d07850450627241e5", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 220, "model": "quast_app.contigsfile", "fields": {"file_index": "eb9e4c21f1398f88aca028099fb3e8a9", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 221, "model": "quast_app.contigsfile", "fields": {"file_index": "3a8ea849d2fa201762be73630217698e", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 222, "model": "quast_app.contigsfile", "fields": {"file_index": "f9d822997ee75fdae6ec9b0179913f07", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 223, "model": "quast_app.contigsfile", "fields": {"file_index": "ff63517696d9e5230451043fadae9bb3", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 224, "model": "quast_app.contigsfile", "fields": {"file_index": "684117b5f735dcb7c12072efb681d932", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 225, "model": "quast_app.contigsfile", "fields": {"file_index": "a74086b95dd0507bda2f17f9b41584c7", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 226, "model": "quast_app.contigsfile", "fields": {"file_index": "6511a9a5011ff7308b85cb7e04b7224e", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 227, "model": "quast_app.contigsfile", "fields": {"file_index": "ea2ab217952e416ebbcd4579e28d7113", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 228, "model": "quast_app.contigsfile", "fields": {"file_index": "fec39d4e34c4c04f3c91758fc7ebc04", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 229, "model": "quast_app.contigsfile", "fields": {"file_index": "e3b79845d61e5f2473127dc7544b037", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 230, "model": "quast_app.contigsfile", "fields": {"file_index": "4e83c4cbd6b30a506563ed9f2d61bb59", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 231, "model": "quast_app.contigsfile", "fields": {"file_index": "b18bc5fc6f352b21a99e65315a9b6e66", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 232, "model": "quast_app.contigsfile", "fields": {"file_index": "2495836335141cec5c69c6788999047e", "user_session": null, "fname": "SPAdes_contigs_1_copy_of_previous.fasta"}}, {"pk": 233, "model": "quast_app.contigsfile", "fields": {"file_index": "44334db6e69050177e9573636ac713bd", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 234, "model": "quast_app.contigsfile", "fields": {"file_index": "8278add55df6121b6f5bb55da79a7846", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 235, "model": "quast_app.contigsfile", "fields": {"file_index": "d3b8e3eb12d4bcdab0909571f42c4346", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 236, "model": "quast_app.contigsfile", "fields": {"file_index": "541d2c1ea013d3a0558f7133bbfb4bde", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 237, "model": "quast_app.contigsfile", "fields": {"file_index": "8d956a072e5e89cf6edbfc733c4176b1", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 238, "model": "quast_app.contigsfile", "fields": {"file_index": "e3a32ba4fbcb5880572b4dd5b6fc0de0", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 239, "model": "quast_app.contigsfile", "fields": {"file_index": "ef9c6ce8e5c76d138f4b9b9191e25ca8", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 240, "model": "quast_app.contigsfile", "fields": {"file_index": "491a431a24522b68473e7064db0429f4", "user_session": null, "fname": "SPAdes_contigs_2_long_name_lol_name.fasta"}}, {"pk": 241, "model": "quast_app.contigsfile", "fields": {"file_index": "2698a10effca8b48f1ced1a346e55c88", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 242, "model": "quast_app.contigsfile", "fields": {"file_index": "caa1b8704e1ed40fff5e9f813f179b26", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 243, "model": "quast_app.contigsfile", "fields": {"file_index": "c3338226549b9420593083cab3a90a77", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 244, "model": "quast_app.contigsfile", "fields": {"file_index": "6a3bc8fff33e70348bfce165210c5e99", "user_session": null, "fname": "ECOLI6.fasta"}}, {"pk": 245, "model": "quast_app.contigsfile", "fields": {"file_index": "12597d962ba42e0fc2056c8b45488468", "user_session": null, "fname": "ECOLI7.fasta"}}, {"pk": 246, "model": "quast_app.contigsfile", "fields": {"file_index": "c5bec0849ce61e0a172e0f3bd2f55ceb", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 247, "model": "quast_app.contigsfile", "fields": {"file_index": "a03ff36b299e201cb73ec2606a43bb6d", "user_session": null, "fname": "SPAdes_contigs_1.fasta"}}, {"pk": 248, "model": "quast_app.contigsfile", "fields": {"file_index": "26e16634be03e984d244d064cb3c0a6", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 249, "model": "quast_app.contigsfile", "fields": {"file_index": "d3d66f4a25eee0214370a1361e5d35b0", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 250, "model": "quast_app.contigsfile", "fields": {"file_index": "66ab86f947db7b211db9f6aa5840a60", "user_session": null, "fname": "SPAdes_contigs_2.fasta"}}, {"pk": 251, "model": "quast_app.contigsfile", "fields": {"file_index": "bad3c8b8b5e0d0ba5dcb405251acbd32", "user_session": null, "fname": "assembly_10K_1_where_nucmer_shall_fail.fasta"}}, {"pk": 1, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": "a1c4eada-daee-4045-872d-65767a80cd09", "data_set": 1, "submitted": true, "caption": null, "link": null, "user": null, "date": "2012-08-16T14:15:31.422Z", "user_session": 1, "min_contig": null, "report_id": "16_Aug_2012_18:15:31.422617"}}, {"pk": 2, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": "f1a6a8be-8d9f-495d-8796-01929987cff2", "data_set": 2, "submitted": true, "caption": null, "link": null, "user": null, "date": "2012-08-16T17:05:58.867Z", "user_session": 1, "min_contig": null, "report_id": "16_Aug_2012_21:05:58.867397"}}, {"pk": 3, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": "c9a137ad-f0d8-44bb-bc27-b98a3ab9ac6b", "data_set": 1, "submitted": true, "caption": null, "link": null, "user": null, "date": "2012-08-31T00:47:56.109Z", "user_session": 2, "min_contig": null, "report_id": "31_Aug_2012_04:47:56.109015"}}, {"pk": 4, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": "ebac1f79-8a7b-4083-b95b-ed034157ddf7", "data_set": 3, "submitted": true, "caption": null, "link": null, "user": null, "date": "2012-09-04T22:20:59.154Z", "user_session": 3, "min_contig": null, "report_id": "05_Sep_2012_02:20:59.154681"}}, {"pk": 1251, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T21:57:56.370Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_21_57_56_370258"}}, {"pk": 1252, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:05:41.149Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_05_41_149135"}}, {"pk": 1254, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:07:36.729Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_07_36_729368"}}, {"pk": 1256, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:11:18.741Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_11_18_741727"}}, {"pk": 1257, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:20:25.385Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_20_25_385245"}}, {"pk": 1258, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:21:07.778Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_21_07_778339"}}, {"pk": 1259, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:21:10.336Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_21_10_336784"}}, {"pk": 1260, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:21:57.732Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_21_57_732726"}}, {"pk": 1261, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:22:23.099Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_22_23_099609"}}, {"pk": 1262, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:39:21.436Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_39_21_436813"}}, {"pk": 1263, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:39:41.889Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_39_41_889704"}}, {"pk": 1264, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T22:57:09.465Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_22_57_09_465574"}}, {"pk": 1265, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T23:03:37.870Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_23_03_37_870299"}}, {"pk": 1266, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T23:06:03.141Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_23_06_03_141460"}}, {"pk": 1267, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-15T23:18:13.729Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_23_18_13_729797"}}, {"pk": 1268, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "6f0f51a2-cf86-4717-b8a0-76030da8365a", "data_set": null, "submitted": true, "caption": "session", "link": "15_Dec_2012_23:22:38_548839_session", "user": 23, "date": "2012-12-15T23:22:38.548Z", "user_session": null, "min_contig": 500, "report_id": "15_Dec_2012_23_22_38_548839"}}, {"pk": 1270, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "49766326-e2d9-45cc-be6c-b01660b93629", "data_set": null, "submitted": true, "caption": "1@1.com", "link": "15_Dec_2012_23:23:33_389652_1-1-com", "user": 23, "date": "2012-12-15T23:23:33.389Z", "user_session": null, "min_contig": 500, "report_id": "15_Dec_2012_23_23_33_389652"}}, {"pk": 1273, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "036575d5-54d5-4d07-9ac7-5e9d64fb4736", "data_set": null, "submitted": true, "caption": "2@2.com", "link": "15_Dec_2012_23:24:12_956406_2-2-com", "user": 24, "date": "2012-12-15T23:24:12.956Z", "user_session": null, "min_contig": 500, "report_id": "15_Dec_2012_23_24_12_956406"}}, {"pk": 1276, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "a47dde24-68d9-4cab-9f56-7ea0c3ebc38d", "data_set": 1, "submitted": true, "caption": "", "link": "15_Dec_2012_23:25:15_937202", "user": 23, "date": "2012-12-15T23:25:15.937Z", "user_session": null, "min_contig": 200, "report_id": "15_Dec_2012_23_25_15_937202"}}, {"pk": 1287, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-15T23:31:10.845Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_23_31_10_845102"}}, {"pk": 1290, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-15T23:40:54.959Z", "user_session": null, "min_contig": null, "report_id": "15_Dec_2012_23_40_54_959550"}}, {"pk": 1291, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "6f559f7f-c955-4bb4-adc0-bd8b5cc2db49", "data_set": 1, "submitted": true, "caption": "", "link": "15_Dec_2012_23:42:32_189370", "user": 30, "date": "2012-12-15T23:42:32.189Z", "user_session": null, "min_contig": 200, "report_id": "15_Dec_2012_23_42_32_189370"}}, {"pk": 1294, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "8756f80d-5904-4b56-a02e-40f1206c2787", "data_set": 1, "submitted": true, "caption": "", "link": "15_Dec_2012_23:47:59_724029", "user": 30, "date": "2012-12-15T23:47:59.724Z", "user_session": null, "min_contig": 200, "report_id": "15_Dec_2012_23_47_59_724029"}}, {"pk": 1297, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "0363659e-e291-4357-87f8-b6bfa29df504", "data_set": null, "submitted": true, "caption": "session", "link": "16_Dec_2012_00:00:27_012585_session", "user": 25, "date": "2012-12-16T00:00:27.012Z", "user_session": null, "min_contig": 500, "report_id": "16_Dec_2012_00_00_27_012585"}}, {"pk": 1305, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "646ace7e-ae95-44bd-9e3e-9fa27308ac82", "data_set": 5, "submitted": true, "caption": "", "link": "16_Dec_2012_00:08:31_844172", "user": 26, "date": "2012-12-16T00:08:31.844Z", "user_session": null, "min_contig": 500, "report_id": "16_Dec_2012_00_08_31_844172"}}, {"pk": 1309, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "072f350c-f6cd-4144-a721-99ef3cae93c0", "data_set": 5, "submitted": true, "caption": "", "link": "16_Dec_2012_00:11:54_183951", "user": 26, "date": "2012-12-16T00:11:54.183Z", "user_session": null, "min_contig": 500, "report_id": "16_Dec_2012_00_11_54_183951"}}, {"pk": 1310, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 26, "date": "2012-12-16T00:12:06.576Z", "user_session": null, "min_contig": null, "report_id": "16_Dec_2012_00_12_06_576147"}}, {"pk": 1312, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "6d338a47-ee5b-4bc3-b558-82ca13b49a6f", "data_set": null, "submitted": true, "caption": "", "link": "16_Dec_2012_00:15:21_682236", "user": 27, "date": "2012-12-16T00:15:21.682Z", "user_session": null, "min_contig": 500, "report_id": "16_Dec_2012_00_15_21_682236"}}, {"pk": 1314, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "874db473-5951-4110-9a87-fb272ad4049a", "data_set": null, "submitted": true, "caption": "6", "link": "16_Dec_2012_00:18:31_508700_6", "user": 28, "date": "2012-12-16T00:18:31.508Z", "user_session": null, "min_contig": 500, "report_id": "16_Dec_2012_00_18_31_508700"}}, {"pk": 1316, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "b50d91e9-9dcb-4f38-8936-59b09c30265f", "data_set": 5, "submitted": true, "caption": "", "link": "16_Dec_2012_00:19:53_088145", "user": 28, "date": "2012-12-16T00:19:53.088Z", "user_session": null, "min_contig": 500, "report_id": "16_Dec_2012_00_19_53_088145"}}, {"pk": 1317, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 28, "date": "2012-12-16T00:20:02.030Z", "user_session": null, "min_contig": null, "report_id": "16_Dec_2012_00_20_02_030128"}}, {"pk": 1319, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 29, "date": "2012-12-16T00:24:42.141Z", "user_session": null, "min_contig": null, "report_id": "16_Dec_2012_00_24_42_141828"}}, {"pk": 1321, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 29, "date": "2012-12-16T00:27:00.155Z", "user_session": null, "min_contig": null, "report_id": "16_Dec_2012_00_27_00_155350"}}, {"pk": 1322, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 29, "date": "2012-12-16T00:28:54.094Z", "user_session": null, "min_contig": null, "report_id": "16_Dec_2012_00_28_54_094243"}}, {"pk": 1323, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 29, "date": "2012-12-16T00:29:07.492Z", "user_session": null, "min_contig": null, "report_id": "16_Dec_2012_00_29_07_492153"}}, {"pk": 1324, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "f76aec9a-e04a-4cd3-bc93-da52e49e7a48", "data_set": 5, "submitted": true, "caption": "", "link": "16_Dec_2012_00:32:06_865165", "user": 29, "date": "2012-12-16T00:32:06.865Z", "user_session": null, "min_contig": 500, "report_id": "16_Dec_2012_00_32_06_865165"}}, {"pk": 1325, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 29, "date": "2012-12-16T00:32:23.506Z", "user_session": null, "min_contig": null, "report_id": "16_Dec_2012_00_32_23_506908"}}, {"pk": 1326, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-16T11:42:33.310Z", "user_session": null, "min_contig": null, "report_id": "16_Dec_2012_11_42_33_310893"}}, {"pk": 1350, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "2ede5f73-8c82-4d02-bbd6-46aaa2ae16ed", "data_set": 10, "submitted": true, "caption": "reference and genes 1k", "link": "16_Dec_2012_12:19:30_442019_reference-and-genes-1k", "user": 30, "date": "2012-12-16T12:19:30.442Z", "user_session": null, "min_contig": 200, "report_id": "16_Dec_2012_12_19_30_442019"}}, {"pk": 1351, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-16T15:10:09.661Z", "user_session": 33, "min_contig": null, "report_id": "16_Dec_2012_15_10_09_661637"}}, {"pk": 1352, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "cbb553dc-dc07-4e68-907e-4f6702e8e233", "data_set": 10, "submitted": true, "caption": "", "link": "18_Dec_2012_11:44:00_058266", "user": 30, "date": "2012-12-18T11:44:00.058Z", "user_session": null, "min_contig": 200, "report_id": "18_Dec_2012_11_44_00_058266"}}, {"pk": 1353, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-18T21:31:43.914Z", "user_session": 33, "min_contig": null, "report_id": "18_Dec_2012_21_31_43_914234"}}, {"pk": 1354, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-19T11:05:01.163Z", "user_session": 33, "min_contig": null, "report_id": "19_Dec_2012_11_05_01_163327"}}, {"pk": 1355, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2012-12-21T20:56:02.903Z", "user_session": 33, "min_contig": null, "report_id": "21_Dec_2012_20_56_02_903274"}}, {"pk": 1356, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-24T15:40:07.862Z", "user_session": null, "min_contig": null, "report_id": "24_Dec_2012_15_40_07_862078"}}, {"pk": 1357, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-24T15:49:57.453Z", "user_session": null, "min_contig": null, "report_id": "24_Dec_2012_15_49_57_453520"}}, {"pk": 1358, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-24T17:45:57.442Z", "user_session": null, "min_contig": null, "report_id": "24_Dec_2012_17_45_57_442758"}}, {"pk": 1359, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-24T19:04:10.592Z", "user_session": null, "min_contig": null, "report_id": "24_Dec_2012_19_04_10_592855"}}, {"pk": 1360, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "c111fac6-8b50-45f6-8ba7-4caa62448907", "data_set": null, "submitted": true, "caption": "", "link": "25_Dec_2012_10:15:04_248911", "user": 30, "date": "2012-12-25T10:15:04.248Z", "user_session": null, "min_contig": 200, "report_id": "25_Dec_2012_10_15_04_248911"}}, {"pk": 1361, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-25T10:15:13.258Z", "user_session": null, "min_contig": null, "report_id": "25_Dec_2012_10_15_13_258292"}}, {"pk": 1362, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-25T11:09:35.993Z", "user_session": null, "min_contig": null, "report_id": "25_Dec_2012_11_09_35_993502"}}, {"pk": 1363, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-25T11:19:13.150Z", "user_session": null, "min_contig": null, "report_id": "25_Dec_2012_11_19_13_150576"}}, {"pk": 1366, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-26T12:53:13.469Z", "user_session": null, "min_contig": null, "report_id": "26_Dec_2012_12_53_13_469832"}}, {"pk": 1368, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-26T12:53:28.563Z", "user_session": null, "min_contig": null, "report_id": "26_Dec_2012_12_53_28_563693"}}, {"pk": 1370, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-26T16:33:13.328Z", "user_session": null, "min_contig": null, "report_id": "26_Dec_2012_16_33_13_328895"}}, {"pk": 1375, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-26T17:13:57.967Z", "user_session": null, "min_contig": null, "report_id": "26_Dec_2012_17_13_57_967815"}}, {"pk": 1376, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "afb51a49-1836-4ac5-8538-752dcbf9f9e3", "data_set": 2, "submitted": true, "caption": "Test", "link": "26_Dec_2012_17:23:40_830409_test", "user": 30, "date": "2012-12-26T17:23:40.830Z", "user_session": null, "min_contig": 200, "report_id": "26_Dec_2012_17_23_40_830409"}}, {"pk": 1379, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-26T17:30:40.478Z", "user_session": null, "min_contig": null, "report_id": "26_Dec_2012_17_30_40_478715"}}, {"pk": 1380, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-27T10:47:49.681Z", "user_session": null, "min_contig": null, "report_id": "27_Dec_2012_10_47_49_681002"}}, {"pk": 1381, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-27T10:48:25.830Z", "user_session": null, "min_contig": null, "report_id": "27_Dec_2012_10_48_25_830167"}}, {"pk": 1383, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-27T10:48:59.569Z", "user_session": null, "min_contig": null, "report_id": "27_Dec_2012_10_48_59_569019"}}, {"pk": 1384, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-27T13:40:51.648Z", "user_session": null, "min_contig": null, "report_id": "27_Dec_2012_13_40_51_648220"}}, {"pk": 1386, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-27T14:06:41.524Z", "user_session": null, "min_contig": null, "report_id": "27_Dec_2012_14_06_41_524156"}}, {"pk": 1387, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "676f79bf-4b3e-4a80-862b-b7ba60d01007", "data_set": 10, "submitted": true, "caption": "", "link": "27_Dec_2012_16:58:15_485259", "user": 30, "date": "2012-12-27T16:58:15.485Z", "user_session": null, "min_contig": 200, "report_id": "27_Dec_2012_16_58_15_485259"}}, {"pk": 1388, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "207da4f8-297f-4da9-83de-b8460931b84c", "data_set": 10, "submitted": true, "caption": "", "link": "27_Dec_2012_17:00:03_233533", "user": 30, "date": "2012-12-27T17:00:03.233Z", "user_session": null, "min_contig": 200, "report_id": "27_Dec_2012_17_00_03_233533"}}, {"pk": 1389, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:37:03.441Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_37_03_441698"}}, {"pk": 1390, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:37:07.519Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_37_07_519466"}}, {"pk": 1391, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:37:09.499Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_37_09_499827"}}, {"pk": 1392, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:38:16.388Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_38_16_388618"}}, {"pk": 1393, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:38:18.309Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_38_18_309837"}}, {"pk": 1394, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:38:49.516Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_38_49_516859"}}, {"pk": 1395, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:38:52.077Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_38_52_077288"}}, {"pk": 1396, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:38:52.925Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_38_52_925772"}}, {"pk": 1397, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:39:11.982Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_39_11_982921"}}, {"pk": 1398, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:39:31.122Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_39_31_122212"}}, {"pk": 1399, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:40:34.076Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_40_34_076642"}}, {"pk": 1400, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T07:40:38.187Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_07_40_38_187746"}}, {"pk": 1401, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T09:23:37.005Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_09_23_37_005248"}}, {"pk": 1403, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T14:40:38.935Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_14_40_38_935542"}}, {"pk": 1404, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": 30, "date": "2012-12-28T14:40:41.394Z", "user_session": null, "min_contig": null, "report_id": "28_Dec_2012_14_40_41_394142"}}, {"pk": 1405, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "38c84bd2-28b7-4cea-93ee-64d9899b6e1f", "data_set": 10, "submitted": true, "caption": "", "link": "20_Jan_2013_14:41:54_345265", "user": 30, "date": "2013-01-20T14:41:54.345Z", "user_session": null, "min_contig": 200, "report_id": "20_Jan_2013_14_41_54_345265"}}, {"pk": 1406, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "41c6d765-1fdb-40a6-9094-e46a0ddd2b7f", "data_set": 10, "submitted": true, "caption": "", "link": "20_Jan_2013_16:13:38_845092", "user": 30, "date": "2013-01-20T16:13:38.845Z", "user_session": null, "min_contig": 200, "report_id": "20_Jan_2013_16_13_38_845092"}}, {"pk": 1408, "model": "quast_app.quastsession", "fields": {"comment": "", "task_id": "c7f0d906-8d74-40f8-ac9d-0cc2da139b88", "data_set": 10, "submitted": true, "caption": "", "link": "20_Jan_2013_16:29:58_844555", "user": 30, "date": "2013-01-20T16:29:58.844Z", "user_session": null, "min_contig": 200, "report_id": "20_Jan_2013_16_29_58_844555"}}, {"pk": 1409, "model": "quast_app.quastsession", "fields": {"comment": null, "task_id": null, "data_set": null, "submitted": false, "caption": null, "link": null, "user": null, "date": "2013-02-04T15:08:31.211Z", "user_session": 34, "min_contig": null, "report_id": "04_Feb_2013_15_08_31_211232"}}, {"pk": 1, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 2, "contigs_file": 1}}, {"pk": 2, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 2, "contigs_file": 2}}, {"pk": 3, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 2, "contigs_file": 3}}, {"pk": 4, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 3, "contigs_file": 4}}, {"pk": 5, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 3, "contigs_file": 5}}, {"pk": 6, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 4, "contigs_file": 6}}, {"pk": 7, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 4, "contigs_file": 7}}, {"pk": 8, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 5, "contigs_file": 6}}, {"pk": 9, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 5, "contigs_file": 7}}, {"pk": 12, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 6, "contigs_file": 6}}, {"pk": 13, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 6, "contigs_file": 7}}, {"pk": 14, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 7, "contigs_file": 6}}, {"pk": 15, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 7, "contigs_file": 7}}, {"pk": 16, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 8, "contigs_file": 6}}, {"pk": 17, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 8, "contigs_file": 7}}, {"pk": 18, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 9, "contigs_file": 6}}, {"pk": 19, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 9, "contigs_file": 7}}, {"pk": 20, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 10, "contigs_file": 6}}, {"pk": 21, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 10, "contigs_file": 7}}, {"pk": 22, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 11, "contigs_file": 6}}, {"pk": 23, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 11, "contigs_file": 7}}, {"pk": 24, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 12, "contigs_file": 6}}, {"pk": 25, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 12, "contigs_file": 7}}, {"pk": 26, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 13, "contigs_file": 6}}, {"pk": 27, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 13, "contigs_file": 7}}, {"pk": 28, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 14, "contigs_file": 6}}, {"pk": 29, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 14, "contigs_file": 7}}, {"pk": 30, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 15, "contigs_file": 6}}, {"pk": 31, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 15, "contigs_file": 7}}, {"pk": 32, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 16, "contigs_file": 6}}, {"pk": 33, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 16, "contigs_file": 7}}, {"pk": 34, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 51, "contigs_file": 8}}, {"pk": 35, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 52, "contigs_file": 8}}, {"pk": 36, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 53, "contigs_file": 8}}, {"pk": 40, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 54, "contigs_file": 8}}, {"pk": 41, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 55, "contigs_file": 8}}, {"pk": 105, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 126, "contigs_file": 11}}, {"pk": 106, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 126, "contigs_file": 12}}, {"pk": 107, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 127, "contigs_file": 11}}, {"pk": 108, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 127, "contigs_file": 12}}, {"pk": 109, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 128, "contigs_file": 13}}, {"pk": 110, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 128, "contigs_file": 14}}, {"pk": 111, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 129, "contigs_file": 15}}, {"pk": 112, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 129, "contigs_file": 16}}, {"pk": 113, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 193, "contigs_file": 29}}, {"pk": 114, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 305, "contigs_file": 33}}, {"pk": 115, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 306, "contigs_file": 34}}, {"pk": 116, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 336, "contigs_file": 35}}, {"pk": 117, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 336, "contigs_file": 36}}, {"pk": 118, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 340, "contigs_file": 37}}, {"pk": 119, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 340, "contigs_file": 38}}, {"pk": 120, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 407, "contigs_file": 39}}, {"pk": 121, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 407, "contigs_file": 40}}, {"pk": 122, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 410, "contigs_file": 41}}, {"pk": 123, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 410, "contigs_file": 42}}, {"pk": 124, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 430, "contigs_file": 43}}, {"pk": 125, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 430, "contigs_file": 44}}, {"pk": 126, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 431, "contigs_file": 45}}, {"pk": 127, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 431, "contigs_file": 46}}, {"pk": 128, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 432, "contigs_file": 47}}, {"pk": 129, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 432, "contigs_file": 48}}, {"pk": 130, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 433, "contigs_file": 49}}, {"pk": 133, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 437, "contigs_file": 52}}, {"pk": 134, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 450, "contigs_file": 53}}, {"pk": 135, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 450, "contigs_file": 54}}, {"pk": 136, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 452, "contigs_file": 55}}, {"pk": 137, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 451, "contigs_file": 56}}, {"pk": 138, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 457, "contigs_file": 64}}, {"pk": 139, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 463, "contigs_file": 65}}, {"pk": 140, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 463, "contigs_file": 66}}, {"pk": 141, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 463, "contigs_file": 67}}, {"pk": 142, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 463, "contigs_file": 68}}, {"pk": 143, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 463, "contigs_file": 69}}, {"pk": 144, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 463, "contigs_file": 70}}, {"pk": 145, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 464, "contigs_file": 71}}, {"pk": 146, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 464, "contigs_file": 72}}, {"pk": 147, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 464, "contigs_file": 73}}, {"pk": 148, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 464, "contigs_file": 74}}, {"pk": 149, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 465, "contigs_file": 75}}, {"pk": 150, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 465, "contigs_file": 76}}, {"pk": 151, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 465, "contigs_file": 77}}, {"pk": 152, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 465, "contigs_file": 78}}, {"pk": 153, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 465, "contigs_file": 79}}, {"pk": 154, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 465, "contigs_file": 80}}, {"pk": 155, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 465, "contigs_file": 81}}, {"pk": 156, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 467, "contigs_file": 82}}, {"pk": 157, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 469, "contigs_file": 83}}, {"pk": 158, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 470, "contigs_file": 84}}, {"pk": 159, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 470, "contigs_file": 85}}, {"pk": 160, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 470, "contigs_file": 86}}, {"pk": 161, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 470, "contigs_file": 87}}, {"pk": 162, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 471, "contigs_file": 88}}, {"pk": 163, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 471, "contigs_file": 89}}, {"pk": 164, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 471, "contigs_file": 90}}, {"pk": 165, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 471, "contigs_file": 91}}, {"pk": 166, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 474, "contigs_file": 92}}, {"pk": 167, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 475, "contigs_file": 93}}, {"pk": 168, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 477, "contigs_file": 94}}, {"pk": 169, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 477, "contigs_file": 95}}, {"pk": 170, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 477, "contigs_file": 96}}, {"pk": 171, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 479, "contigs_file": 97}}, {"pk": 172, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 480, "contigs_file": 98}}, {"pk": 173, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 481, "contigs_file": 99}}, {"pk": 174, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 484, "contigs_file": 100}}, {"pk": 175, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 488, "contigs_file": 101}}, {"pk": 176, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 488, "contigs_file": 102}}, {"pk": 177, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 488, "contigs_file": 103}}, {"pk": 178, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 490, "contigs_file": 104}}, {"pk": 179, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 490, "contigs_file": 105}}, {"pk": 180, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 490, "contigs_file": 106}}, {"pk": 181, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 491, "contigs_file": 107}}, {"pk": 182, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 491, "contigs_file": 108}}, {"pk": 183, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 491, "contigs_file": 109}}, {"pk": 184, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 492, "contigs_file": 110}}, {"pk": 185, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 492, "contigs_file": 111}}, {"pk": 186, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 492, "contigs_file": 112}}, {"pk": 187, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 495, "contigs_file": 113}}, {"pk": 188, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 496, "contigs_file": 114}}, {"pk": 189, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 497, "contigs_file": 115}}, {"pk": 190, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 498, "contigs_file": 116}}, {"pk": 191, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 531, "contigs_file": 117}}, {"pk": 192, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 531, "contigs_file": 118}}, {"pk": 193, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 531, "contigs_file": 119}}, {"pk": 194, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 531, "contigs_file": 120}}, {"pk": 195, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 540, "contigs_file": 121}}, {"pk": 196, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 540, "contigs_file": 122}}, {"pk": 197, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 540, "contigs_file": 123}}, {"pk": 198, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 729, "contigs_file": 127}}, {"pk": 279, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1268, "contigs_file": 221}}, {"pk": 280, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1270, "contigs_file": 222}}, {"pk": 281, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1273, "contigs_file": 223}}, {"pk": 282, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1276, "contigs_file": 224}}, {"pk": 283, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1291, "contigs_file": 226}}, {"pk": 284, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1294, "contigs_file": 227}}, {"pk": 285, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1297, "contigs_file": 228}}, {"pk": 286, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1305, "contigs_file": 229}}, {"pk": 287, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1305, "contigs_file": 230}}, {"pk": 288, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1305, "contigs_file": 231}}, {"pk": 289, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1309, "contigs_file": 232}}, {"pk": 290, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1309, "contigs_file": 233}}, {"pk": 291, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1309, "contigs_file": 234}}, {"pk": 292, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1312, "contigs_file": 235}}, {"pk": 293, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1314, "contigs_file": 236}}, {"pk": 294, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1316, "contigs_file": 237}}, {"pk": 295, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1319, "contigs_file": 238}}, {"pk": 296, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1324, "contigs_file": 239}}, {"pk": 297, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1350, "contigs_file": 240}}, {"pk": 298, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1352, "contigs_file": 241}}, {"pk": 299, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1360, "contigs_file": 242}}, {"pk": 300, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1360, "contigs_file": 243}}, {"pk": 301, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1376, "contigs_file": 244}}, {"pk": 302, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1376, "contigs_file": 245}}, {"pk": 303, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1387, "contigs_file": 246}}, {"pk": 304, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1388, "contigs_file": 247}}, {"pk": 305, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1405, "contigs_file": 248}}, {"pk": 306, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1406, "contigs_file": 249}}, {"pk": 307, "model": "quast_app.quastsession_contigsfile", "fields": {"quast_session": 1408, "contigs_file": 250}}, {"pk": 1, "model": "south.migrationhistory", "fields": {"applied": "2012-11-18T22:17:58.689Z", "app_name": "quast_app", "migration": "0001_initial"}}, {"pk": 2, "model": "south.migrationhistory", "fields": {"applied": "2012-11-18T22:19:29.441Z", "app_name": "quast_app", "migration": "0002_email"}}, {"pk": 3, "model": "south.migrationhistory", "fields": {"applied": "2012-11-19T13:43:18.029Z", "app_name": "quast_app", "migration": "0003_comment"}}, {"pk": 4, "model": "south.migrationhistory", "fields": {"applied": "2012-11-19T15:52:27.558Z", "app_name": "quast_app", "migration": "0004_caption"}}, {"pk": 5, "model": "south.migrationhistory", "fields": {"applied": "2012-11-28T06:45:40.835Z", "app_name": "quast_app", "migration": "0005_min_contig"}}, {"pk": 6, "model": "south.migrationhistory", "fields": {"applied": "2012-11-28T06:54:50.482Z", "app_name": "quast_app", "migration": "0006_submited"}}, {"pk": 7, "model": "south.migrationhistory", "fields": {"applied": "2012-11-28T10:07:29.219Z", "app_name": "quast_app", "migration": "0007_unique_for_report_id"}}, {"pk": 8, "model": "south.migrationhistory", "fields": {"applied": "2012-12-11T18:55:59.557Z", "app_name": "quast_app", "migration": "0008_link_and_report_id"}}, {"pk": 9, "model": "south.migrationhistory", "fields": {"applied": "2012-12-11T18:55:59.576Z", "app_name": "quast_app", "migration": "0009_password"}}, {"pk": 10, "model": "south.migrationhistory", "fields": {"applied": "2012-12-12T16:53:55.305Z", "app_name": "quast_app", "migration": "0010_is_authorized"}}, {"pk": 11, "model": "south.migrationhistory", "fields": {"applied": "2012-12-13T00:03:40.155Z", "app_name": "quast_app", "migration": "0011_unique_user_session_key"}}, {"pk": 12, "model": "south.migrationhistory", "fields": {"applied": "2012-12-13T09:44:25.921Z", "app_name": "quast_app", "migration": "0012_authorised_to_authorized"}}, {"pk": 13, "model": "south.migrationhistory", "fields": {"applied": "2012-12-13T13:39:02.865Z", "app_name": "quast_app", "migration": "0013_user__change_user_session__rename_data_set"}}, {"pk": 14, "model": "south.migrationhistory", "fields": {"applied": "2012-12-13T15:44:46.724Z", "app_name": "quast_app", "migration": "0014_user_input_dirname_null__remove_field_is_authorized"}}, {"pk": 15, "model": "south.migrationhistory", "fields": {"applied": "2012-12-15T23:39:36.623Z", "app_name": "quast_app", "migration": "0015_default_data_set"}}, {"pk": 16, "model": "south.migrationhistory", "fields": {"applied": "2013-02-04T15:24:42.094Z", "app_name": "quast_app", "migration": "0016_max_lenght_256_to_255"}}]